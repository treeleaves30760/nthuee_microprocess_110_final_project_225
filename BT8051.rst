                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Sat Jan 22 20:05:57 2022
                              5 ;--------------------------------------------------------
                              6 	.module BT8051
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _CY
                             14 	.globl _AC
                             15 	.globl _F0
                             16 	.globl _RS1
                             17 	.globl _RS0
                             18 	.globl _OV
                             19 	.globl _F1
                             20 	.globl _P
                             21 	.globl _PS
                             22 	.globl _PT1
                             23 	.globl _PX1
                             24 	.globl _PT0
                             25 	.globl _PX0
                             26 	.globl _RD
                             27 	.globl _WR
                             28 	.globl _T1
                             29 	.globl _T0
                             30 	.globl _INT1
                             31 	.globl _INT0
                             32 	.globl _TXD
                             33 	.globl _RXD
                             34 	.globl _P3_7
                             35 	.globl _P3_6
                             36 	.globl _P3_5
                             37 	.globl _P3_4
                             38 	.globl _P3_3
                             39 	.globl _P3_2
                             40 	.globl _P3_1
                             41 	.globl _P3_0
                             42 	.globl _EA
                             43 	.globl _ES
                             44 	.globl _ET1
                             45 	.globl _EX1
                             46 	.globl _ET0
                             47 	.globl _EX0
                             48 	.globl _P2_7
                             49 	.globl _P2_6
                             50 	.globl _P2_5
                             51 	.globl _P2_4
                             52 	.globl _P2_3
                             53 	.globl _P2_2
                             54 	.globl _P2_1
                             55 	.globl _P2_0
                             56 	.globl _SM0
                             57 	.globl _SM1
                             58 	.globl _SM2
                             59 	.globl _REN
                             60 	.globl _TB8
                             61 	.globl _RB8
                             62 	.globl _TI
                             63 	.globl _RI
                             64 	.globl _P1_7
                             65 	.globl _P1_6
                             66 	.globl _P1_5
                             67 	.globl _P1_4
                             68 	.globl _P1_3
                             69 	.globl _P1_2
                             70 	.globl _P1_1
                             71 	.globl _P1_0
                             72 	.globl _TF1
                             73 	.globl _TR1
                             74 	.globl _TF0
                             75 	.globl _TR0
                             76 	.globl _IE1
                             77 	.globl _IT1
                             78 	.globl _IE0
                             79 	.globl _IT0
                             80 	.globl _P0_7
                             81 	.globl _P0_6
                             82 	.globl _P0_5
                             83 	.globl _P0_4
                             84 	.globl _P0_3
                             85 	.globl _P0_2
                             86 	.globl _P0_1
                             87 	.globl _P0_0
                             88 	.globl _B
                             89 	.globl _ACC
                             90 	.globl _PSW
                             91 	.globl _IP
                             92 	.globl _P3
                             93 	.globl _IE
                             94 	.globl _P2
                             95 	.globl _SBUF
                             96 	.globl _SCON
                             97 	.globl _P1
                             98 	.globl _TH1
                             99 	.globl _TH0
                            100 	.globl _TL1
                            101 	.globl _TL0
                            102 	.globl _TMOD
                            103 	.globl _TCON
                            104 	.globl _PCON
                            105 	.globl _DPH
                            106 	.globl _DPL
                            107 	.globl _SP
                            108 	.globl _P0
                            109 	.globl _ser_int
                            110 	.globl _rx
                            111 	.globl _tx
                            112 ;--------------------------------------------------------
                            113 ; special function registers
                            114 ;--------------------------------------------------------
                            115 	.area RSEG    (ABS,DATA)
   0000                     116 	.org 0x0000
                    0080    117 _P0	=	0x0080
                    0081    118 _SP	=	0x0081
                    0082    119 _DPL	=	0x0082
                    0083    120 _DPH	=	0x0083
                    0087    121 _PCON	=	0x0087
                    0088    122 _TCON	=	0x0088
                    0089    123 _TMOD	=	0x0089
                    008A    124 _TL0	=	0x008a
                    008B    125 _TL1	=	0x008b
                    008C    126 _TH0	=	0x008c
                    008D    127 _TH1	=	0x008d
                    0090    128 _P1	=	0x0090
                    0098    129 _SCON	=	0x0098
                    0099    130 _SBUF	=	0x0099
                    00A0    131 _P2	=	0x00a0
                    00A8    132 _IE	=	0x00a8
                    00B0    133 _P3	=	0x00b0
                    00B8    134 _IP	=	0x00b8
                    00D0    135 _PSW	=	0x00d0
                    00E0    136 _ACC	=	0x00e0
                    00F0    137 _B	=	0x00f0
                            138 ;--------------------------------------------------------
                            139 ; special function bits
                            140 ;--------------------------------------------------------
                            141 	.area RSEG    (ABS,DATA)
   0000                     142 	.org 0x0000
                    0080    143 _P0_0	=	0x0080
                    0081    144 _P0_1	=	0x0081
                    0082    145 _P0_2	=	0x0082
                    0083    146 _P0_3	=	0x0083
                    0084    147 _P0_4	=	0x0084
                    0085    148 _P0_5	=	0x0085
                    0086    149 _P0_6	=	0x0086
                    0087    150 _P0_7	=	0x0087
                    0088    151 _IT0	=	0x0088
                    0089    152 _IE0	=	0x0089
                    008A    153 _IT1	=	0x008a
                    008B    154 _IE1	=	0x008b
                    008C    155 _TR0	=	0x008c
                    008D    156 _TF0	=	0x008d
                    008E    157 _TR1	=	0x008e
                    008F    158 _TF1	=	0x008f
                    0090    159 _P1_0	=	0x0090
                    0091    160 _P1_1	=	0x0091
                    0092    161 _P1_2	=	0x0092
                    0093    162 _P1_3	=	0x0093
                    0094    163 _P1_4	=	0x0094
                    0095    164 _P1_5	=	0x0095
                    0096    165 _P1_6	=	0x0096
                    0097    166 _P1_7	=	0x0097
                    0098    167 _RI	=	0x0098
                    0099    168 _TI	=	0x0099
                    009A    169 _RB8	=	0x009a
                    009B    170 _TB8	=	0x009b
                    009C    171 _REN	=	0x009c
                    009D    172 _SM2	=	0x009d
                    009E    173 _SM1	=	0x009e
                    009F    174 _SM0	=	0x009f
                    00A0    175 _P2_0	=	0x00a0
                    00A1    176 _P2_1	=	0x00a1
                    00A2    177 _P2_2	=	0x00a2
                    00A3    178 _P2_3	=	0x00a3
                    00A4    179 _P2_4	=	0x00a4
                    00A5    180 _P2_5	=	0x00a5
                    00A6    181 _P2_6	=	0x00a6
                    00A7    182 _P2_7	=	0x00a7
                    00A8    183 _EX0	=	0x00a8
                    00A9    184 _ET0	=	0x00a9
                    00AA    185 _EX1	=	0x00aa
                    00AB    186 _ET1	=	0x00ab
                    00AC    187 _ES	=	0x00ac
                    00AF    188 _EA	=	0x00af
                    00B0    189 _P3_0	=	0x00b0
                    00B1    190 _P3_1	=	0x00b1
                    00B2    191 _P3_2	=	0x00b2
                    00B3    192 _P3_3	=	0x00b3
                    00B4    193 _P3_4	=	0x00b4
                    00B5    194 _P3_5	=	0x00b5
                    00B6    195 _P3_6	=	0x00b6
                    00B7    196 _P3_7	=	0x00b7
                    00B0    197 _RXD	=	0x00b0
                    00B1    198 _TXD	=	0x00b1
                    00B2    199 _INT0	=	0x00b2
                    00B3    200 _INT1	=	0x00b3
                    00B4    201 _T0	=	0x00b4
                    00B5    202 _T1	=	0x00b5
                    00B6    203 _WR	=	0x00b6
                    00B7    204 _RD	=	0x00b7
                    00B8    205 _PX0	=	0x00b8
                    00B9    206 _PT0	=	0x00b9
                    00BA    207 _PX1	=	0x00ba
                    00BB    208 _PT1	=	0x00bb
                    00BC    209 _PS	=	0x00bc
                    00D0    210 _P	=	0x00d0
                    00D1    211 _F1	=	0x00d1
                    00D2    212 _OV	=	0x00d2
                    00D3    213 _RS0	=	0x00d3
                    00D4    214 _RS1	=	0x00d4
                    00D5    215 _F0	=	0x00d5
                    00D6    216 _AC	=	0x00d6
                    00D7    217 _CY	=	0x00d7
                            218 ;--------------------------------------------------------
                            219 ; overlayable register banks
                            220 ;--------------------------------------------------------
                            221 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     222 	.ds 8
                            223 ;--------------------------------------------------------
                            224 ; internal ram data
                            225 ;--------------------------------------------------------
                            226 	.area DSEG    (DATA)
                            227 ;--------------------------------------------------------
                            228 ; overlayable items in internal ram 
                            229 ;--------------------------------------------------------
                            230 	.area OSEG    (OVR,DATA)
                            231 ;--------------------------------------------------------
                            232 ; Stack segment in internal ram 
                            233 ;--------------------------------------------------------
                            234 	.area	SSEG	(DATA)
   0008                     235 __start__stack:
   0008                     236 	.ds	1
                            237 
                            238 ;--------------------------------------------------------
                            239 ; indirectly addressable internal ram data
                            240 ;--------------------------------------------------------
                            241 	.area ISEG    (DATA)
                            242 ;--------------------------------------------------------
                            243 ; absolute internal ram data
                            244 ;--------------------------------------------------------
                            245 	.area IABS    (ABS,DATA)
                            246 	.area IABS    (ABS,DATA)
                            247 ;--------------------------------------------------------
                            248 ; bit data
                            249 ;--------------------------------------------------------
                            250 	.area BSEG    (BIT)
                            251 ;--------------------------------------------------------
                            252 ; paged external ram data
                            253 ;--------------------------------------------------------
                            254 	.area PSEG    (PAG,XDATA)
                            255 ;--------------------------------------------------------
                            256 ; external ram data
                            257 ;--------------------------------------------------------
                            258 	.area XSEG    (XDATA)
                            259 ;--------------------------------------------------------
                            260 ; absolute external ram data
                            261 ;--------------------------------------------------------
                            262 	.area XABS    (ABS,XDATA)
                            263 ;--------------------------------------------------------
                            264 ; external initialized ram data
                            265 ;--------------------------------------------------------
                            266 	.area XISEG   (XDATA)
                            267 	.area HOME    (CODE)
                            268 	.area GSINIT0 (CODE)
                            269 	.area GSINIT1 (CODE)
                            270 	.area GSINIT2 (CODE)
                            271 	.area GSINIT3 (CODE)
                            272 	.area GSINIT4 (CODE)
                            273 	.area GSINIT5 (CODE)
                            274 	.area GSINIT  (CODE)
                            275 	.area GSFINAL (CODE)
                            276 	.area CSEG    (CODE)
                            277 ;--------------------------------------------------------
                            278 ; interrupt vector 
                            279 ;--------------------------------------------------------
                            280 	.area HOME    (CODE)
   0000                     281 __interrupt_vect:
   0000 02 00 08            282 	ljmp	__sdcc_gsinit_startup
                            283 ;--------------------------------------------------------
                            284 ; global & static initialisations
                            285 ;--------------------------------------------------------
                            286 	.area HOME    (CODE)
                            287 	.area GSINIT  (CODE)
                            288 	.area GSFINAL (CODE)
                            289 	.area GSINIT  (CODE)
                            290 	.globl __sdcc_gsinit_startup
                            291 	.globl __sdcc_program_startup
                            292 	.globl __start__stack
                            293 	.globl __mcs51_genXINIT
                            294 	.globl __mcs51_genXRAMCLEAR
                            295 	.globl __mcs51_genRAMCLEAR
                            296 	.area GSFINAL (CODE)
   0061 02 00 03            297 	ljmp	__sdcc_program_startup
                            298 ;--------------------------------------------------------
                            299 ; Home
                            300 ;--------------------------------------------------------
                            301 	.area HOME    (CODE)
                            302 	.area HOME    (CODE)
   0003                     303 __sdcc_program_startup:
   0003 12 00 64            304 	lcall	_main
                            305 ;	return from main will lock up
   0006 80 FE               306 	sjmp .
                            307 ;--------------------------------------------------------
                            308 ; code
                            309 ;--------------------------------------------------------
                            310 	.area CSEG    (CODE)
                            311 ;------------------------------------------------------------
                            312 ;Allocation info for local variables in function 'main'
                            313 ;------------------------------------------------------------
                            314 ;get                       Allocated to registers r2 
                            315 ;------------------------------------------------------------
                            316 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:8: void main()
                            317 ;	-----------------------------------------
                            318 ;	 function main
                            319 ;	-----------------------------------------
   0064                     320 _main:
                    0002    321 	ar2 = 0x02
                    0003    322 	ar3 = 0x03
                    0004    323 	ar4 = 0x04
                    0005    324 	ar5 = 0x05
                    0006    325 	ar6 = 0x06
                    0007    326 	ar7 = 0x07
                    0000    327 	ar0 = 0x00
                    0001    328 	ar1 = 0x01
                            329 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:11: ser_int();
   0064 12 00 9E            330 	lcall	_ser_int
                            331 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:12: while(1) {
   0067                     332 00116$:
                            333 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:13: get=rx();
   0067 12 00 AD            334 	lcall	_rx
   006A AA 82               335 	mov	r2,dpl
                            336 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:14: tx('R');
   006C 75 82 52            337 	mov	dpl,#0x52
   006F C0 02               338 	push	ar2
   0071 12 00 B6            339 	lcall	_tx
   0074 D0 02               340 	pop	ar2
                            341 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:15: if(get == 'F') {
   0076 BA 46 05            342 	cjne	r2,#0x46,00113$
                            343 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:17: P0 = 0x01;
   0079 75 80 01            344 	mov	_P0,#0x01
   007C 80 E9               345 	sjmp	00116$
   007E                     346 00113$:
                            347 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:18: } else if (get == 'R') {
   007E BA 52 05            348 	cjne	r2,#0x52,00110$
                            349 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:20: P0 = 0x02;
   0081 75 80 02            350 	mov	_P0,#0x02
   0084 80 E1               351 	sjmp	00116$
   0086                     352 00110$:
                            353 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:22: } else if (get == 'W') {
   0086 BA 57 05            354 	cjne	r2,#0x57,00107$
                            355 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:24: P0 = 0x03;
   0089 75 80 03            356 	mov	_P0,#0x03
   008C 80 D9               357 	sjmp	00116$
   008E                     358 00107$:
                            359 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:26: } else if (get == 'L') {
   008E BA 4C 05            360 	cjne	r2,#0x4C,00104$
                            361 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:28: P0 = 0x04;
   0091 75 80 04            362 	mov	_P0,#0x04
   0094 80 D1               363 	sjmp	00116$
   0096                     364 00104$:
                            365 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:30: } else if (get == 'S') {
   0096 BA 53 CE            366 	cjne	r2,#0x53,00116$
                            367 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:32: P0 = 0x00;
   0099 75 80 00            368 	mov	_P0,#0x00
   009C 80 C9               369 	sjmp	00116$
                            370 ;------------------------------------------------------------
                            371 ;Allocation info for local variables in function 'ser_int'
                            372 ;------------------------------------------------------------
                            373 ;------------------------------------------------------------
                            374 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:37: void ser_int()
                            375 ;	-----------------------------------------
                            376 ;	 function ser_int
                            377 ;	-----------------------------------------
   009E                     378 _ser_int:
                            379 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:39: SCON=0x50;
   009E 75 98 50            380 	mov	_SCON,#0x50
                            381 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:40: TMOD=0x20;
   00A1 75 89 20            382 	mov	_TMOD,#0x20
                            383 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:41: TH1=TL1=0xFD;
   00A4 75 8B FD            384 	mov	_TL1,#0xFD
   00A7 75 8D FD            385 	mov	_TH1,#0xFD
                            386 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:42: TR1=1;
   00AA D2 8E               387 	setb	_TR1
   00AC 22                  388 	ret
                            389 ;------------------------------------------------------------
                            390 ;Allocation info for local variables in function 'rx'
                            391 ;------------------------------------------------------------
                            392 ;------------------------------------------------------------
                            393 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:45: unsigned char rx()
                            394 ;	-----------------------------------------
                            395 ;	 function rx
                            396 ;	-----------------------------------------
   00AD                     397 _rx:
                            398 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:47: while(RI==0);
   00AD                     399 00101$:
                            400 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:48: RI=0;
   00AD 10 98 02            401 	jbc	_RI,00108$
   00B0 80 FB               402 	sjmp	00101$
   00B2                     403 00108$:
                            404 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:49: return SBUF;
   00B2 85 99 82            405 	mov	dpl,_SBUF
   00B5 22                  406 	ret
                            407 ;------------------------------------------------------------
                            408 ;Allocation info for local variables in function 'tx'
                            409 ;------------------------------------------------------------
                            410 ;a                         Allocated to registers 
                            411 ;------------------------------------------------------------
                            412 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:52: void tx(unsigned char a)
                            413 ;	-----------------------------------------
                            414 ;	 function tx
                            415 ;	-----------------------------------------
   00B6                     416 _tx:
   00B6 85 82 99            417 	mov	_SBUF,dpl
                            418 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:55: while(TI==0);
   00B9                     419 00101$:
                            420 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\BT8051.c:56: TI=0;
   00B9 10 99 02            421 	jbc	_TI,00108$
   00BC 80 FB               422 	sjmp	00101$
   00BE                     423 00108$:
   00BE 22                  424 	ret
                            425 	.area CSEG    (CODE)
                            426 	.area CONST   (CODE)
                            427 	.area XINIT   (CODE)
                            428 	.area CABS    (ABS,CODE)
