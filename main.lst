                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.0.1 #6083 (Dec 17 2010) (MINGW32)
                              4 ; This file was generated Sat Jan 22 22:18:00 2022
                              5 ;--------------------------------------------------------
                              6 	.module main
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _finish_setup
                             14 	.globl _server_initial
                             15 	.globl _server_action
                             16 	.globl _Write7219ALL
                             17 	.globl _time_count_add
                             18 	.globl _timer0_isr
                             19 	.globl _time_initial
                             20 	.globl _delay_ms
                             21 	.globl _SSD_Initial
                             22 	.globl _Write7219
                             23 	.globl _sendbyte
                             24 	.globl _TF2
                             25 	.globl _EXF2
                             26 	.globl _RCLK
                             27 	.globl _TCLK
                             28 	.globl _EXEN2
                             29 	.globl _TR2
                             30 	.globl _C_T2
                             31 	.globl _CP_RL2
                             32 	.globl _T2CON_7
                             33 	.globl _T2CON_6
                             34 	.globl _T2CON_5
                             35 	.globl _T2CON_4
                             36 	.globl _T2CON_3
                             37 	.globl _T2CON_2
                             38 	.globl _T2CON_1
                             39 	.globl _T2CON_0
                             40 	.globl _PT2
                             41 	.globl _ET2
                             42 	.globl _CY
                             43 	.globl _AC
                             44 	.globl _F0
                             45 	.globl _RS1
                             46 	.globl _RS0
                             47 	.globl _OV
                             48 	.globl _F1
                             49 	.globl _P
                             50 	.globl _PS
                             51 	.globl _PT1
                             52 	.globl _PX1
                             53 	.globl _PT0
                             54 	.globl _PX0
                             55 	.globl _RD
                             56 	.globl _WR
                             57 	.globl _T1
                             58 	.globl _T0
                             59 	.globl _INT1
                             60 	.globl _INT0
                             61 	.globl _TXD
                             62 	.globl _RXD
                             63 	.globl _P3_7
                             64 	.globl _P3_6
                             65 	.globl _P3_5
                             66 	.globl _P3_4
                             67 	.globl _P3_3
                             68 	.globl _P3_2
                             69 	.globl _P3_1
                             70 	.globl _P3_0
                             71 	.globl _EA
                             72 	.globl _ES
                             73 	.globl _ET1
                             74 	.globl _EX1
                             75 	.globl _ET0
                             76 	.globl _EX0
                             77 	.globl _P2_7
                             78 	.globl _P2_6
                             79 	.globl _P2_5
                             80 	.globl _P2_4
                             81 	.globl _P2_3
                             82 	.globl _P2_2
                             83 	.globl _P2_1
                             84 	.globl _P2_0
                             85 	.globl _SM0
                             86 	.globl _SM1
                             87 	.globl _SM2
                             88 	.globl _REN
                             89 	.globl _TB8
                             90 	.globl _RB8
                             91 	.globl _TI
                             92 	.globl _RI
                             93 	.globl _P1_7
                             94 	.globl _P1_6
                             95 	.globl _P1_5
                             96 	.globl _P1_4
                             97 	.globl _P1_3
                             98 	.globl _P1_2
                             99 	.globl _P1_1
                            100 	.globl _P1_0
                            101 	.globl _TF1
                            102 	.globl _TR1
                            103 	.globl _TF0
                            104 	.globl _TR0
                            105 	.globl _IE1
                            106 	.globl _IT1
                            107 	.globl _IE0
                            108 	.globl _IT0
                            109 	.globl _P0_7
                            110 	.globl _P0_6
                            111 	.globl _P0_5
                            112 	.globl _P0_4
                            113 	.globl _P0_3
                            114 	.globl _P0_2
                            115 	.globl _P0_1
                            116 	.globl _P0_0
                            117 	.globl _TH2
                            118 	.globl _TL2
                            119 	.globl _RCAP2H
                            120 	.globl _RCAP2L
                            121 	.globl _T2CON
                            122 	.globl _B
                            123 	.globl _ACC
                            124 	.globl _PSW
                            125 	.globl _IP
                            126 	.globl _P3
                            127 	.globl _IE
                            128 	.globl _P2
                            129 	.globl _SBUF
                            130 	.globl _SCON
                            131 	.globl _P1
                            132 	.globl _TH1
                            133 	.globl _TH0
                            134 	.globl _TL1
                            135 	.globl _TL0
                            136 	.globl _TMOD
                            137 	.globl _TCON
                            138 	.globl _PCON
                            139 	.globl _DPH
                            140 	.globl _DPL
                            141 	.globl _SP
                            142 	.globl _P0
                            143 	.globl _i
                            144 	.globl _BT_data_flag
                            145 	.globl _BT_data
                            146 	.globl _change_time
                            147 	.globl _Action
                            148 	.globl _PWM_state
                            149 	.globl _T_sec
                            150 	.globl _T_min
                            151 	.globl _T_hour
                            152 	.globl _ms1
                            153 	.globl _time_count
                            154 	.globl _temp
                            155 	.globl _toff
                            156 	.globl _ton
                            157 	.globl _dutytime
                            158 ;--------------------------------------------------------
                            159 ; special function registers
                            160 ;--------------------------------------------------------
                            161 	.area RSEG    (ABS,DATA)
   0000                     162 	.org 0x0000
                    0080    163 _P0	=	0x0080
                    0081    164 _SP	=	0x0081
                    0082    165 _DPL	=	0x0082
                    0083    166 _DPH	=	0x0083
                    0087    167 _PCON	=	0x0087
                    0088    168 _TCON	=	0x0088
                    0089    169 _TMOD	=	0x0089
                    008A    170 _TL0	=	0x008a
                    008B    171 _TL1	=	0x008b
                    008C    172 _TH0	=	0x008c
                    008D    173 _TH1	=	0x008d
                    0090    174 _P1	=	0x0090
                    0098    175 _SCON	=	0x0098
                    0099    176 _SBUF	=	0x0099
                    00A0    177 _P2	=	0x00a0
                    00A8    178 _IE	=	0x00a8
                    00B0    179 _P3	=	0x00b0
                    00B8    180 _IP	=	0x00b8
                    00D0    181 _PSW	=	0x00d0
                    00E0    182 _ACC	=	0x00e0
                    00F0    183 _B	=	0x00f0
                    00C8    184 _T2CON	=	0x00c8
                    00CA    185 _RCAP2L	=	0x00ca
                    00CB    186 _RCAP2H	=	0x00cb
                    00CC    187 _TL2	=	0x00cc
                    00CD    188 _TH2	=	0x00cd
                            189 ;--------------------------------------------------------
                            190 ; special function bits
                            191 ;--------------------------------------------------------
                            192 	.area RSEG    (ABS,DATA)
   0000                     193 	.org 0x0000
                    0080    194 _P0_0	=	0x0080
                    0081    195 _P0_1	=	0x0081
                    0082    196 _P0_2	=	0x0082
                    0083    197 _P0_3	=	0x0083
                    0084    198 _P0_4	=	0x0084
                    0085    199 _P0_5	=	0x0085
                    0086    200 _P0_6	=	0x0086
                    0087    201 _P0_7	=	0x0087
                    0088    202 _IT0	=	0x0088
                    0089    203 _IE0	=	0x0089
                    008A    204 _IT1	=	0x008a
                    008B    205 _IE1	=	0x008b
                    008C    206 _TR0	=	0x008c
                    008D    207 _TF0	=	0x008d
                    008E    208 _TR1	=	0x008e
                    008F    209 _TF1	=	0x008f
                    0090    210 _P1_0	=	0x0090
                    0091    211 _P1_1	=	0x0091
                    0092    212 _P1_2	=	0x0092
                    0093    213 _P1_3	=	0x0093
                    0094    214 _P1_4	=	0x0094
                    0095    215 _P1_5	=	0x0095
                    0096    216 _P1_6	=	0x0096
                    0097    217 _P1_7	=	0x0097
                    0098    218 _RI	=	0x0098
                    0099    219 _TI	=	0x0099
                    009A    220 _RB8	=	0x009a
                    009B    221 _TB8	=	0x009b
                    009C    222 _REN	=	0x009c
                    009D    223 _SM2	=	0x009d
                    009E    224 _SM1	=	0x009e
                    009F    225 _SM0	=	0x009f
                    00A0    226 _P2_0	=	0x00a0
                    00A1    227 _P2_1	=	0x00a1
                    00A2    228 _P2_2	=	0x00a2
                    00A3    229 _P2_3	=	0x00a3
                    00A4    230 _P2_4	=	0x00a4
                    00A5    231 _P2_5	=	0x00a5
                    00A6    232 _P2_6	=	0x00a6
                    00A7    233 _P2_7	=	0x00a7
                    00A8    234 _EX0	=	0x00a8
                    00A9    235 _ET0	=	0x00a9
                    00AA    236 _EX1	=	0x00aa
                    00AB    237 _ET1	=	0x00ab
                    00AC    238 _ES	=	0x00ac
                    00AF    239 _EA	=	0x00af
                    00B0    240 _P3_0	=	0x00b0
                    00B1    241 _P3_1	=	0x00b1
                    00B2    242 _P3_2	=	0x00b2
                    00B3    243 _P3_3	=	0x00b3
                    00B4    244 _P3_4	=	0x00b4
                    00B5    245 _P3_5	=	0x00b5
                    00B6    246 _P3_6	=	0x00b6
                    00B7    247 _P3_7	=	0x00b7
                    00B0    248 _RXD	=	0x00b0
                    00B1    249 _TXD	=	0x00b1
                    00B2    250 _INT0	=	0x00b2
                    00B3    251 _INT1	=	0x00b3
                    00B4    252 _T0	=	0x00b4
                    00B5    253 _T1	=	0x00b5
                    00B6    254 _WR	=	0x00b6
                    00B7    255 _RD	=	0x00b7
                    00B8    256 _PX0	=	0x00b8
                    00B9    257 _PT0	=	0x00b9
                    00BA    258 _PX1	=	0x00ba
                    00BB    259 _PT1	=	0x00bb
                    00BC    260 _PS	=	0x00bc
                    00D0    261 _P	=	0x00d0
                    00D1    262 _F1	=	0x00d1
                    00D2    263 _OV	=	0x00d2
                    00D3    264 _RS0	=	0x00d3
                    00D4    265 _RS1	=	0x00d4
                    00D5    266 _F0	=	0x00d5
                    00D6    267 _AC	=	0x00d6
                    00D7    268 _CY	=	0x00d7
                    00AD    269 _ET2	=	0x00ad
                    00BD    270 _PT2	=	0x00bd
                    00C8    271 _T2CON_0	=	0x00c8
                    00C9    272 _T2CON_1	=	0x00c9
                    00CA    273 _T2CON_2	=	0x00ca
                    00CB    274 _T2CON_3	=	0x00cb
                    00CC    275 _T2CON_4	=	0x00cc
                    00CD    276 _T2CON_5	=	0x00cd
                    00CE    277 _T2CON_6	=	0x00ce
                    00CF    278 _T2CON_7	=	0x00cf
                    00C8    279 _CP_RL2	=	0x00c8
                    00C9    280 _C_T2	=	0x00c9
                    00CA    281 _TR2	=	0x00ca
                    00CB    282 _EXEN2	=	0x00cb
                    00CC    283 _TCLK	=	0x00cc
                    00CD    284 _RCLK	=	0x00cd
                    00CE    285 _EXF2	=	0x00ce
                    00CF    286 _TF2	=	0x00cf
                            287 ;--------------------------------------------------------
                            288 ; overlayable register banks
                            289 ;--------------------------------------------------------
                            290 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     291 	.ds 8
                            292 	.area REG_BANK_1	(REL,OVR,DATA)
   0000                     293 	.ds 8
                            294 ;--------------------------------------------------------
                            295 ; internal ram data
                            296 ;--------------------------------------------------------
                            297 	.area DSEG    (DATA)
   0000                     298 _dutytime::
   0000                     299 	.ds 2
   0002                     300 _ton::
   0002                     301 	.ds 2
   0004                     302 _toff::
   0004                     303 	.ds 2
   0006                     304 _temp::
   0006                     305 	.ds 2
   0008                     306 _time_count::
   0008                     307 	.ds 2
   000A                     308 _ms1::
   000A                     309 	.ds 2
   000C                     310 _T_hour::
   000C                     311 	.ds 1
   000D                     312 _T_min::
   000D                     313 	.ds 1
   000E                     314 _T_sec::
   000E                     315 	.ds 1
   000F                     316 _PWM_state::
   000F                     317 	.ds 1
   0010                     318 _Action::
   0010                     319 	.ds 1
   0011                     320 _change_time::
   0011                     321 	.ds 1
   0012                     322 _BT_data::
   0012                     323 	.ds 1
   0013                     324 _BT_data_flag::
   0013                     325 	.ds 1
   0014                     326 _i::
   0014                     327 	.ds 1
                            328 ;--------------------------------------------------------
                            329 ; overlayable items in internal ram 
                            330 ;--------------------------------------------------------
                            331 	.area OSEG    (OVR,DATA)
                            332 ;--------------------------------------------------------
                            333 ; Stack segment in internal ram 
                            334 ;--------------------------------------------------------
                            335 	.area	SSEG	(DATA)
   0000                     336 __start__stack:
   0000                     337 	.ds	1
                            338 
                            339 ;--------------------------------------------------------
                            340 ; indirectly addressable internal ram data
                            341 ;--------------------------------------------------------
                            342 	.area ISEG    (DATA)
                            343 ;--------------------------------------------------------
                            344 ; absolute internal ram data
                            345 ;--------------------------------------------------------
                            346 	.area IABS    (ABS,DATA)
                            347 	.area IABS    (ABS,DATA)
                            348 ;--------------------------------------------------------
                            349 ; bit data
                            350 ;--------------------------------------------------------
                            351 	.area BSEG    (BIT)
                            352 ;--------------------------------------------------------
                            353 ; paged external ram data
                            354 ;--------------------------------------------------------
                            355 	.area PSEG    (PAG,XDATA)
                            356 ;--------------------------------------------------------
                            357 ; external ram data
                            358 ;--------------------------------------------------------
                            359 	.area XSEG    (XDATA)
                            360 ;--------------------------------------------------------
                            361 ; absolute external ram data
                            362 ;--------------------------------------------------------
                            363 	.area XABS    (ABS,XDATA)
                            364 ;--------------------------------------------------------
                            365 ; external initialized ram data
                            366 ;--------------------------------------------------------
                            367 	.area XISEG   (XDATA)
                            368 	.area HOME    (CODE)
                            369 	.area GSINIT0 (CODE)
                            370 	.area GSINIT1 (CODE)
                            371 	.area GSINIT2 (CODE)
                            372 	.area GSINIT3 (CODE)
                            373 	.area GSINIT4 (CODE)
                            374 	.area GSINIT5 (CODE)
                            375 	.area GSINIT  (CODE)
                            376 	.area GSFINAL (CODE)
                            377 	.area CSEG    (CODE)
                            378 ;--------------------------------------------------------
                            379 ; interrupt vector 
                            380 ;--------------------------------------------------------
                            381 	.area HOME    (CODE)
   0000                     382 __interrupt_vect:
   0000 02s00r00            383 	ljmp	__sdcc_gsinit_startup
   0003 32                  384 	reti
   0004                     385 	.ds	7
   000B 02s01r0C            386 	ljmp	_timer0_isr
   000E                     387 	.ds	5
   0013 32                  388 	reti
   0014                     389 	.ds	7
   001B 02s01r89            390 	ljmp	_time_count_add
                            391 ;--------------------------------------------------------
                            392 ; global & static initialisations
                            393 ;--------------------------------------------------------
                            394 	.area HOME    (CODE)
                            395 	.area GSINIT  (CODE)
                            396 	.area GSFINAL (CODE)
                            397 	.area GSINIT  (CODE)
                            398 	.globl __sdcc_gsinit_startup
                            399 	.globl __sdcc_program_startup
                            400 	.globl __start__stack
                            401 	.globl __mcs51_genXINIT
                            402 	.globl __mcs51_genXRAMCLEAR
                            403 	.globl __mcs51_genRAMCLEAR
                            404 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:14: unsigned int dutytime = 35536; //65536-45536就是責任週期
   0000 75*00 D0            405 	mov	_dutytime,#0xD0
   0003 75*01 8A            406 	mov	(_dutytime + 1),#0x8A
                            407 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:15: unsigned int ton = 15000; //高電位比例=50%
   0006 75*02 98            408 	mov	_ton,#0x98
   0009 75*03 3A            409 	mov	(_ton + 1),#0x3A
                            410 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:16: unsigned int toff = 15000; //低電位比例=50%
   000C 75*04 98            411 	mov	_toff,#0x98
   000F 75*05 3A            412 	mov	(_toff + 1),#0x3A
                            413 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:18: unsigned int time_count = 0;
   0012 E4                  414 	clr	a
   0013 F5*08               415 	mov	_time_count,a
   0015 F5*09               416 	mov	(_time_count + 1),a
                            417 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:19: unsigned int ms1 = 905; // 透過修正timer1的時間修正系統性的時間計算誤差
   0017 75*0A 89            418 	mov	_ms1,#0x89
   001A 75*0B 03            419 	mov	(_ms1 + 1),#0x03
                            420 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:20: signed char T_hour = 0, T_min = 0, T_sec = 0;
   001D 75*0C 00            421 	mov	_T_hour,#0x00
                            422 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:20: unsigned char PWM_state = 0;
   0020 75*0D 00            423 	mov	_T_min,#0x00
                            424 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:20: signed char T_hour = 0, T_min = 0, T_sec = 0;
   0023 75*0E 00            425 	mov	_T_sec,#0x00
                            426 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:21: unsigned char PWM_state = 0;
   0026 75*0F 00            427 	mov	_PWM_state,#0x00
                            428 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:22: unsigned char Action = 0; // 1: open, 2: close
   0029 75*10 00            429 	mov	_Action,#0x00
                            430 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:23: unsigned char change_time = 0;
   002C 75*11 00            431 	mov	_change_time,#0x00
                            432 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:24: char BT_data = ' ';
   002F 75*12 20            433 	mov	_BT_data,#0x20
                            434 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:25: char BT_data_flag = 0;
   0032 75*13 00            435 	mov	_BT_data_flag,#0x00
                            436 	.area GSFINAL (CODE)
   0000 02s00r1E            437 	ljmp	__sdcc_program_startup
                            438 ;--------------------------------------------------------
                            439 ; Home
                            440 ;--------------------------------------------------------
                            441 	.area HOME    (CODE)
                            442 	.area HOME    (CODE)
   001E                     443 __sdcc_program_startup:
   001E 12s02rC7            444 	lcall	_main
                            445 ;	return from main will lock up
   0021 80 FE               446 	sjmp .
                            447 ;--------------------------------------------------------
                            448 ; code
                            449 ;--------------------------------------------------------
                            450 	.area CSEG    (CODE)
                            451 ;------------------------------------------------------------
                            452 ;Allocation info for local variables in function 'sendbyte'
                            453 ;------------------------------------------------------------
                            454 ;dat                       Allocated to stack - offset -3
                            455 ;address                   Allocated to registers r2 
                            456 ;i                         Allocated to registers r3 
                            457 ;------------------------------------------------------------
                            458 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:28: void sendbyte(unsigned char address,unsigned char dat) {
                            459 ;	-----------------------------------------
                            460 ;	 function sendbyte
                            461 ;	-----------------------------------------
   0000                     462 _sendbyte:
                    0002    463 	ar2 = 0x02
                    0003    464 	ar3 = 0x03
                    0004    465 	ar4 = 0x04
                    0005    466 	ar5 = 0x05
                    0006    467 	ar6 = 0x06
                    0007    468 	ar7 = 0x07
                    0000    469 	ar0 = 0x00
                    0001    470 	ar1 = 0x01
   0000 C0*00               471 	push	_bp
   0002 85 81*00            472 	mov	_bp,sp
   0005 AA 82               473 	mov	r2,dpl
                            474 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:30: for (i=0;i<8;i++) {
   0007 7B 00               475 	mov	r3,#0x00
   0009                     476 00101$:
   0009 BB 08 00            477 	cjne	r3,#0x08,00117$
   000C                     478 00117$:
   000C 50 0C               479 	jnc	00104$
                            480 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:31: CLK=0;
   000E C2 B6               481 	clr	_P3_6
                            482 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:32: DIN=(address&0x80);
                            483 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:33: address<<=1;
   0010 EA                  484 	mov	a,r2
   0011 2A                  485 	add	a,r2
   0012 92 B4               486 	mov	_P3_4,c
   0014 FA                  487 	mov	r2,a
                            488 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:34: CLK=1;
   0015 D2 B6               489 	setb	_P3_6
                            490 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:30: for (i=0;i<8;i++) {
   0017 0B                  491 	inc	r3
   0018 80 EF               492 	sjmp	00101$
   001A                     493 00104$:
                            494 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:36: for (i=0;i<8;i++) {
   001A 7A 00               495 	mov	r2,#0x00
   001C                     496 00105$:
   001C BA 08 00            497 	cjne	r2,#0x08,00119$
   001F                     498 00119$:
   001F 50 19               499 	jnc	00109$
                            500 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:37: CLK=0;
   0021 C2 B6               501 	clr	_P3_6
                            502 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:38: DIN=(dat&0x80);
   0023 E5*00               503 	mov	a,_bp
   0025 24 FD               504 	add	a,#0xfd
   0027 F8                  505 	mov	r0,a
   0028 E6                  506 	mov	a,@r0
   0029 33                  507 	rlc	a
   002A 92 B4               508 	mov	_P3_4,c
                            509 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:39: dat<<=1;
   002C E5*00               510 	mov	a,_bp
   002E 24 FD               511 	add	a,#0xfd
   0030 F8                  512 	mov	r0,a
   0031 E6                  513 	mov	a,@r0
   0032 25 E0               514 	add	a,acc
   0034 F6                  515 	mov	@r0,a
                            516 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:40: CLK=1;
   0035 D2 B6               517 	setb	_P3_6
                            518 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:36: for (i=0;i<8;i++) {
   0037 0A                  519 	inc	r2
   0038 80 E2               520 	sjmp	00105$
   003A                     521 00109$:
   003A D0*00               522 	pop	_bp
   003C 22                  523 	ret
                            524 ;------------------------------------------------------------
                            525 ;Allocation info for local variables in function 'Write7219'
                            526 ;------------------------------------------------------------
                            527 ;dat                       Allocated to stack - offset -3
                            528 ;address                   Allocated to registers r2 
                            529 ;cnt                       Allocated to registers r3 
                            530 ;------------------------------------------------------------
                            531 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:44: void Write7219(unsigned char address,unsigned char dat) {
                            532 ;	-----------------------------------------
                            533 ;	 function Write7219
                            534 ;	-----------------------------------------
   003D                     535 _Write7219:
   003D C0*00               536 	push	_bp
   003F 85 81*00            537 	mov	_bp,sp
   0042 AA 82               538 	mov	r2,dpl
                            539 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:46: LOAD=0;
   0044 C2 B5               540 	clr	_P3_5
                            541 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:47: for(cnt=1;cnt<=matrixnum;cnt++) sendbyte(address,dat);
   0046 7B 01               542 	mov	r3,#0x01
   0048                     543 00103$:
   0048 C0 02               544 	push	ar2
   004A C0 03               545 	push	ar3
   004C E5*00               546 	mov	a,_bp
   004E 24 FD               547 	add	a,#0xfd
   0050 F8                  548 	mov	r0,a
   0051 E6                  549 	mov	a,@r0
   0052 C0 E0               550 	push	acc
   0054 8A 82               551 	mov	dpl,r2
   0056 12s00r00            552 	lcall	_sendbyte
   0059 15 81               553 	dec	sp
   005B D0 03               554 	pop	ar3
   005D D0 02               555 	pop	ar2
   005F DB E7               556 	djnz	r3,00103$
                            557 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:48: LOAD=1;                  
   0061 D2 B5               558 	setb	_P3_5
   0063 D0*00               559 	pop	_bp
   0065 22                  560 	ret
                            561 ;------------------------------------------------------------
                            562 ;Allocation info for local variables in function 'SSD_Initial'
                            563 ;------------------------------------------------------------
                            564 ;i                         Allocated to registers r2 
                            565 ;------------------------------------------------------------
                            566 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:51: void SSD_Initial(void) {
                            567 ;	-----------------------------------------
                            568 ;	 function SSD_Initial
                            569 ;	-----------------------------------------
   0066                     570 _SSD_Initial:
                            571 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:53: Write7219(SHUT_DOWN,0x01);
   0066 74 01               572 	mov	a,#0x01
   0068 C0 E0               573 	push	acc
   006A 75 82 0C            574 	mov	dpl,#0x0C
   006D 12s00r3D            575 	lcall	_Write7219
   0070 15 81               576 	dec	sp
                            577 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:54: Write7219(DISPLAY_TEST,0x00);
   0072 E4                  578 	clr	a
   0073 C0 E0               579 	push	acc
   0075 75 82 0F            580 	mov	dpl,#0x0F
   0078 12s00r3D            581 	lcall	_Write7219
   007B 15 81               582 	dec	sp
                            583 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:55: Write7219(DECODE_MODE,0xff);
   007D 74 FF               584 	mov	a,#0xFF
   007F C0 E0               585 	push	acc
   0081 75 82 09            586 	mov	dpl,#0x09
   0084 12s00r3D            587 	lcall	_Write7219
   0087 15 81               588 	dec	sp
                            589 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:56: Write7219(SCAN_LIMIT,0x07);
   0089 74 07               590 	mov	a,#0x07
   008B C0 E0               591 	push	acc
   008D 75 82 0B            592 	mov	dpl,#0x0B
   0090 12s00r3D            593 	lcall	_Write7219
   0093 15 81               594 	dec	sp
                            595 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:57: Write7219(INTENSITY,0x00);
   0095 E4                  596 	clr	a
   0096 C0 E0               597 	push	acc
   0098 75 82 0A            598 	mov	dpl,#0x0A
   009B 12s00r3D            599 	lcall	_Write7219
   009E 15 81               600 	dec	sp
                            601 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:58: for(i=1;i<=8;i++) Write7219(i,0x0f);
   00A0 7A 01               602 	mov	r2,#0x01
   00A2                     603 00101$:
   00A2 74 08               604 	mov	a,#0x08
   00A4 B5 02 00            605 	cjne	a,ar2,00110$
   00A7                     606 00110$:
   00A7 40 12               607 	jc	00105$
   00A9 C0 02               608 	push	ar2
   00AB 74 0F               609 	mov	a,#0x0F
   00AD C0 E0               610 	push	acc
   00AF 8A 82               611 	mov	dpl,r2
   00B1 12s00r3D            612 	lcall	_Write7219
   00B4 15 81               613 	dec	sp
   00B6 D0 02               614 	pop	ar2
   00B8 0A                  615 	inc	r2
   00B9 80 E7               616 	sjmp	00101$
   00BB                     617 00105$:
   00BB 22                  618 	ret
                            619 ;------------------------------------------------------------
                            620 ;Allocation info for local variables in function 'delay_ms'
                            621 ;------------------------------------------------------------
                            622 ;ms                        Allocated to registers r2 r3 
                            623 ;i                         Allocated to registers r4 r5 
                            624 ;j                         Allocated to registers r6 
                            625 ;------------------------------------------------------------
                            626 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:61: void delay_ms(int ms) {
                            627 ;	-----------------------------------------
                            628 ;	 function delay_ms
                            629 ;	-----------------------------------------
   00BC                     630 _delay_ms:
   00BC AA 82               631 	mov	r2,dpl
   00BE AB 83               632 	mov	r3,dph
                            633 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:64: for (i = 0; i < ms; i++) {
   00C0 7C 00               634 	mov	r4,#0x00
   00C2 7D 00               635 	mov	r5,#0x00
   00C4                     636 00104$:
   00C4 C3                  637 	clr	c
   00C5 EC                  638 	mov	a,r4
   00C6 9A                  639 	subb	a,r2
   00C7 ED                  640 	mov	a,r5
   00C8 9B                  641 	subb	a,r3
   00C9 50 0B               642 	jnc	00108$
                            643 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:65: for (j = 0; j < 90; j++);
   00CB 7E 5A               644 	mov	r6,#0x5A
   00CD                     645 00103$:
   00CD DE FE               646 	djnz	r6,00103$
                            647 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:64: for (i = 0; i < ms; i++) {
   00CF 0C                  648 	inc	r4
   00D0 BC 00 F1            649 	cjne	r4,#0x00,00104$
   00D3 0D                  650 	inc	r5
   00D4 80 EE               651 	sjmp	00104$
   00D6                     652 00108$:
   00D6 22                  653 	ret
                            654 ;------------------------------------------------------------
                            655 ;Allocation info for local variables in function 'time_initial'
                            656 ;------------------------------------------------------------
                            657 ;------------------------------------------------------------
                            658 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:70: void time_initial(void) {
                            659 ;	-----------------------------------------
                            660 ;	 function time_initial
                            661 ;	-----------------------------------------
   00D7                     662 _time_initial:
                            663 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:71: TMOD = 0x11;  // Set Timer 1 to  mode 0 & Timer 0 mode 1. (16-bit timer)
   00D7 75 89 11            664 	mov	_TMOD,#0x11
                            665 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:72: IE|=0x02; //開啟計時器中斷功能
   00DA 43 A8 02            666 	orl	_IE,#0x02
                            667 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:73: temp = 65536 - dutytime; //設定中斷一次的時間(預設是dutytime)
   00DD AA*00               668 	mov	r2,_dutytime
   00DF AB*01               669 	mov	r3,(_dutytime + 1)
   00E1 E4                  670 	clr	a
   00E2 FC                  671 	mov	r4,a
   00E3 FD                  672 	mov	r5,a
   00E4 C3                  673 	clr	c
   00E5 9A                  674 	subb	a,r2
   00E6 FA                  675 	mov	r2,a
   00E7 E4                  676 	clr	a
   00E8 9B                  677 	subb	a,r3
   00E9 FB                  678 	mov	r3,a
   00EA 74 01               679 	mov	a,#0x01
   00EC 9C                  680 	subb	a,r4
   00ED E4                  681 	clr	a
   00EE 9D                  682 	subb	a,r5
   00EF 8A*06               683 	mov	_temp,r2
   00F1 8B*07               684 	mov	(_temp + 1),r3
                            685 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:74: TH0 = temp / 256; //填入高八位
   00F3 AA*07               686 	mov	r2,(_temp + 1)
   00F5 8A 8C               687 	mov	_TH0,r2
                            688 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:75: TL0 = temp % 256; //填入低八位
   00F7 AA*06               689 	mov	r2,_temp
   00F9 8A 8A               690 	mov	_TL0,r2
                            691 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:76: TH1 = (65536-1000) / 256;   // Load initial higher 8 bits into Timer 1
   00FB 75 8D FC            692 	mov	_TH1,#0xFC
                            693 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:77: TL1 = (65536-1000) % 256;   // Load initial lower 8 bits into Timer 1
   00FE 75 8B 18            694 	mov	_TL1,#0x18
                            695 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:78: EA = 1;                // Enable all interrupt
   0101 D2 AF               696 	setb	_EA
                            697 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:79: ET0 = 1;            // Enable Timer 0 interrupt
   0103 D2 A9               698 	setb	_ET0
                            699 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:80: TR0 = 1;            // Start Timer 0
   0105 D2 8C               700 	setb	_TR0
                            701 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:81: ET1 = 1;            // Enable Timer 1 interrupt
   0107 D2 AB               702 	setb	_ET1
                            703 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:82: TR1 = 1;             // Start Timer 1
   0109 D2 8E               704 	setb	_TR1
   010B 22                  705 	ret
                            706 ;------------------------------------------------------------
                            707 ;Allocation info for local variables in function 'timer0_isr'
                            708 ;------------------------------------------------------------
                            709 ;------------------------------------------------------------
                            710 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:86: void timer0_isr(void) __interrupt TF0_VECTOR __using 1 {
                            711 ;	-----------------------------------------
                            712 ;	 function timer0_isr
                            713 ;	-----------------------------------------
   010C                     714 _timer0_isr:
                    000A    715 	ar2 = 0x0a
                    000B    716 	ar3 = 0x0b
                    000C    717 	ar4 = 0x0c
                    000D    718 	ar5 = 0x0d
                    000E    719 	ar6 = 0x0e
                    000F    720 	ar7 = 0x0f
                    0008    721 	ar0 = 0x08
                    0009    722 	ar1 = 0x09
   010C C0 E0               723 	push	acc
   010E C0 D0               724 	push	psw
   0110 75 D0 08            725 	mov	psw,#0x08
                            726 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:87: if (PWM_state == 1) {
   0113 74 01               727 	mov	a,#0x01
   0115 B5*0F 37            728 	cjne	a,_PWM_state,00112$
                            729 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:88: temp = 65536 - toff;
   0118 AA*04               730 	mov	r2,_toff
   011A AB*05               731 	mov	r3,(_toff + 1)
   011C E4                  732 	clr	a
   011D FC                  733 	mov	r4,a
   011E FD                  734 	mov	r5,a
   011F C3                  735 	clr	c
   0120 9A                  736 	subb	a,r2
   0121 FA                  737 	mov	r2,a
   0122 E4                  738 	clr	a
   0123 9B                  739 	subb	a,r3
   0124 FB                  740 	mov	r3,a
   0125 74 01               741 	mov	a,#0x01
   0127 9C                  742 	subb	a,r4
   0128 FC                  743 	mov	r4,a
   0129 E4                  744 	clr	a
   012A 9D                  745 	subb	a,r5
   012B FD                  746 	mov	r5,a
   012C 8A*06               747 	mov	_temp,r2
   012E 8B*07               748 	mov	(_temp + 1),r3
                            749 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:89: TH0 = temp / 256;
   0130 AA*07               750 	mov	r2,(_temp + 1)
   0132 8A 8C               751 	mov	_TH0,r2
                            752 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:90: TL0 = temp % 256;
   0134 AA*06               753 	mov	r2,_temp
   0136 7B 00               754 	mov	r3,#0x00
   0138 8A 8A               755 	mov	_TL0,r2
                            756 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:91: if (Action == 1) {
   013A 74 01               757 	mov	a,#0x01
   013C B5*10 04            758 	cjne	a,_Action,00104$
                            759 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:92: P2_7 = 0;
   013F C2 A7               760 	clr	_P2_7
   0141 80 07               761 	sjmp	00105$
   0143                     762 00104$:
                            763 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:93: } else if (Action == 2) {
   0143 74 02               764 	mov	a,#0x02
   0145 B5*10 02            765 	cjne	a,_Action,00105$
                            766 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:94: P2_6 = 0;
   0148 C2 A6               767 	clr	_P2_6
   014A                     768 00105$:
                            769 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:96: PWM_state = 0;
   014A 75*0F 00            770 	mov	_PWM_state,#0x00
   014D 80 35               771 	sjmp	00114$
   014F                     772 00112$:
                            773 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:98: temp = 65536 - ton;
   014F AA*02               774 	mov	r2,_ton
   0151 AB*03               775 	mov	r3,(_ton + 1)
   0153 E4                  776 	clr	a
   0154 FC                  777 	mov	r4,a
   0155 FD                  778 	mov	r5,a
   0156 C3                  779 	clr	c
   0157 9A                  780 	subb	a,r2
   0158 FA                  781 	mov	r2,a
   0159 E4                  782 	clr	a
   015A 9B                  783 	subb	a,r3
   015B FB                  784 	mov	r3,a
   015C 74 01               785 	mov	a,#0x01
   015E 9C                  786 	subb	a,r4
   015F FC                  787 	mov	r4,a
   0160 E4                  788 	clr	a
   0161 9D                  789 	subb	a,r5
   0162 FD                  790 	mov	r5,a
   0163 8A*06               791 	mov	_temp,r2
   0165 8B*07               792 	mov	(_temp + 1),r3
                            793 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:99: TH0 = temp / 256;
   0167 AA*07               794 	mov	r2,(_temp + 1)
   0169 8A 8C               795 	mov	_TH0,r2
                            796 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:100: TL0 = temp % 256;
   016B AA*06               797 	mov	r2,_temp
   016D 7B 00               798 	mov	r3,#0x00
   016F 8A 8A               799 	mov	_TL0,r2
                            800 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:101: if (Action == 1) {
   0171 74 01               801 	mov	a,#0x01
   0173 B5*10 04            802 	cjne	a,_Action,00109$
                            803 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:102: P2_7 = 1;
   0176 D2 A7               804 	setb	_P2_7
   0178 80 07               805 	sjmp	00110$
   017A                     806 00109$:
                            807 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:103: } else if (Action == 2) {
   017A 74 02               808 	mov	a,#0x02
   017C B5*10 02            809 	cjne	a,_Action,00110$
                            810 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:104: P2_6 = 1;
   017F D2 A6               811 	setb	_P2_6
   0181                     812 00110$:
                            813 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:106: PWM_state = 1;
   0181 75*0F 01            814 	mov	_PWM_state,#0x01
   0184                     815 00114$:
   0184 D0 D0               816 	pop	psw
   0186 D0 E0               817 	pop	acc
   0188 32                  818 	reti
                            819 ;	eliminated unneeded push/pop dpl
                            820 ;	eliminated unneeded push/pop dph
                            821 ;	eliminated unneeded push/pop b
                            822 ;------------------------------------------------------------
                            823 ;Allocation info for local variables in function 'time_count_add'
                            824 ;------------------------------------------------------------
                            825 ;------------------------------------------------------------
                            826 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:110: void time_count_add(void) __interrupt 3 {   // 10ms
                            827 ;	-----------------------------------------
                            828 ;	 function time_count_add
                            829 ;	-----------------------------------------
   0189                     830 _time_count_add:
                    0002    831 	ar2 = 0x02
                    0003    832 	ar3 = 0x03
                    0004    833 	ar4 = 0x04
                    0005    834 	ar5 = 0x05
                    0006    835 	ar6 = 0x06
                    0007    836 	ar7 = 0x07
                    0000    837 	ar0 = 0x00
                    0001    838 	ar1 = 0x01
   0189 C0 E0               839 	push	acc
   018B C0 D0               840 	push	psw
   018D 75 D0 00            841 	mov	psw,#0x00
                            842 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:111: TH1 = (65536 - 1000) / 256;
   0190 75 8D FC            843 	mov	_TH1,#0xFC
                            844 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:112: TL1 = (65536 - 1000) % 256; 
   0193 75 8B 18            845 	mov	_TL1,#0x18
                            846 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:113: time_count++;
   0196 05*08               847 	inc	_time_count
   0198 E4                  848 	clr	a
   0199 B5*08 02            849 	cjne	a,_time_count,00115$
   019C 05*09               850 	inc	(_time_count + 1)
   019E                     851 00115$:
                            852 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:114: if (time_count == ms1) {
   019E E5*0A               853 	mov	a,_ms1
   01A0 B5*08 28            854 	cjne	a,_time_count,00109$
   01A3 E5*0B               855 	mov	a,(_ms1 + 1)
   01A5 B5*09 23            856 	cjne	a,(_time_count + 1),00109$
                            857 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:115: time_count = 0;
   01A8 E4                  858 	clr	a
   01A9 F5*08               859 	mov	_time_count,a
   01AB F5*09               860 	mov	(_time_count + 1),a
                            861 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:116: if (++T_sec == 60) {
   01AD 05*0E               862 	inc	_T_sec
   01AF 74 3C               863 	mov	a,#0x3C
   01B1 B5*0E 17            864 	cjne	a,_T_sec,00109$
                            865 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:117: T_sec = 0;
   01B4 75*0E 00            866 	mov	_T_sec,#0x00
                            867 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:118: if (++T_min == 60) {
   01B7 05*0D               868 	inc	_T_min
   01B9 74 3C               869 	mov	a,#0x3C
   01BB B5*0D 0D            870 	cjne	a,_T_min,00109$
                            871 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:119: T_min = 0;
   01BE 75*0D 00            872 	mov	_T_min,#0x00
                            873 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:120: if (++T_hour == 24) {
   01C1 05*0C               874 	inc	_T_hour
   01C3 74 18               875 	mov	a,#0x18
   01C5 B5*0C 03            876 	cjne	a,_T_hour,00109$
                            877 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:121: T_hour = 0;
   01C8 75*0C 00            878 	mov	_T_hour,#0x00
   01CB                     879 00109$:
   01CB D0 D0               880 	pop	psw
   01CD D0 E0               881 	pop	acc
   01CF 32                  882 	reti
                            883 ;	eliminated unneeded push/pop dpl
                            884 ;	eliminated unneeded push/pop dph
                            885 ;	eliminated unneeded push/pop b
                            886 ;------------------------------------------------------------
                            887 ;Allocation info for local variables in function 'Write7219ALL'
                            888 ;------------------------------------------------------------
                            889 ;pl7                       Allocated to stack - offset -4
                            890 ;pl6                       Allocated to stack - offset -6
                            891 ;pl5                       Allocated to stack - offset -8
                            892 ;pl4                       Allocated to stack - offset -10
                            893 ;pl3                       Allocated to stack - offset -12
                            894 ;pl2                       Allocated to stack - offset -14
                            895 ;pl1                       Allocated to stack - offset -16
                            896 ;pl8                       Allocated to registers r2 r3 
                            897 ;------------------------------------------------------------
                            898 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:128: void Write7219ALL(int pl8, int pl7, int pl6, int pl5, int pl4, int pl3, int pl2, int pl1) {
                            899 ;	-----------------------------------------
                            900 ;	 function Write7219ALL
                            901 ;	-----------------------------------------
   01D0                     902 _Write7219ALL:
   01D0 C0*00               903 	push	_bp
   01D2 85 81*00            904 	mov	_bp,sp
   01D5 AA 82               905 	mov	r2,dpl
                            906 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:129: Write7219(8, pl8);
   01D7 C0 02               907 	push	ar2
   01D9 75 82 08            908 	mov	dpl,#0x08
   01DC 12s00r3D            909 	lcall	_Write7219
   01DF 15 81               910 	dec	sp
                            911 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:130: Write7219(7, pl7);
   01E1 E5*00               912 	mov	a,_bp
   01E3 24 FC               913 	add	a,#0xfc
   01E5 F8                  914 	mov	r0,a
   01E6 86 02               915 	mov	ar2,@r0
   01E8 C0 02               916 	push	ar2
   01EA 75 82 07            917 	mov	dpl,#0x07
   01ED 12s00r3D            918 	lcall	_Write7219
   01F0 15 81               919 	dec	sp
                            920 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:131: Write7219(6, pl6);
   01F2 E5*00               921 	mov	a,_bp
   01F4 24 FA               922 	add	a,#0xfa
   01F6 F8                  923 	mov	r0,a
   01F7 86 02               924 	mov	ar2,@r0
   01F9 C0 02               925 	push	ar2
   01FB 75 82 06            926 	mov	dpl,#0x06
   01FE 12s00r3D            927 	lcall	_Write7219
   0201 15 81               928 	dec	sp
                            929 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:132: Write7219(5, pl5);
   0203 E5*00               930 	mov	a,_bp
   0205 24 F8               931 	add	a,#0xf8
   0207 F8                  932 	mov	r0,a
   0208 86 02               933 	mov	ar2,@r0
   020A C0 02               934 	push	ar2
   020C 75 82 05            935 	mov	dpl,#0x05
   020F 12s00r3D            936 	lcall	_Write7219
   0212 15 81               937 	dec	sp
                            938 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:133: Write7219(4, pl4);
   0214 E5*00               939 	mov	a,_bp
   0216 24 F6               940 	add	a,#0xf6
   0218 F8                  941 	mov	r0,a
   0219 86 02               942 	mov	ar2,@r0
   021B C0 02               943 	push	ar2
   021D 75 82 04            944 	mov	dpl,#0x04
   0220 12s00r3D            945 	lcall	_Write7219
   0223 15 81               946 	dec	sp
                            947 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:134: Write7219(3, pl3);
   0225 E5*00               948 	mov	a,_bp
   0227 24 F4               949 	add	a,#0xf4
   0229 F8                  950 	mov	r0,a
   022A 86 02               951 	mov	ar2,@r0
   022C C0 02               952 	push	ar2
   022E 75 82 03            953 	mov	dpl,#0x03
   0231 12s00r3D            954 	lcall	_Write7219
   0234 15 81               955 	dec	sp
                            956 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:135: Write7219(2, pl2);
   0236 E5*00               957 	mov	a,_bp
   0238 24 F2               958 	add	a,#0xf2
   023A F8                  959 	mov	r0,a
   023B 86 02               960 	mov	ar2,@r0
   023D C0 02               961 	push	ar2
   023F 75 82 02            962 	mov	dpl,#0x02
   0242 12s00r3D            963 	lcall	_Write7219
   0245 15 81               964 	dec	sp
                            965 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:136: Write7219(1, pl1);
   0247 E5*00               966 	mov	a,_bp
   0249 24 F0               967 	add	a,#0xf0
   024B F8                  968 	mov	r0,a
   024C 86 02               969 	mov	ar2,@r0
   024E C0 02               970 	push	ar2
   0250 75 82 01            971 	mov	dpl,#0x01
   0253 12s00r3D            972 	lcall	_Write7219
   0256 15 81               973 	dec	sp
   0258 D0*00               974 	pop	_bp
   025A 22                  975 	ret
                            976 ;------------------------------------------------------------
                            977 ;Allocation info for local variables in function 'server_action'
                            978 ;------------------------------------------------------------
                            979 ;act                       Allocated to registers r2 r3 
                            980 ;------------------------------------------------------------
                            981 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:140: void server_action(int act) {
                            982 ;	-----------------------------------------
                            983 ;	 function server_action
                            984 ;	-----------------------------------------
   025B                     985 _server_action:
   025B AA 82               986 	mov	r2,dpl
   025D AB 83               987 	mov	r3,dph
                            988 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:141: Action = act;
   025F 8A*10               989 	mov	_Action,r2
                            990 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:142: if (act == 1) {
   0261 BA 01 16            991 	cjne	r2,#0x01,00104$
   0264 BB 00 13            992 	cjne	r3,#0x00,00104$
                            993 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:143: ton = 2100; //2.2ms 左轉
   0267 75*02 34            994 	mov	_ton,#0x34
   026A 75*03 08            995 	mov	(_ton + 1),#0x08
                            996 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:144: delay_ms(2000);
   026D 90 07 D0            997 	mov	dptr,#0x07D0
   0270 12s00rBC            998 	lcall	_delay_ms
                            999 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:145: ton = 1000;
   0273 75*02 E8           1000 	mov	_ton,#0xE8
   0276 75*03 03           1001 	mov	(_ton + 1),#0x03
   0279 22                 1002 	ret
   027A                    1003 00104$:
                           1004 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:146: } else if (act == 2) {
   027A BA 02 15           1005 	cjne	r2,#0x02,00106$
   027D BB 00 12           1006 	cjne	r3,#0x00,00106$
                           1007 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:147: ton = 1000;
   0280 75*02 E8           1008 	mov	_ton,#0xE8
   0283 75*03 03           1009 	mov	(_ton + 1),#0x03
                           1010 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:148: delay_ms(2000);
   0286 90 07 D0           1011 	mov	dptr,#0x07D0
   0289 12s00rBC           1012 	lcall	_delay_ms
                           1013 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:149: ton = 2100;
   028C 75*02 34           1014 	mov	_ton,#0x34
   028F 75*03 08           1015 	mov	(_ton + 1),#0x08
   0292                    1016 00106$:
   0292 22                 1017 	ret
                           1018 ;------------------------------------------------------------
                           1019 ;Allocation info for local variables in function 'server_initial'
                           1020 ;------------------------------------------------------------
                           1021 ;------------------------------------------------------------
                           1022 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:153: void server_initial(void) {
                           1023 ;	-----------------------------------------
                           1024 ;	 function server_initial
                           1025 ;	-----------------------------------------
   0293                    1026 _server_initial:
                           1027 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:154: server_action(1);
   0293 90 00 01           1028 	mov	dptr,#0x0001
   0296 12s02r5B           1029 	lcall	_server_action
                           1030 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:155: delay_ms(2000);
   0299 90 07 D0           1031 	mov	dptr,#0x07D0
   029C 12s00rBC           1032 	lcall	_delay_ms
                           1033 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:156: server_action(2);
   029F 90 00 02           1034 	mov	dptr,#0x0002
   02A2 02s02r5B           1035 	ljmp	_server_action
                           1036 ;------------------------------------------------------------
                           1037 ;Allocation info for local variables in function 'finish_setup'
                           1038 ;------------------------------------------------------------
                           1039 ;------------------------------------------------------------
                           1040 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:159: void finish_setup(void) {
                           1041 ;	-----------------------------------------
                           1042 ;	 function finish_setup
                           1043 ;	-----------------------------------------
   02A5                    1044 _finish_setup:
                           1045 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:160: P1 = 0xff;
   02A5 75 90 FF           1046 	mov	_P1,#0xFF
                           1047 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:161: for (i = 0; i < 10; i++) {
   02A8 75*14 00           1048 	mov	_i,#0x00
   02AB                    1049 00101$:
   02AB C3                 1050 	clr	c
   02AC E5*14              1051 	mov	a,_i
   02AE 64 80              1052 	xrl	a,#0x80
   02B0 94 8A              1053 	subb	a,#0x8a
   02B2 50 0F              1054 	jnc	00104$
                           1055 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:162: P1 = ~P1;
   02B4 E5 90              1056 	mov	a,_P1
   02B6 F4                 1057 	cpl	a
   02B7 F5 90              1058 	mov	_P1,a
                           1059 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:163: delay_ms(300);
   02B9 90 01 2C           1060 	mov	dptr,#0x012C
   02BC 12s00rBC           1061 	lcall	_delay_ms
                           1062 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:161: for (i = 0; i < 10; i++) {
   02BF 05*14              1063 	inc	_i
   02C1 80 E8              1064 	sjmp	00101$
   02C3                    1065 00104$:
                           1066 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:165: P1 = 0xff;
   02C3 75 90 FF           1067 	mov	_P1,#0xFF
   02C6 22                 1068 	ret
                           1069 ;------------------------------------------------------------
                           1070 ;Allocation info for local variables in function 'main'
                           1071 ;------------------------------------------------------------
                           1072 ;prebtn0                   Allocated to registers r2 
                           1073 ;prebtn1                   Allocated to registers r3 
                           1074 ;prebtn2                   Allocated to registers r4 
                           1075 ;prebtn3                   Allocated to registers r5 
                           1076 ;mode2_change_place        Allocated to stack - offset 1
                           1077 ;open_close_time           Allocated to stack - offset 2
                           1078 ;mode                      Allocated to stack - offset 8
                           1079 ;sloc0                     Allocated to stack - offset 9
                           1080 ;sloc1                     Allocated to stack - offset 10
                           1081 ;sloc2                     Allocated to stack - offset 11
                           1082 ;sloc3                     Allocated to stack - offset 16
                           1083 ;sloc4                     Allocated to stack - offset 12
                           1084 ;sloc5                     Allocated to stack - offset 14
                           1085 ;sloc6                     Allocated to stack - offset 16
                           1086 ;sloc7                     Allocated to stack - offset 18
                           1087 ;------------------------------------------------------------
                           1088 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:168: void main(void) {
                           1089 ;	-----------------------------------------
                           1090 ;	 function main
                           1091 ;	-----------------------------------------
   02C7                    1092 _main:
   02C7 C0*00              1093 	push	_bp
   02C9 E5 81              1094 	mov	a,sp
   02CB F5*00              1095 	mov	_bp,a
   02CD 24 13              1096 	add	a,#0x13
   02CF F5 81              1097 	mov	sp,a
                           1098 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:169: char prebtn0 = 0, prebtn1 = 0, prebtn2 = 0, prebtn3 = 0;
   02D1 7A 00              1099 	mov	r2,#0x00
   02D3 7B 00              1100 	mov	r3,#0x00
   02D5 7C 00              1101 	mov	r4,#0x00
   02D7 7D 00              1102 	mov	r5,#0x00
                           1103 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:170: char mode2_change_place = 0;
   02D9 A8*00              1104 	mov	r0,_bp
   02DB 08                 1105 	inc	r0
   02DC 76 00              1106 	mov	@r0,#0x00
                           1107 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:171: char open_close_time[6] = {8, 30, 0, 23, 30, 0}; //open: Hour, Minute, Second. close: Hour, Minute, Second.
   02DE E5*00              1108 	mov	a,_bp
   02E0 24 02              1109 	add	a,#0x02
   02E2 F8                 1110 	mov	r0,a
   02E3 76 08              1111 	mov	@r0,#0x08
   02E5 E8                 1112 	mov	a,r0
   02E6 04                 1113 	inc	a
   02E7 F9                 1114 	mov	r1,a
   02E8 77 1E              1115 	mov	@r1,#0x1E
   02EA 74 02              1116 	mov	a,#0x02
   02EC 28                 1117 	add	a,r0
   02ED FF                 1118 	mov	r7,a
   02EE C0 00              1119 	push	ar0
   02F0 A8 07              1120 	mov	r0,ar7
   02F2 76 00              1121 	mov	@r0,#0x00
   02F4 D0 00              1122 	pop	ar0
   02F6 C0 01              1123 	push	ar1
   02F8 E5*00              1124 	mov	a,_bp
   02FA 24 09              1125 	add	a,#0x09
   02FC F9                 1126 	mov	r1,a
   02FD 74 03              1127 	mov	a,#0x03
   02FF 28                 1128 	add	a,r0
   0300 F7                 1129 	mov	@r1,a
   0301 D0 01              1130 	pop	ar1
   0303 C0 00              1131 	push	ar0
   0305 E5*00              1132 	mov	a,_bp
   0307 24 09              1133 	add	a,#0x09
   0309 F8                 1134 	mov	r0,a
   030A 86 00              1135 	mov	ar0,@r0
   030C 76 17              1136 	mov	@r0,#0x17
   030E D0 00              1137 	pop	ar0
   0310 C0 01              1138 	push	ar1
   0312 E5*00              1139 	mov	a,_bp
   0314 24 0A              1140 	add	a,#0x0a
   0316 F9                 1141 	mov	r1,a
   0317 74 04              1142 	mov	a,#0x04
   0319 28                 1143 	add	a,r0
   031A F7                 1144 	mov	@r1,a
   031B D0 01              1145 	pop	ar1
   031D C0 00              1146 	push	ar0
   031F E5*00              1147 	mov	a,_bp
   0321 24 0A              1148 	add	a,#0x0a
   0323 F8                 1149 	mov	r0,a
   0324 86 00              1150 	mov	ar0,@r0
   0326 76 1E              1151 	mov	@r0,#0x1E
   0328 D0 00              1152 	pop	ar0
   032A C0 01              1153 	push	ar1
   032C E5*00              1154 	mov	a,_bp
   032E 24 0B              1155 	add	a,#0x0b
   0330 F9                 1156 	mov	r1,a
   0331 74 05              1157 	mov	a,#0x05
   0333 28                 1158 	add	a,r0
   0334 F7                 1159 	mov	@r1,a
   0335 D0 01              1160 	pop	ar1
   0337 C0 00              1161 	push	ar0
   0339 E5*00              1162 	mov	a,_bp
   033B 24 0B              1163 	add	a,#0x0b
   033D F8                 1164 	mov	r0,a
   033E 86 00              1165 	mov	ar0,@r0
   0340 76 00              1166 	mov	@r0,#0x00
                           1167 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:172: char mode = 1;
   0342 E5*00              1168 	mov	a,_bp
   0344 24 08              1169 	add	a,#0x08
   0346 F8                 1170 	mov	r0,a
   0347 76 01              1171 	mov	@r0,#0x01
   0349 D0 00              1172 	pop	ar0
                           1173 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:173: INT0 = 1; INT1 = 1; P2_0 = 1; P2_1 = 1;
   034B D2 B2              1174 	setb	_INT0
   034D D2 B3              1175 	setb	_INT1
   034F D2 A0              1176 	setb	_P2_0
   0351 D2 A1              1177 	setb	_P2_1
                           1178 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:174: ton = 1500;
   0353 75*02 DC           1179 	mov	_ton,#0xDC
   0356 75*03 05           1180 	mov	(_ton + 1),#0x05
                           1181 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:175: toff = 30000 - 1500;
   0359 75*04 54           1182 	mov	_toff,#0x54
   035C 75*05 6F           1183 	mov	(_toff + 1),#0x6F
                           1184 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:176: SSD_Initial();
   035F C0 02              1185 	push	ar2
   0361 C0 03              1186 	push	ar3
   0363 C0 04              1187 	push	ar4
   0365 C0 05              1188 	push	ar5
   0367 C0 07              1189 	push	ar7
   0369 C0 00              1190 	push	ar0
   036B C0 01              1191 	push	ar1
   036D 12s00r66           1192 	lcall	_SSD_Initial
                           1193 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:177: time_initial();
   0370 12s00rD7           1194 	lcall	_time_initial
                           1195 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:178: server_initial();
   0373 12s02r93           1196 	lcall	_server_initial
                           1197 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:179: finish_setup();
   0376 12s02rA5           1198 	lcall	_finish_setup
   0379 D0 01              1199 	pop	ar1
   037B D0 00              1200 	pop	ar0
   037D D0 07              1201 	pop	ar7
   037F D0 05              1202 	pop	ar5
   0381 D0 04              1203 	pop	ar4
   0383 D0 03              1204 	pop	ar3
   0385 D0 02              1205 	pop	ar2
                           1206 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:181: while (1) {
   0387                    1207 00301$:
                           1208 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:182: if (BT_data == '1') {
   0387 74 31              1209 	mov	a,#0x31
   0389 B5*12 27           1210 	cjne	a,_BT_data,00104$
                           1211 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:183: server_action(1);
   038C 90 00 01           1212 	mov	dptr,#0x0001
   038F C0 02              1213 	push	ar2
   0391 C0 03              1214 	push	ar3
   0393 C0 04              1215 	push	ar4
   0395 C0 05              1216 	push	ar5
   0397 C0 07              1217 	push	ar7
   0399 C0 00              1218 	push	ar0
   039B C0 01              1219 	push	ar1
   039D 12s02r5B           1220 	lcall	_server_action
   03A0 D0 01              1221 	pop	ar1
   03A2 D0 00              1222 	pop	ar0
   03A4 D0 07              1223 	pop	ar7
   03A6 D0 05              1224 	pop	ar5
   03A8 D0 04              1225 	pop	ar4
   03AA D0 03              1226 	pop	ar3
   03AC D0 02              1227 	pop	ar2
                           1228 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:184: BT_data = ' ';
   03AE 75*12 20           1229 	mov	_BT_data,#0x20
   03B1 80 2A              1230 	sjmp	00105$
   03B3                    1231 00104$:
                           1232 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:185: } else if (BT_data == '2') {
   03B3 74 32              1233 	mov	a,#0x32
   03B5 B5*12 25           1234 	cjne	a,_BT_data,00105$
                           1235 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:186: server_action(2);
   03B8 90 00 02           1236 	mov	dptr,#0x0002
   03BB C0 02              1237 	push	ar2
   03BD C0 03              1238 	push	ar3
   03BF C0 04              1239 	push	ar4
   03C1 C0 05              1240 	push	ar5
   03C3 C0 07              1241 	push	ar7
   03C5 C0 00              1242 	push	ar0
   03C7 C0 01              1243 	push	ar1
   03C9 12s02r5B           1244 	lcall	_server_action
   03CC D0 01              1245 	pop	ar1
   03CE D0 00              1246 	pop	ar0
   03D0 D0 07              1247 	pop	ar7
   03D2 D0 05              1248 	pop	ar5
   03D4 D0 04              1249 	pop	ar4
   03D6 D0 03              1250 	pop	ar3
   03D8 D0 02              1251 	pop	ar2
                           1252 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:187: BT_data = ' ';
   03DA 75*12 20           1253 	mov	_BT_data,#0x20
   03DD                    1254 00105$:
                           1255 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:190: if (INT0 == 0 && prebtn0 == 1) {
   03DD 30 B2 03           1256 	jnb	_INT0,00399$
   03E0 02s05r3D           1257 	ljmp	00141$
   03E3                    1258 00399$:
   03E3 BA 01 02           1259 	cjne	r2,#0x01,00400$
   03E6 80 03              1260 	sjmp	00401$
   03E8                    1261 00400$:
   03E8 02s05r3D           1262 	ljmp	00141$
   03EB                    1263 00401$:
                           1264 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:191: delay_ms(10);
   03EB 90 00 0A           1265 	mov	dptr,#0x000A
   03EE C0 03              1266 	push	ar3
   03F0 C0 04              1267 	push	ar4
   03F2 C0 05              1268 	push	ar5
   03F4 C0 07              1269 	push	ar7
   03F6 C0 00              1270 	push	ar0
   03F8 C0 01              1271 	push	ar1
   03FA 12s00rBC           1272 	lcall	_delay_ms
   03FD D0 01              1273 	pop	ar1
   03FF D0 00              1274 	pop	ar0
   0401 D0 07              1275 	pop	ar7
   0403 D0 05              1276 	pop	ar5
   0405 D0 04              1277 	pop	ar4
   0407 D0 03              1278 	pop	ar3
                           1279 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:192: if (INT0 == 0) {
   0409 30 B2 03           1280 	jnb	_INT0,00402$
   040C 02s05r3D           1281 	ljmp	00141$
   040F                    1282 00402$:
                           1283 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:193: if (mode == 1) { // 開燈
   040F C0 00              1284 	push	ar0
   0411 E5*00              1285 	mov	a,_bp
   0413 24 08              1286 	add	a,#0x08
   0415 F8                 1287 	mov	r0,a
   0416 B6 01 02           1288 	cjne	@r0,#0x01,00403$
   0419 80 04              1289 	sjmp	00404$
   041B                    1290 00403$:
   041B D0 00              1291 	pop	ar0
   041D 80 23              1292 	sjmp	00136$
   041F                    1293 00404$:
   041F D0 00              1294 	pop	ar0
                           1295 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:194: server_action(1);
   0421 90 00 01           1296 	mov	dptr,#0x0001
   0424 C0 03              1297 	push	ar3
   0426 C0 04              1298 	push	ar4
   0428 C0 05              1299 	push	ar5
   042A C0 07              1300 	push	ar7
   042C C0 00              1301 	push	ar0
   042E C0 01              1302 	push	ar1
   0430 12s02r5B           1303 	lcall	_server_action
   0433 D0 01              1304 	pop	ar1
   0435 D0 00              1305 	pop	ar0
   0437 D0 07              1306 	pop	ar7
   0439 D0 05              1307 	pop	ar5
   043B D0 04              1308 	pop	ar4
   043D D0 03              1309 	pop	ar3
   043F 02s05r3D           1310 	ljmp	00141$
   0442                    1311 00136$:
                           1312 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:195: } else if (mode == 2) {
   0442 C0 00              1313 	push	ar0
   0444 E5*00              1314 	mov	a,_bp
   0446 24 08              1315 	add	a,#0x08
   0448 F8                 1316 	mov	r0,a
   0449 B6 02 02           1317 	cjne	@r0,#0x02,00405$
   044C 80 04              1318 	sjmp	00406$
   044E                    1319 00405$:
   044E D0 00              1320 	pop	ar0
   0450 80 6F              1321 	sjmp	00133$
   0452                    1322 00406$:
                           1323 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:196: switch(mode2_change_place) {
   0452 A8*00              1324 	mov	r0,_bp
   0454 08                 1325 	inc	r0
   0455 B6 00 04           1326 	cjne	@r0,#0x00,00407$
   0458 D0 00              1327 	pop	ar0
   045A 80 0E              1328 	sjmp	00107$
   045C                    1329 00407$:
   045C A8*00              1330 	mov	r0,_bp
   045E 08                 1331 	inc	r0
   045F B6 03 02           1332 	cjne	@r0,#0x03,00408$
   0462 80 04              1333 	sjmp	00409$
   0464                    1334 00408$:
   0464 D0 00              1335 	pop	ar0
   0466 80 2E              1336 	sjmp	00110$
   0468                    1337 00409$:
   0468 D0 00              1338 	pop	ar0
                           1339 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:198: case 3:
   046A                    1340 00107$:
                           1341 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:199: if (++open_close_time[mode2_change_place] == 24) {
   046A C0 05              1342 	push	ar5
   046C C0 01              1343 	push	ar1
   046E A9*00              1344 	mov	r1,_bp
   0470 09                 1345 	inc	r1
   0471 E7                 1346 	mov	a,@r1
   0472 28                 1347 	add	a,r0
   0473 FA                 1348 	mov	r2,a
   0474 D0 01              1349 	pop	ar1
   0476 C0 00              1350 	push	ar0
   0478 A8 02              1351 	mov	r0,ar2
   047A 06                 1352 	inc	@r0
   047B 86 05              1353 	mov	ar5,@r0
   047D D0 00              1354 	pop	ar0
   047F BD 18 02           1355 	cjne	r5,#0x18,00410$
   0482 80 05              1356 	sjmp	00411$
   0484                    1357 00410$:
   0484 D0 05              1358 	pop	ar5
   0486 02s05r3D           1359 	ljmp	00141$
   0489                    1360 00411$:
   0489 D0 05              1361 	pop	ar5
                           1362 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:200: open_close_time[mode2_change_place] = 0;
   048B C0 00              1363 	push	ar0
   048D A8 02              1364 	mov	r0,ar2
   048F 76 00              1365 	mov	@r0,#0x00
   0491 D0 00              1366 	pop	ar0
                           1367 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:202: break;
   0493 02s05r3D           1368 	ljmp	00141$
                           1369 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:203: default:
   0496                    1370 00110$:
                           1371 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:204: if (++open_close_time[mode2_change_place] == 60) {
   0496 C0 05              1372 	push	ar5
   0498 C0 01              1373 	push	ar1
   049A A9*00              1374 	mov	r1,_bp
   049C 09                 1375 	inc	r1
   049D E7                 1376 	mov	a,@r1
   049E 28                 1377 	add	a,r0
   049F FA                 1378 	mov	r2,a
   04A0 D0 01              1379 	pop	ar1
   04A2 C0 00              1380 	push	ar0
   04A4 A8 02              1381 	mov	r0,ar2
   04A6 06                 1382 	inc	@r0
   04A7 86 05              1383 	mov	ar5,@r0
   04A9 D0 00              1384 	pop	ar0
   04AB BD 3C 02           1385 	cjne	r5,#0x3C,00412$
   04AE 80 05              1386 	sjmp	00413$
   04B0                    1387 00412$:
   04B0 D0 05              1388 	pop	ar5
   04B2 02s05r3D           1389 	ljmp	00141$
   04B5                    1390 00413$:
   04B5 D0 05              1391 	pop	ar5
                           1392 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:205: open_close_time[mode2_change_place] = 0;
   04B7 C0 00              1393 	push	ar0
   04B9 A8 02              1394 	mov	r0,ar2
   04BB 76 00              1395 	mov	@r0,#0x00
   04BD D0 00              1396 	pop	ar0
                           1397 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:207: }
   04BF 80 7C              1398 	sjmp	00141$
   04C1                    1399 00133$:
                           1400 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:208: } else if (mode == 3) {
   04C1 C0 00              1401 	push	ar0
   04C3 E5*00              1402 	mov	a,_bp
   04C5 24 08              1403 	add	a,#0x08
   04C7 F8                 1404 	mov	r0,a
   04C8 B6 03 04           1405 	cjne	@r0,#0x03,00414$
   04CB D0 00              1406 	pop	ar0
   04CD 80 6E              1407 	sjmp	00141$
   04CF                    1408 00414$:
                           1409 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:210: } else if (mode == 4) {
   04CF E5*00              1410 	mov	a,_bp
   04D1 24 08              1411 	add	a,#0x08
   04D3 F8                 1412 	mov	r0,a
   04D4 B6 04 02           1413 	cjne	@r0,#0x04,00415$
   04D7 80 04              1414 	sjmp	00416$
   04D9                    1415 00415$:
   04D9 D0 00              1416 	pop	ar0
   04DB 80 46              1417 	sjmp	00127$
   04DD                    1418 00416$:
   04DD D0 00              1419 	pop	ar0
                           1420 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:211: switch (change_time) {
   04DF E4                 1421 	clr	a
   04E0 B5*11 02           1422 	cjne	a,_change_time,00417$
   04E3 80 0E              1423 	sjmp	00114$
   04E5                    1424 00417$:
   04E5 74 01              1425 	mov	a,#0x01
   04E7 B5*11 02           1426 	cjne	a,_change_time,00418$
   04EA 80 17              1427 	sjmp	00117$
   04EC                    1428 00418$:
   04EC 74 02              1429 	mov	a,#0x02
                           1430 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:212: case 0:
   04EE B5*11 4C           1431 	cjne	a,_change_time,00141$
   04F1 80 20              1432 	sjmp	00120$
   04F3                    1433 00114$:
                           1434 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:213: if (++T_hour >= 24) {
   04F3 05*0C              1435 	inc	_T_hour
   04F5 C3                 1436 	clr	c
   04F6 E5*0C              1437 	mov	a,_T_hour
   04F8 64 80              1438 	xrl	a,#0x80
   04FA 94 98              1439 	subb	a,#0x98
   04FC 40 3F              1440 	jc	00141$
                           1441 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:214: T_hour = 0;
   04FE 75*0C 00           1442 	mov	_T_hour,#0x00
                           1443 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:216: break;
                           1444 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:217: case 1:
   0501 80 3A              1445 	sjmp	00141$
   0503                    1446 00117$:
                           1447 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:218: if (++T_min >= 60) {
   0503 05*0D              1448 	inc	_T_min
   0505 C3                 1449 	clr	c
   0506 E5*0D              1450 	mov	a,_T_min
   0508 64 80              1451 	xrl	a,#0x80
   050A 94 BC              1452 	subb	a,#0xbc
   050C 40 2F              1453 	jc	00141$
                           1454 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:219: T_min = 0;
   050E 75*0D 00           1455 	mov	_T_min,#0x00
                           1456 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:221: break;
                           1457 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:222: case 2:
   0511 80 2A              1458 	sjmp	00141$
   0513                    1459 00120$:
                           1460 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:223: if (++T_sec >= 60) {
   0513 05*0E              1461 	inc	_T_sec
   0515 C3                 1462 	clr	c
   0516 E5*0E              1463 	mov	a,_T_sec
   0518 64 80              1464 	xrl	a,#0x80
   051A 94 BC              1465 	subb	a,#0xbc
   051C 40 1F              1466 	jc	00141$
                           1467 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:224: T_sec = 0;
   051E 75*0E 00           1468 	mov	_T_sec,#0x00
                           1469 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:226: }
   0521 80 1A              1470 	sjmp	00141$
   0523                    1471 00127$:
                           1472 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:227: } else if (mode == 5) {
   0523 C0 00              1473 	push	ar0
   0525 E5*00              1474 	mov	a,_bp
   0527 24 08              1475 	add	a,#0x08
   0529 F8                 1476 	mov	r0,a
   052A B6 05 02           1477 	cjne	@r0,#0x05,00423$
   052D 80 04              1478 	sjmp	00424$
   052F                    1479 00423$:
   052F D0 00              1480 	pop	ar0
   0531 80 0A              1481 	sjmp	00141$
   0533                    1482 00424$:
   0533 D0 00              1483 	pop	ar0
                           1484 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:228: ms1++; // if time go too fast, then add ms1 to correct;
   0535 05*0A              1485 	inc	_ms1
   0537 E4                 1486 	clr	a
   0538 B5*0A 02           1487 	cjne	a,_ms1,00425$
   053B 05*0B              1488 	inc	(_ms1 + 1)
   053D                    1489 00425$:
   053D                    1490 00141$:
                           1491 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:232: if (INT1 == 0 && prebtn1 == 1) {
   053D 30 B3 03           1492 	jnb	_INT1,00426$
   0540 02s06r8B           1493 	ljmp	00182$
   0543                    1494 00426$:
   0543 BB 01 02           1495 	cjne	r3,#0x01,00427$
   0546 80 03              1496 	sjmp	00428$
   0548                    1497 00427$:
   0548 02s06r8B           1498 	ljmp	00182$
   054B                    1499 00428$:
                           1500 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:233: delay_ms(10);
   054B 90 00 0A           1501 	mov	dptr,#0x000A
   054E C0 04              1502 	push	ar4
   0550 C0 05              1503 	push	ar5
   0552 C0 07              1504 	push	ar7
   0554 C0 00              1505 	push	ar0
   0556 C0 01              1506 	push	ar1
   0558 12s00rBC           1507 	lcall	_delay_ms
   055B D0 01              1508 	pop	ar1
   055D D0 00              1509 	pop	ar0
   055F D0 07              1510 	pop	ar7
   0561 D0 05              1511 	pop	ar5
   0563 D0 04              1512 	pop	ar4
                           1513 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:234: if (INT1 == 0) {
   0565 30 B3 03           1514 	jnb	_INT1,00429$
   0568 02s06r8B           1515 	ljmp	00182$
   056B                    1516 00429$:
                           1517 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:235: if (mode == 1) {
   056B C0 00              1518 	push	ar0
   056D E5*00              1519 	mov	a,_bp
   056F 24 08              1520 	add	a,#0x08
   0571 F8                 1521 	mov	r0,a
   0572 B6 01 02           1522 	cjne	@r0,#0x01,00430$
   0575 80 04              1523 	sjmp	00431$
   0577                    1524 00430$:
   0577 D0 00              1525 	pop	ar0
   0579 80 1F              1526 	sjmp	00177$
   057B                    1527 00431$:
   057B D0 00              1528 	pop	ar0
                           1529 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:236: server_action(2);
   057D 90 00 02           1530 	mov	dptr,#0x0002
   0580 C0 04              1531 	push	ar4
   0582 C0 05              1532 	push	ar5
   0584 C0 07              1533 	push	ar7
   0586 C0 00              1534 	push	ar0
   0588 C0 01              1535 	push	ar1
   058A 12s02r5B           1536 	lcall	_server_action
   058D D0 01              1537 	pop	ar1
   058F D0 00              1538 	pop	ar0
   0591 D0 07              1539 	pop	ar7
   0593 D0 05              1540 	pop	ar5
   0595 D0 04              1541 	pop	ar4
   0597 02s06r8B           1542 	ljmp	00182$
   059A                    1543 00177$:
                           1544 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:237: } else if (mode == 2) {
   059A C0 00              1545 	push	ar0
   059C E5*00              1546 	mov	a,_bp
   059E 24 08              1547 	add	a,#0x08
   05A0 F8                 1548 	mov	r0,a
   05A1 B6 02 02           1549 	cjne	@r0,#0x02,00432$
   05A4 80 04              1550 	sjmp	00433$
   05A6                    1551 00432$:
   05A6 D0 00              1552 	pop	ar0
   05A8 80 76              1553 	sjmp	00174$
   05AA                    1554 00433$:
                           1555 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:238: switch(mode2_change_place) {
   05AA A8*00              1556 	mov	r0,_bp
   05AC 08                 1557 	inc	r0
   05AD B6 00 04           1558 	cjne	@r0,#0x00,00434$
   05B0 D0 00              1559 	pop	ar0
   05B2 80 0E              1560 	sjmp	00144$
   05B4                    1561 00434$:
   05B4 A8*00              1562 	mov	r0,_bp
   05B6 08                 1563 	inc	r0
   05B7 B6 03 02           1564 	cjne	@r0,#0x03,00435$
   05BA 80 04              1565 	sjmp	00436$
   05BC                    1566 00435$:
   05BC D0 00              1567 	pop	ar0
   05BE 80 33              1568 	sjmp	00147$
   05C0                    1569 00436$:
   05C0 D0 00              1570 	pop	ar0
                           1571 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:240: case 3:
   05C2                    1572 00144$:
                           1573 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:241: if (--open_close_time[mode2_change_place] <= 0) {
   05C2 C0 05              1574 	push	ar5
   05C4 C0 01              1575 	push	ar1
   05C6 A9*00              1576 	mov	r1,_bp
   05C8 09                 1577 	inc	r1
   05C9 E7                 1578 	mov	a,@r1
   05CA 28                 1579 	add	a,r0
   05CB FA                 1580 	mov	r2,a
   05CC D0 01              1581 	pop	ar1
   05CE C0 00              1582 	push	ar0
   05D0 A8 02              1583 	mov	r0,ar2
   05D2 16                 1584 	dec	@r0
   05D3 86 05              1585 	mov	ar5,@r0
   05D5 D0 00              1586 	pop	ar0
   05D7 C3                 1587 	clr	c
   05D8 74 80              1588 	mov	a,#(0x00 ^ 0x80)
   05DA 8D F0              1589 	mov	b,r5
   05DC 63 F0 80           1590 	xrl	b,#0x80
   05DF 95 F0              1591 	subb	a,b
   05E1 D0 05              1592 	pop	ar5
   05E3 50 03              1593 	jnc	00437$
   05E5 02s06r8B           1594 	ljmp	00182$
   05E8                    1595 00437$:
                           1596 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:242: open_close_time[mode2_change_place] = 23;
   05E8 C0 00              1597 	push	ar0
   05EA A8 02              1598 	mov	r0,ar2
   05EC 76 17              1599 	mov	@r0,#0x17
   05EE D0 00              1600 	pop	ar0
                           1601 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:244: break;
   05F0 02s06r8B           1602 	ljmp	00182$
                           1603 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:245: default:
   05F3                    1604 00147$:
                           1605 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:246: if (--open_close_time[mode2_change_place] <= 0) {
   05F3 C0 05              1606 	push	ar5
   05F5 C0 01              1607 	push	ar1
   05F7 A9*00              1608 	mov	r1,_bp
   05F9 09                 1609 	inc	r1
   05FA E7                 1610 	mov	a,@r1
   05FB 28                 1611 	add	a,r0
   05FC FA                 1612 	mov	r2,a
   05FD D0 01              1613 	pop	ar1
   05FF C0 00              1614 	push	ar0
   0601 A8 02              1615 	mov	r0,ar2
   0603 16                 1616 	dec	@r0
   0604 86 05              1617 	mov	ar5,@r0
   0606 D0 00              1618 	pop	ar0
   0608 C3                 1619 	clr	c
   0609 74 80              1620 	mov	a,#(0x00 ^ 0x80)
   060B 8D F0              1621 	mov	b,r5
   060D 63 F0 80           1622 	xrl	b,#0x80
   0610 95 F0              1623 	subb	a,b
   0612 D0 05              1624 	pop	ar5
   0614 40 75              1625 	jc	00182$
                           1626 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:247: open_close_time[mode2_change_place] = 59;
   0616 C0 00              1627 	push	ar0
   0618 A8 02              1628 	mov	r0,ar2
   061A 76 3B              1629 	mov	@r0,#0x3B
   061C D0 00              1630 	pop	ar0
                           1631 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:249: }
   061E 80 6B              1632 	sjmp	00182$
   0620                    1633 00174$:
                           1634 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:250: } else if (mode == 3) {
   0620 C0 00              1635 	push	ar0
   0622 E5*00              1636 	mov	a,_bp
   0624 24 08              1637 	add	a,#0x08
   0626 F8                 1638 	mov	r0,a
   0627 B6 03 04           1639 	cjne	@r0,#0x03,00439$
   062A D0 00              1640 	pop	ar0
   062C 80 5D              1641 	sjmp	00182$
   062E                    1642 00439$:
                           1643 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:252: } else if (mode == 4) {
   062E E5*00              1644 	mov	a,_bp
   0630 24 08              1645 	add	a,#0x08
   0632 F8                 1646 	mov	r0,a
   0633 B6 04 02           1647 	cjne	@r0,#0x04,00440$
   0636 80 04              1648 	sjmp	00441$
   0638                    1649 00440$:
   0638 D0 00              1650 	pop	ar0
   063A 80 34              1651 	sjmp	00168$
   063C                    1652 00441$:
   063C D0 00              1653 	pop	ar0
                           1654 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:253: if (change_time == 0) {
   063E E5*11              1655 	mov	a,_change_time
   0640 70 0C              1656 	jnz	00163$
                           1657 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:254: if (--T_hour < 0) {
   0642 15*0C              1658 	dec	_T_hour
   0644 E5*0C              1659 	mov	a,_T_hour
   0646 30 E7 42           1660 	jnb	acc.7,00182$
                           1661 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:255: T_hour = 23;
   0649 75*0C 17           1662 	mov	_T_hour,#0x17
   064C 80 3D              1663 	sjmp	00182$
   064E                    1664 00163$:
                           1665 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:257: } else if (change_time == 1) {
   064E 74 01              1666 	mov	a,#0x01
   0650 B5*11 0C           1667 	cjne	a,_change_time,00160$
                           1668 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:258: if (--T_min < 0) {
   0653 15*0D              1669 	dec	_T_min
   0655 E5*0D              1670 	mov	a,_T_min
   0657 30 E7 31           1671 	jnb	acc.7,00182$
                           1672 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:259: T_min = 59;
   065A 75*0D 3B           1673 	mov	_T_min,#0x3B
   065D 80 2C              1674 	sjmp	00182$
   065F                    1675 00160$:
                           1676 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:261: } else if (change_time == 2) {
   065F 74 02              1677 	mov	a,#0x02
   0661 B5*11 27           1678 	cjne	a,_change_time,00182$
                           1679 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:262: if (--T_sec < 0) {
   0664 15*0E              1680 	dec	_T_sec
   0666 E5*0E              1681 	mov	a,_T_sec
   0668 30 E7 20           1682 	jnb	acc.7,00182$
                           1683 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:263: T_sec = 59;
   066B 75*0E 3B           1684 	mov	_T_sec,#0x3B
   066E 80 1B              1685 	sjmp	00182$
   0670                    1686 00168$:
                           1687 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:266: } else if (mode == 5) {
   0670 C0 00              1688 	push	ar0
   0672 E5*00              1689 	mov	a,_bp
   0674 24 08              1690 	add	a,#0x08
   0676 F8                 1691 	mov	r0,a
   0677 B6 05 02           1692 	cjne	@r0,#0x05,00450$
   067A 80 04              1693 	sjmp	00451$
   067C                    1694 00450$:
   067C D0 00              1695 	pop	ar0
   067E 80 0B              1696 	sjmp	00182$
   0680                    1697 00451$:
   0680 D0 00              1698 	pop	ar0
                           1699 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:267: ms1--; // if time go to slow substract to correct
   0682 15*0A              1700 	dec	_ms1
   0684 74 FF              1701 	mov	a,#0xff
   0686 B5*0A 02           1702 	cjne	a,_ms1,00452$
   0689 15*0B              1703 	dec	(_ms1 + 1)
   068B                    1704 00452$:
   068B                    1705 00182$:
                           1706 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:271: if (P2_0 == 0 && prebtn2 == 1) {
   068B 30 A0 03           1707 	jnb	_P2_0,00453$
   068E 02s07r3A           1708 	ljmp	00201$
   0691                    1709 00453$:
   0691 BC 01 02           1710 	cjne	r4,#0x01,00454$
   0694 80 03              1711 	sjmp	00455$
   0696                    1712 00454$:
   0696 02s07r3A           1713 	ljmp	00201$
   0699                    1714 00455$:
                           1715 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:272: delay_ms(10);
   0699 90 00 0A           1716 	mov	dptr,#0x000A
   069C C0 05              1717 	push	ar5
   069E C0 07              1718 	push	ar7
   06A0 C0 00              1719 	push	ar0
   06A2 C0 01              1720 	push	ar1
   06A4 12s00rBC           1721 	lcall	_delay_ms
   06A7 D0 01              1722 	pop	ar1
   06A9 D0 00              1723 	pop	ar0
   06AB D0 07              1724 	pop	ar7
   06AD D0 05              1725 	pop	ar5
                           1726 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:273: if (P2_0 == 0) {
   06AF 30 A0 03           1727 	jnb	_P2_0,00456$
   06B2 02s07r3A           1728 	ljmp	00201$
   06B5                    1729 00456$:
                           1730 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:274: if (mode == 1) {
   06B5 C0 00              1731 	push	ar0
   06B7 E5*00              1732 	mov	a,_bp
   06B9 24 08              1733 	add	a,#0x08
   06BB F8                 1734 	mov	r0,a
   06BC B6 01 02           1735 	cjne	@r0,#0x01,00457$
   06BF 80 04              1736 	sjmp	00458$
   06C1                    1737 00457$:
   06C1 D0 00              1738 	pop	ar0
   06C3 80 0B              1739 	sjmp	00196$
   06C5                    1740 00458$:
                           1741 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:275: mode = 2;
   06C5 E5*00              1742 	mov	a,_bp
   06C7 24 08              1743 	add	a,#0x08
   06C9 F8                 1744 	mov	r0,a
   06CA 76 02              1745 	mov	@r0,#0x02
   06CC D0 00              1746 	pop	ar0
   06CE 80 6A              1747 	sjmp	00201$
   06D0                    1748 00196$:
                           1749 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:276: } else if (mode == 2) {
   06D0 C0 00              1750 	push	ar0
   06D2 E5*00              1751 	mov	a,_bp
   06D4 24 08              1752 	add	a,#0x08
   06D6 F8                 1753 	mov	r0,a
   06D7 B6 02 02           1754 	cjne	@r0,#0x02,00459$
   06DA 80 04              1755 	sjmp	00460$
   06DC                    1756 00459$:
   06DC D0 00              1757 	pop	ar0
   06DE 80 0B              1758 	sjmp	00193$
   06E0                    1759 00460$:
                           1760 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:277: mode = 3;
   06E0 E5*00              1761 	mov	a,_bp
   06E2 24 08              1762 	add	a,#0x08
   06E4 F8                 1763 	mov	r0,a
   06E5 76 03              1764 	mov	@r0,#0x03
   06E7 D0 00              1765 	pop	ar0
   06E9 80 4F              1766 	sjmp	00201$
   06EB                    1767 00193$:
                           1768 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:278: } else if (mode == 3) {
   06EB C0 00              1769 	push	ar0
   06ED E5*00              1770 	mov	a,_bp
   06EF 24 08              1771 	add	a,#0x08
   06F1 F8                 1772 	mov	r0,a
   06F2 B6 03 02           1773 	cjne	@r0,#0x03,00461$
   06F5 80 04              1774 	sjmp	00462$
   06F7                    1775 00461$:
   06F7 D0 00              1776 	pop	ar0
   06F9 80 0B              1777 	sjmp	00190$
   06FB                    1778 00462$:
                           1779 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:279: mode = 4;
   06FB E5*00              1780 	mov	a,_bp
   06FD 24 08              1781 	add	a,#0x08
   06FF F8                 1782 	mov	r0,a
   0700 76 04              1783 	mov	@r0,#0x04
   0702 D0 00              1784 	pop	ar0
   0704 80 34              1785 	sjmp	00201$
   0706                    1786 00190$:
                           1787 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:280: } else if (mode == 4) {
   0706 C0 00              1788 	push	ar0
   0708 E5*00              1789 	mov	a,_bp
   070A 24 08              1790 	add	a,#0x08
   070C F8                 1791 	mov	r0,a
   070D B6 04 02           1792 	cjne	@r0,#0x04,00463$
   0710 80 04              1793 	sjmp	00464$
   0712                    1794 00463$:
   0712 D0 00              1795 	pop	ar0
   0714 80 0B              1796 	sjmp	00187$
   0716                    1797 00464$:
                           1798 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:281: mode = 5;
   0716 E5*00              1799 	mov	a,_bp
   0718 24 08              1800 	add	a,#0x08
   071A F8                 1801 	mov	r0,a
   071B 76 05              1802 	mov	@r0,#0x05
   071D D0 00              1803 	pop	ar0
   071F 80 19              1804 	sjmp	00201$
   0721                    1805 00187$:
                           1806 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:282: } else if (mode == 5) {
   0721 C0 00              1807 	push	ar0
   0723 E5*00              1808 	mov	a,_bp
   0725 24 08              1809 	add	a,#0x08
   0727 F8                 1810 	mov	r0,a
   0728 B6 05 02           1811 	cjne	@r0,#0x05,00465$
   072B 80 04              1812 	sjmp	00466$
   072D                    1813 00465$:
   072D D0 00              1814 	pop	ar0
   072F 80 09              1815 	sjmp	00201$
   0731                    1816 00466$:
                           1817 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:283: mode = 1;
   0731 E5*00              1818 	mov	a,_bp
   0733 24 08              1819 	add	a,#0x08
   0735 F8                 1820 	mov	r0,a
   0736 76 01              1821 	mov	@r0,#0x01
   0738 D0 00              1822 	pop	ar0
   073A                    1823 00201$:
                           1824 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:287: if (P2_1 == 0 && prebtn3 == 1) {
   073A 20 A1 75           1825 	jb	_P2_1,00221$
   073D BD 01 72           1826 	cjne	r5,#0x01,00221$
                           1827 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:288: delay_ms(10);
   0740 90 00 0A           1828 	mov	dptr,#0x000A
   0743 C0 07              1829 	push	ar7
   0745 C0 00              1830 	push	ar0
   0747 C0 01              1831 	push	ar1
   0749 12s00rBC           1832 	lcall	_delay_ms
   074C D0 01              1833 	pop	ar1
   074E D0 00              1834 	pop	ar0
   0750 D0 07              1835 	pop	ar7
                           1836 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:289: if (P2_1 == 0) {
   0752 20 A1 5D           1837 	jb	_P2_1,00221$
                           1838 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:290: if (mode == 1) {
   0755 C0 00              1839 	push	ar0
   0757 E5*00              1840 	mov	a,_bp
   0759 24 08              1841 	add	a,#0x08
   075B F8                 1842 	mov	r0,a
   075C B6 01 04           1843 	cjne	@r0,#0x01,00471$
   075F D0 00              1844 	pop	ar0
   0761 80 4F              1845 	sjmp	00221$
   0763                    1846 00471$:
                           1847 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:292: } else if (mode == 2) {
   0763 E5*00              1848 	mov	a,_bp
   0765 24 08              1849 	add	a,#0x08
   0767 F8                 1850 	mov	r0,a
   0768 B6 02 02           1851 	cjne	@r0,#0x02,00472$
   076B 80 04              1852 	sjmp	00473$
   076D                    1853 00472$:
   076D D0 00              1854 	pop	ar0
   076F 80 19              1855 	sjmp	00213$
   0771                    1856 00473$:
                           1857 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:293: if (++mode2_change_place == 6) {
   0771 A8*00              1858 	mov	r0,_bp
   0773 08                 1859 	inc	r0
   0774 06                 1860 	inc	@r0
   0775 A8*00              1861 	mov	r0,_bp
   0777 08                 1862 	inc	r0
   0778 B6 06 02           1863 	cjne	@r0,#0x06,00474$
   077B 80 04              1864 	sjmp	00475$
   077D                    1865 00474$:
   077D D0 00              1866 	pop	ar0
   077F 80 31              1867 	sjmp	00221$
   0781                    1868 00475$:
                           1869 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:294: mode2_change_place = 0;
   0781 A8*00              1870 	mov	r0,_bp
   0783 08                 1871 	inc	r0
   0784 76 00              1872 	mov	@r0,#0x00
   0786 D0 00              1873 	pop	ar0
   0788 80 28              1874 	sjmp	00221$
   078A                    1875 00213$:
                           1876 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:296: } else if (mode == 3) {
   078A C0 00              1877 	push	ar0
   078C E5*00              1878 	mov	a,_bp
   078E 24 08              1879 	add	a,#0x08
   0790 F8                 1880 	mov	r0,a
   0791 B6 03 04           1881 	cjne	@r0,#0x03,00476$
   0794 D0 00              1882 	pop	ar0
   0796 80 1A              1883 	sjmp	00221$
   0798                    1884 00476$:
                           1885 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:298: } else if (mode == 4) {
   0798 E5*00              1886 	mov	a,_bp
   079A 24 08              1887 	add	a,#0x08
   079C F8                 1888 	mov	r0,a
   079D B6 04 02           1889 	cjne	@r0,#0x04,00477$
   07A0 80 04              1890 	sjmp	00478$
   07A2                    1891 00477$:
   07A2 D0 00              1892 	pop	ar0
   07A4 80 0C              1893 	sjmp	00221$
   07A6                    1894 00478$:
   07A6 D0 00              1895 	pop	ar0
                           1896 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:299: if (++change_time == 3) {
   07A8 05*11              1897 	inc	_change_time
   07AA 74 03              1898 	mov	a,#0x03
   07AC B5*11 03           1899 	cjne	a,_change_time,00221$
                           1900 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:300: change_time = 0;
   07AF 75*11 00           1901 	mov	_change_time,#0x00
   07B2                    1902 00221$:
                           1903 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:307: if (mode == 1) { // 一般模式
   07B2 C0 00              1904 	push	ar0
   07B4 E5*00              1905 	mov	a,_bp
   07B6 24 08              1906 	add	a,#0x08
   07B8 F8                 1907 	mov	r0,a
   07B9 B6 01 02           1908 	cjne	@r0,#0x01,00481$
   07BC 80 04              1909 	sjmp	00482$
   07BE                    1910 00481$:
   07BE D0 00              1911 	pop	ar0
   07C0 80 49              1912 	sjmp	00298$
   07C2                    1913 00482$:
   07C2 D0 00              1914 	pop	ar0
                           1915 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:308: for (i = 2; i <= 8; i++) {
   07C4 75*14 02           1916 	mov	_i,#0x02
   07C7                    1917 00303$:
   07C7 C3                 1918 	clr	c
   07C8 74 88              1919 	mov	a,#(0x08 ^ 0x80)
   07CA 85*14 F0           1920 	mov	b,_i
   07CD 63 F0 80           1921 	xrl	b,#0x80
   07D0 95 F0              1922 	subb	a,b
   07D2 40 1C              1923 	jc	00306$
                           1924 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:309: Write7219(i, 0x0f);
   07D4 85*14 82           1925 	mov	dpl,_i
   07D7 C0 07              1926 	push	ar7
   07D9 C0 00              1927 	push	ar0
   07DB C0 01              1928 	push	ar1
   07DD 74 0F              1929 	mov	a,#0x0F
   07DF C0 E0              1930 	push	acc
   07E1 12s00r3D           1931 	lcall	_Write7219
   07E4 15 81              1932 	dec	sp
   07E6 D0 01              1933 	pop	ar1
   07E8 D0 00              1934 	pop	ar0
   07EA D0 07              1935 	pop	ar7
                           1936 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:308: for (i = 2; i <= 8; i++) {
   07EC 05*14              1937 	inc	_i
   07EE 80 D7              1938 	sjmp	00303$
   07F0                    1939 00306$:
                           1940 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:311: Write7219(1, 1);
   07F0 C0 07              1941 	push	ar7
   07F2 C0 00              1942 	push	ar0
   07F4 C0 01              1943 	push	ar1
   07F6 74 01              1944 	mov	a,#0x01
   07F8 C0 E0              1945 	push	acc
   07FA 75 82 01           1946 	mov	dpl,#0x01
   07FD 12s00r3D           1947 	lcall	_Write7219
   0800 15 81              1948 	dec	sp
   0802 D0 01              1949 	pop	ar1
   0804 D0 00              1950 	pop	ar0
   0806 D0 07              1951 	pop	ar7
   0808 02s1Ar20           1952 	ljmp	00299$
   080B                    1953 00298$:
                           1954 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:312: } else if (mode == 2) { // 設定自動時間模式
   080B C0 00              1955 	push	ar0
   080D E5*00              1956 	mov	a,_bp
   080F 24 08              1957 	add	a,#0x08
   0811 F8                 1958 	mov	r0,a
   0812 B6 02 02           1959 	cjne	@r0,#0x02,00484$
   0815 80 05              1960 	sjmp	00485$
   0817                    1961 00484$:
   0817 D0 00              1962 	pop	ar0
   0819 02s11rD3           1963 	ljmp	00295$
   081C                    1964 00485$:
                           1965 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:313: if (mode2_change_place < 3) {
   081C A8*00              1966 	mov	r0,_bp
   081E 08                 1967 	inc	r0
   081F C3                 1968 	clr	c
   0820 E6                 1969 	mov	a,@r0
   0821 64 80              1970 	xrl	a,#0x80
   0823 94 83              1971 	subb	a,#0x83
   0825 D0 00              1972 	pop	ar0
   0827 40 03              1973 	jc	00486$
   0829 02s0Cr65           1974 	ljmp	00258$
   082C                    1975 00486$:
                           1976 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:314: if (mode2_change_place == 0) {
   082C C0 00              1977 	push	ar0
   082E A8*00              1978 	mov	r0,_bp
   0830 08                 1979 	inc	r0
   0831 E6                 1980 	mov	a,@r0
   0832 D0 00              1981 	pop	ar0
   0834 60 03              1982 	jz	00487$
   0836 02s09r8F           1983 	ljmp	00238$
   0839                    1984 00487$:
                           1985 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:315: if (time_count >= 500) {
   0839 C3                 1986 	clr	c
   083A E5*08              1987 	mov	a,_time_count
   083C 94 F4              1988 	subb	a,#0xF4
   083E E5*09              1989 	mov	a,(_time_count + 1)
   0840 94 01              1990 	subb	a,#0x01
   0842 40 60              1991 	jc	00224$
                           1992 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:316: Write7219(8, open_close_time[0] / 10);
   0844 C0 07              1993 	push	ar7
   0846 86 07              1994 	mov	ar7,@r0
   0848 C2 D5              1995 	clr	F0
   084A 75 F0 0A           1996 	mov	b,#0x0a
   084D EF                 1997 	mov	a,r7
   084E 30 E7 04           1998 	jnb	acc.7,00489$
   0851 B2 D5              1999 	cpl	F0
   0853 F4                 2000 	cpl	a
   0854 04                 2001 	inc	a
   0855                    2002 00489$:
   0855 84                 2003 	div	ab
   0856 30 D5 02           2004 	jnb	F0,00490$
   0859 F4                 2005 	cpl	a
   085A 04                 2006 	inc	a
   085B                    2007 00490$:
   085B FF                 2008 	mov	r7,a
   085C C0 07              2009 	push	ar7
   085E C0 00              2010 	push	ar0
   0860 C0 01              2011 	push	ar1
   0862 C0 07              2012 	push	ar7
   0864 75 82 08           2013 	mov	dpl,#0x08
   0867 12s00r3D           2014 	lcall	_Write7219
   086A 15 81              2015 	dec	sp
   086C D0 01              2016 	pop	ar1
   086E D0 00              2017 	pop	ar0
   0870 D0 07              2018 	pop	ar7
                           2019 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:317: Write7219(7, open_close_time[0] % 10); 
   0872 86 07              2020 	mov	ar7,@r0
   0874 75 F0 0A           2021 	mov	b,#0x0a
   0877 EF                 2022 	mov	a,r7
   0878 C2 D5              2023 	clr	F0
   087A 30 E7 04           2024 	jnb	acc.7,00491$
   087D D2 D5              2025 	setb	F0
   087F F4                 2026 	cpl	a
   0880 04                 2027 	inc	a
   0881                    2028 00491$:
   0881 84                 2029 	div	ab
   0882 E5 F0              2030 	mov	a,b
   0884 30 D5 02           2031 	jnb	F0,00492$
   0887 F4                 2032 	cpl	a
   0888 04                 2033 	inc	a
   0889                    2034 00492$:
   0889 FF                 2035 	mov	r7,a
   088A C0 07              2036 	push	ar7
   088C C0 00              2037 	push	ar0
   088E C0 01              2038 	push	ar1
   0890 C0 07              2039 	push	ar7
   0892 75 82 07           2040 	mov	dpl,#0x07
   0895 12s00r3D           2041 	lcall	_Write7219
   0898 15 81              2042 	dec	sp
   089A D0 01              2043 	pop	ar1
   089C D0 00              2044 	pop	ar0
   089E D0 07              2045 	pop	ar7
   08A0 D0 07              2046 	pop	ar7
   08A2 80 24              2047 	sjmp	00225$
   08A4                    2048 00224$:
                           2049 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:319: Write7219(8, 0x0f);
   08A4 C0 07              2050 	push	ar7
   08A6 C0 00              2051 	push	ar0
   08A8 C0 01              2052 	push	ar1
   08AA 74 0F              2053 	mov	a,#0x0F
   08AC C0 E0              2054 	push	acc
   08AE 75 82 08           2055 	mov	dpl,#0x08
   08B1 12s00r3D           2056 	lcall	_Write7219
   08B4 15 81              2057 	dec	sp
                           2058 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:320: Write7219(7, 0x0f); 
   08B6 74 0F              2059 	mov	a,#0x0F
   08B8 C0 E0              2060 	push	acc
   08BA 75 82 07           2061 	mov	dpl,#0x07
   08BD 12s00r3D           2062 	lcall	_Write7219
   08C0 15 81              2063 	dec	sp
   08C2 D0 01              2064 	pop	ar1
   08C4 D0 00              2065 	pop	ar0
   08C6 D0 07              2066 	pop	ar7
   08C8                    2067 00225$:
                           2068 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:322: Write7219(6, open_close_time[1] / 10);
   08C8 C0 00              2069 	push	ar0
   08CA 87 06              2070 	mov	ar6,@r1
   08CC C2 D5              2071 	clr	F0
   08CE 75 F0 0A           2072 	mov	b,#0x0a
   08D1 EE                 2073 	mov	a,r6
   08D2 30 E7 04           2074 	jnb	acc.7,00493$
   08D5 B2 D5              2075 	cpl	F0
   08D7 F4                 2076 	cpl	a
   08D8 04                 2077 	inc	a
   08D9                    2078 00493$:
   08D9 84                 2079 	div	ab
   08DA 30 D5 02           2080 	jnb	F0,00494$
   08DD F4                 2081 	cpl	a
   08DE 04                 2082 	inc	a
   08DF                    2083 00494$:
   08DF FE                 2084 	mov	r6,a
   08E0 C0 07              2085 	push	ar7
   08E2 C0 00              2086 	push	ar0
   08E4 C0 01              2087 	push	ar1
   08E6 C0 06              2088 	push	ar6
   08E8 75 82 06           2089 	mov	dpl,#0x06
   08EB 12s00r3D           2090 	lcall	_Write7219
   08EE 15 81              2091 	dec	sp
   08F0 D0 01              2092 	pop	ar1
   08F2 D0 00              2093 	pop	ar0
   08F4 D0 07              2094 	pop	ar7
                           2095 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:323: Write7219(5, open_close_time[1] % 10);
   08F6 87 06              2096 	mov	ar6,@r1
   08F8 75 F0 0A           2097 	mov	b,#0x0a
   08FB EE                 2098 	mov	a,r6
   08FC C2 D5              2099 	clr	F0
   08FE 30 E7 04           2100 	jnb	acc.7,00495$
   0901 D2 D5              2101 	setb	F0
   0903 F4                 2102 	cpl	a
   0904 04                 2103 	inc	a
   0905                    2104 00495$:
   0905 84                 2105 	div	ab
   0906 E5 F0              2106 	mov	a,b
   0908 30 D5 02           2107 	jnb	F0,00496$
   090B F4                 2108 	cpl	a
   090C 04                 2109 	inc	a
   090D                    2110 00496$:
   090D FE                 2111 	mov	r6,a
   090E C0 07              2112 	push	ar7
   0910 C0 00              2113 	push	ar0
   0912 C0 01              2114 	push	ar1
   0914 C0 06              2115 	push	ar6
   0916 75 82 05           2116 	mov	dpl,#0x05
   0919 12s00r3D           2117 	lcall	_Write7219
   091C 15 81              2118 	dec	sp
   091E D0 01              2119 	pop	ar1
   0920 D0 00              2120 	pop	ar0
   0922 D0 07              2121 	pop	ar7
                           2122 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:324: Write7219(4, open_close_time[2] / 10);
   0924 C0 00              2123 	push	ar0
   0926 A8 07              2124 	mov	r0,ar7
   0928 86 06              2125 	mov	ar6,@r0
   092A D0 00              2126 	pop	ar0
   092C C2 D5              2127 	clr	F0
   092E 75 F0 0A           2128 	mov	b,#0x0a
   0931 EE                 2129 	mov	a,r6
   0932 30 E7 04           2130 	jnb	acc.7,00497$
   0935 B2 D5              2131 	cpl	F0
   0937 F4                 2132 	cpl	a
   0938 04                 2133 	inc	a
   0939                    2134 00497$:
   0939 84                 2135 	div	ab
   093A 30 D5 02           2136 	jnb	F0,00498$
   093D F4                 2137 	cpl	a
   093E 04                 2138 	inc	a
   093F                    2139 00498$:
   093F FE                 2140 	mov	r6,a
   0940 C0 07              2141 	push	ar7
   0942 C0 00              2142 	push	ar0
   0944 C0 01              2143 	push	ar1
   0946 C0 06              2144 	push	ar6
   0948 75 82 04           2145 	mov	dpl,#0x04
   094B 12s00r3D           2146 	lcall	_Write7219
   094E 15 81              2147 	dec	sp
   0950 D0 01              2148 	pop	ar1
   0952 D0 00              2149 	pop	ar0
   0954 D0 07              2150 	pop	ar7
                           2151 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:325: Write7219(3, open_close_time[2] % 10);
   0956 C0 00              2152 	push	ar0
   0958 A8 07              2153 	mov	r0,ar7
   095A 86 06              2154 	mov	ar6,@r0
   095C D0 00              2155 	pop	ar0
   095E 75 F0 0A           2156 	mov	b,#0x0a
   0961 EE                 2157 	mov	a,r6
   0962 C2 D5              2158 	clr	F0
   0964 30 E7 04           2159 	jnb	acc.7,00499$
   0967 D2 D5              2160 	setb	F0
   0969 F4                 2161 	cpl	a
   096A 04                 2162 	inc	a
   096B                    2163 00499$:
   096B 84                 2164 	div	ab
   096C E5 F0              2165 	mov	a,b
   096E 30 D5 02           2166 	jnb	F0,00500$
   0971 F4                 2167 	cpl	a
   0972 04                 2168 	inc	a
   0973                    2169 00500$:
   0973 FE                 2170 	mov	r6,a
   0974 C0 07              2171 	push	ar7
   0976 C0 00              2172 	push	ar0
   0978 C0 01              2173 	push	ar1
   097A C0 06              2174 	push	ar6
   097C 75 82 03           2175 	mov	dpl,#0x03
   097F 12s00r3D           2176 	lcall	_Write7219
   0982 15 81              2177 	dec	sp
   0984 D0 01              2178 	pop	ar1
   0986 D0 00              2179 	pop	ar0
   0988 D0 07              2180 	pop	ar7
   098A D0 00              2181 	pop	ar0
   098C 02s0Cr4A           2182 	ljmp	00239$
   098F                    2183 00238$:
                           2184 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:326: } else if (mode2_change_place == 1) {
   098F C0 00              2185 	push	ar0
   0991 A8*00              2186 	mov	r0,_bp
   0993 08                 2187 	inc	r0
   0994 B6 01 02           2188 	cjne	@r0,#0x01,00501$
   0997 80 05              2189 	sjmp	00502$
   0999                    2190 00501$:
   0999 D0 00              2191 	pop	ar0
   099B 02s0ArEE           2192 	ljmp	00235$
   099E                    2193 00502$:
   099E D0 00              2194 	pop	ar0
                           2195 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:327: if (time_count >= 500) {
   09A0 C3                 2196 	clr	c
   09A1 E5*08              2197 	mov	a,_time_count
   09A3 94 F4              2198 	subb	a,#0xF4
   09A5 E5*09              2199 	mov	a,(_time_count + 1)
   09A7 94 01              2200 	subb	a,#0x01
   09A9 40 5C              2201 	jc	00227$
                           2202 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:328: Write7219(6, open_close_time[1] / 10);
   09AB 87 06              2203 	mov	ar6,@r1
   09AD C2 D5              2204 	clr	F0
   09AF 75 F0 0A           2205 	mov	b,#0x0a
   09B2 EE                 2206 	mov	a,r6
   09B3 30 E7 04           2207 	jnb	acc.7,00504$
   09B6 B2 D5              2208 	cpl	F0
   09B8 F4                 2209 	cpl	a
   09B9 04                 2210 	inc	a
   09BA                    2211 00504$:
   09BA 84                 2212 	div	ab
   09BB 30 D5 02           2213 	jnb	F0,00505$
   09BE F4                 2214 	cpl	a
   09BF 04                 2215 	inc	a
   09C0                    2216 00505$:
   09C0 FE                 2217 	mov	r6,a
   09C1 C0 07              2218 	push	ar7
   09C3 C0 00              2219 	push	ar0
   09C5 C0 01              2220 	push	ar1
   09C7 C0 06              2221 	push	ar6
   09C9 75 82 06           2222 	mov	dpl,#0x06
   09CC 12s00r3D           2223 	lcall	_Write7219
   09CF 15 81              2224 	dec	sp
   09D1 D0 01              2225 	pop	ar1
   09D3 D0 00              2226 	pop	ar0
   09D5 D0 07              2227 	pop	ar7
                           2228 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:329: Write7219(5, open_close_time[1] % 10);
   09D7 87 06              2229 	mov	ar6,@r1
   09D9 75 F0 0A           2230 	mov	b,#0x0a
   09DC EE                 2231 	mov	a,r6
   09DD C2 D5              2232 	clr	F0
   09DF 30 E7 04           2233 	jnb	acc.7,00506$
   09E2 D2 D5              2234 	setb	F0
   09E4 F4                 2235 	cpl	a
   09E5 04                 2236 	inc	a
   09E6                    2237 00506$:
   09E6 84                 2238 	div	ab
   09E7 E5 F0              2239 	mov	a,b
   09E9 30 D5 02           2240 	jnb	F0,00507$
   09EC F4                 2241 	cpl	a
   09ED 04                 2242 	inc	a
   09EE                    2243 00507$:
   09EE FE                 2244 	mov	r6,a
   09EF C0 07              2245 	push	ar7
   09F1 C0 00              2246 	push	ar0
   09F3 C0 01              2247 	push	ar1
   09F5 C0 06              2248 	push	ar6
   09F7 75 82 05           2249 	mov	dpl,#0x05
   09FA 12s00r3D           2250 	lcall	_Write7219
   09FD 15 81              2251 	dec	sp
   09FF D0 01              2252 	pop	ar1
   0A01 D0 00              2253 	pop	ar0
   0A03 D0 07              2254 	pop	ar7
   0A05 80 24              2255 	sjmp	00228$
   0A07                    2256 00227$:
                           2257 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:331: Write7219(6, 0x0f);
   0A07 C0 07              2258 	push	ar7
   0A09 C0 00              2259 	push	ar0
   0A0B C0 01              2260 	push	ar1
   0A0D 74 0F              2261 	mov	a,#0x0F
   0A0F C0 E0              2262 	push	acc
   0A11 75 82 06           2263 	mov	dpl,#0x06
   0A14 12s00r3D           2264 	lcall	_Write7219
   0A17 15 81              2265 	dec	sp
                           2266 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:332: Write7219(5, 0x0f); 
   0A19 74 0F              2267 	mov	a,#0x0F
   0A1B C0 E0              2268 	push	acc
   0A1D 75 82 05           2269 	mov	dpl,#0x05
   0A20 12s00r3D           2270 	lcall	_Write7219
   0A23 15 81              2271 	dec	sp
   0A25 D0 01              2272 	pop	ar1
   0A27 D0 00              2273 	pop	ar0
   0A29 D0 07              2274 	pop	ar7
   0A2B                    2275 00228$:
                           2276 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:334: Write7219(8, open_close_time[0] / 10);
   0A2B 86 06              2277 	mov	ar6,@r0
   0A2D C2 D5              2278 	clr	F0
   0A2F 75 F0 0A           2279 	mov	b,#0x0a
   0A32 EE                 2280 	mov	a,r6
   0A33 30 E7 04           2281 	jnb	acc.7,00508$
   0A36 B2 D5              2282 	cpl	F0
   0A38 F4                 2283 	cpl	a
   0A39 04                 2284 	inc	a
   0A3A                    2285 00508$:
   0A3A 84                 2286 	div	ab
   0A3B 30 D5 02           2287 	jnb	F0,00509$
   0A3E F4                 2288 	cpl	a
   0A3F 04                 2289 	inc	a
   0A40                    2290 00509$:
   0A40 FE                 2291 	mov	r6,a
   0A41 C0 07              2292 	push	ar7
   0A43 C0 00              2293 	push	ar0
   0A45 C0 01              2294 	push	ar1
   0A47 C0 06              2295 	push	ar6
   0A49 75 82 08           2296 	mov	dpl,#0x08
   0A4C 12s00r3D           2297 	lcall	_Write7219
   0A4F 15 81              2298 	dec	sp
   0A51 D0 01              2299 	pop	ar1
   0A53 D0 00              2300 	pop	ar0
   0A55 D0 07              2301 	pop	ar7
                           2302 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:335: Write7219(7, open_close_time[0] % 10); 
   0A57 86 06              2303 	mov	ar6,@r0
   0A59 75 F0 0A           2304 	mov	b,#0x0a
   0A5C EE                 2305 	mov	a,r6
   0A5D C2 D5              2306 	clr	F0
   0A5F 30 E7 04           2307 	jnb	acc.7,00510$
   0A62 D2 D5              2308 	setb	F0
   0A64 F4                 2309 	cpl	a
   0A65 04                 2310 	inc	a
   0A66                    2311 00510$:
   0A66 84                 2312 	div	ab
   0A67 E5 F0              2313 	mov	a,b
   0A69 30 D5 02           2314 	jnb	F0,00511$
   0A6C F4                 2315 	cpl	a
   0A6D 04                 2316 	inc	a
   0A6E                    2317 00511$:
   0A6E FE                 2318 	mov	r6,a
   0A6F C0 07              2319 	push	ar7
   0A71 C0 00              2320 	push	ar0
   0A73 C0 01              2321 	push	ar1
   0A75 C0 06              2322 	push	ar6
   0A77 75 82 07           2323 	mov	dpl,#0x07
   0A7A 12s00r3D           2324 	lcall	_Write7219
   0A7D 15 81              2325 	dec	sp
   0A7F D0 01              2326 	pop	ar1
   0A81 D0 00              2327 	pop	ar0
   0A83 D0 07              2328 	pop	ar7
                           2329 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:336: Write7219(4, open_close_time[2] / 10);
   0A85 C0 00              2330 	push	ar0
   0A87 A8 07              2331 	mov	r0,ar7
   0A89 86 06              2332 	mov	ar6,@r0
   0A8B D0 00              2333 	pop	ar0
   0A8D C2 D5              2334 	clr	F0
   0A8F 75 F0 0A           2335 	mov	b,#0x0a
   0A92 EE                 2336 	mov	a,r6
   0A93 30 E7 04           2337 	jnb	acc.7,00512$
   0A96 B2 D5              2338 	cpl	F0
   0A98 F4                 2339 	cpl	a
   0A99 04                 2340 	inc	a
   0A9A                    2341 00512$:
   0A9A 84                 2342 	div	ab
   0A9B 30 D5 02           2343 	jnb	F0,00513$
   0A9E F4                 2344 	cpl	a
   0A9F 04                 2345 	inc	a
   0AA0                    2346 00513$:
   0AA0 FE                 2347 	mov	r6,a
   0AA1 C0 07              2348 	push	ar7
   0AA3 C0 00              2349 	push	ar0
   0AA5 C0 01              2350 	push	ar1
   0AA7 C0 06              2351 	push	ar6
   0AA9 75 82 04           2352 	mov	dpl,#0x04
   0AAC 12s00r3D           2353 	lcall	_Write7219
   0AAF 15 81              2354 	dec	sp
   0AB1 D0 01              2355 	pop	ar1
   0AB3 D0 00              2356 	pop	ar0
   0AB5 D0 07              2357 	pop	ar7
                           2358 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:337: Write7219(3, open_close_time[2] % 10);
   0AB7 C0 00              2359 	push	ar0
   0AB9 A8 07              2360 	mov	r0,ar7
   0ABB 86 06              2361 	mov	ar6,@r0
   0ABD D0 00              2362 	pop	ar0
   0ABF 75 F0 0A           2363 	mov	b,#0x0a
   0AC2 EE                 2364 	mov	a,r6
   0AC3 C2 D5              2365 	clr	F0
   0AC5 30 E7 04           2366 	jnb	acc.7,00514$
   0AC8 D2 D5              2367 	setb	F0
   0ACA F4                 2368 	cpl	a
   0ACB 04                 2369 	inc	a
   0ACC                    2370 00514$:
   0ACC 84                 2371 	div	ab
   0ACD E5 F0              2372 	mov	a,b
   0ACF 30 D5 02           2373 	jnb	F0,00515$
   0AD2 F4                 2374 	cpl	a
   0AD3 04                 2375 	inc	a
   0AD4                    2376 00515$:
   0AD4 FE                 2377 	mov	r6,a
   0AD5 C0 07              2378 	push	ar7
   0AD7 C0 00              2379 	push	ar0
   0AD9 C0 01              2380 	push	ar1
   0ADB C0 06              2381 	push	ar6
   0ADD 75 82 03           2382 	mov	dpl,#0x03
   0AE0 12s00r3D           2383 	lcall	_Write7219
   0AE3 15 81              2384 	dec	sp
   0AE5 D0 01              2385 	pop	ar1
   0AE7 D0 00              2386 	pop	ar0
   0AE9 D0 07              2387 	pop	ar7
   0AEB 02s0Cr4A           2388 	ljmp	00239$
   0AEE                    2389 00235$:
                           2390 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:338: } else if (mode2_change_place == 2) {
   0AEE C0 00              2391 	push	ar0
   0AF0 A8*00              2392 	mov	r0,_bp
   0AF2 08                 2393 	inc	r0
   0AF3 B6 02 02           2394 	cjne	@r0,#0x02,00516$
   0AF6 80 05              2395 	sjmp	00517$
   0AF8                    2396 00516$:
   0AF8 D0 00              2397 	pop	ar0
   0AFA 02s0Cr4A           2398 	ljmp	00239$
   0AFD                    2399 00517$:
   0AFD D0 00              2400 	pop	ar0
                           2401 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:339: if (time_count >= 500) {
   0AFF C3                 2402 	clr	c
   0B00 E5*08              2403 	mov	a,_time_count
   0B02 94 F4              2404 	subb	a,#0xF4
   0B04 E5*09              2405 	mov	a,(_time_count + 1)
   0B06 94 01              2406 	subb	a,#0x01
   0B08 40 68              2407 	jc	00230$
                           2408 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:340: Write7219(4, open_close_time[2] / 10);
   0B0A C0 00              2409 	push	ar0
   0B0C A8 07              2410 	mov	r0,ar7
   0B0E 86 06              2411 	mov	ar6,@r0
   0B10 D0 00              2412 	pop	ar0
   0B12 C2 D5              2413 	clr	F0
   0B14 75 F0 0A           2414 	mov	b,#0x0a
   0B17 EE                 2415 	mov	a,r6
   0B18 30 E7 04           2416 	jnb	acc.7,00519$
   0B1B B2 D5              2417 	cpl	F0
   0B1D F4                 2418 	cpl	a
   0B1E 04                 2419 	inc	a
   0B1F                    2420 00519$:
   0B1F 84                 2421 	div	ab
   0B20 30 D5 02           2422 	jnb	F0,00520$
   0B23 F4                 2423 	cpl	a
   0B24 04                 2424 	inc	a
   0B25                    2425 00520$:
   0B25 FE                 2426 	mov	r6,a
   0B26 C0 07              2427 	push	ar7
   0B28 C0 00              2428 	push	ar0
   0B2A C0 01              2429 	push	ar1
   0B2C C0 06              2430 	push	ar6
   0B2E 75 82 04           2431 	mov	dpl,#0x04
   0B31 12s00r3D           2432 	lcall	_Write7219
   0B34 15 81              2433 	dec	sp
   0B36 D0 01              2434 	pop	ar1
   0B38 D0 00              2435 	pop	ar0
   0B3A D0 07              2436 	pop	ar7
                           2437 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:341: Write7219(3, open_close_time[2] % 10);
   0B3C C0 00              2438 	push	ar0
   0B3E A8 07              2439 	mov	r0,ar7
   0B40 86 06              2440 	mov	ar6,@r0
   0B42 D0 00              2441 	pop	ar0
   0B44 75 F0 0A           2442 	mov	b,#0x0a
   0B47 EE                 2443 	mov	a,r6
   0B48 C2 D5              2444 	clr	F0
   0B4A 30 E7 04           2445 	jnb	acc.7,00521$
   0B4D D2 D5              2446 	setb	F0
   0B4F F4                 2447 	cpl	a
   0B50 04                 2448 	inc	a
   0B51                    2449 00521$:
   0B51 84                 2450 	div	ab
   0B52 E5 F0              2451 	mov	a,b
   0B54 30 D5 02           2452 	jnb	F0,00522$
   0B57 F4                 2453 	cpl	a
   0B58 04                 2454 	inc	a
   0B59                    2455 00522$:
   0B59 FE                 2456 	mov	r6,a
   0B5A C0 07              2457 	push	ar7
   0B5C C0 00              2458 	push	ar0
   0B5E C0 01              2459 	push	ar1
   0B60 C0 06              2460 	push	ar6
   0B62 75 82 03           2461 	mov	dpl,#0x03
   0B65 12s00r3D           2462 	lcall	_Write7219
   0B68 15 81              2463 	dec	sp
   0B6A D0 01              2464 	pop	ar1
   0B6C D0 00              2465 	pop	ar0
   0B6E D0 07              2466 	pop	ar7
   0B70 80 24              2467 	sjmp	00231$
   0B72                    2468 00230$:
                           2469 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:343: Write7219(4, 0x0f);
   0B72 C0 07              2470 	push	ar7
   0B74 C0 00              2471 	push	ar0
   0B76 C0 01              2472 	push	ar1
   0B78 74 0F              2473 	mov	a,#0x0F
   0B7A C0 E0              2474 	push	acc
   0B7C 75 82 04           2475 	mov	dpl,#0x04
   0B7F 12s00r3D           2476 	lcall	_Write7219
   0B82 15 81              2477 	dec	sp
                           2478 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:344: Write7219(3, 0x0f); 
   0B84 74 0F              2479 	mov	a,#0x0F
   0B86 C0 E0              2480 	push	acc
   0B88 75 82 03           2481 	mov	dpl,#0x03
   0B8B 12s00r3D           2482 	lcall	_Write7219
   0B8E 15 81              2483 	dec	sp
   0B90 D0 01              2484 	pop	ar1
   0B92 D0 00              2485 	pop	ar0
   0B94 D0 07              2486 	pop	ar7
   0B96                    2487 00231$:
                           2488 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:346: Write7219(6, open_close_time[1] / 10);
   0B96 87 06              2489 	mov	ar6,@r1
   0B98 C2 D5              2490 	clr	F0
   0B9A 75 F0 0A           2491 	mov	b,#0x0a
   0B9D EE                 2492 	mov	a,r6
   0B9E 30 E7 04           2493 	jnb	acc.7,00523$
   0BA1 B2 D5              2494 	cpl	F0
   0BA3 F4                 2495 	cpl	a
   0BA4 04                 2496 	inc	a
   0BA5                    2497 00523$:
   0BA5 84                 2498 	div	ab
   0BA6 30 D5 02           2499 	jnb	F0,00524$
   0BA9 F4                 2500 	cpl	a
   0BAA 04                 2501 	inc	a
   0BAB                    2502 00524$:
   0BAB FE                 2503 	mov	r6,a
   0BAC C0 07              2504 	push	ar7
   0BAE C0 00              2505 	push	ar0
   0BB0 C0 01              2506 	push	ar1
   0BB2 C0 06              2507 	push	ar6
   0BB4 75 82 06           2508 	mov	dpl,#0x06
   0BB7 12s00r3D           2509 	lcall	_Write7219
   0BBA 15 81              2510 	dec	sp
   0BBC D0 01              2511 	pop	ar1
   0BBE D0 00              2512 	pop	ar0
   0BC0 D0 07              2513 	pop	ar7
                           2514 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:347: Write7219(5, open_close_time[1] % 10);
   0BC2 87 06              2515 	mov	ar6,@r1
   0BC4 75 F0 0A           2516 	mov	b,#0x0a
   0BC7 EE                 2517 	mov	a,r6
   0BC8 C2 D5              2518 	clr	F0
   0BCA 30 E7 04           2519 	jnb	acc.7,00525$
   0BCD D2 D5              2520 	setb	F0
   0BCF F4                 2521 	cpl	a
   0BD0 04                 2522 	inc	a
   0BD1                    2523 00525$:
   0BD1 84                 2524 	div	ab
   0BD2 E5 F0              2525 	mov	a,b
   0BD4 30 D5 02           2526 	jnb	F0,00526$
   0BD7 F4                 2527 	cpl	a
   0BD8 04                 2528 	inc	a
   0BD9                    2529 00526$:
   0BD9 FE                 2530 	mov	r6,a
   0BDA C0 07              2531 	push	ar7
   0BDC C0 00              2532 	push	ar0
   0BDE C0 01              2533 	push	ar1
   0BE0 C0 06              2534 	push	ar6
   0BE2 75 82 05           2535 	mov	dpl,#0x05
   0BE5 12s00r3D           2536 	lcall	_Write7219
   0BE8 15 81              2537 	dec	sp
   0BEA D0 01              2538 	pop	ar1
   0BEC D0 00              2539 	pop	ar0
   0BEE D0 07              2540 	pop	ar7
                           2541 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:348: Write7219(8, open_close_time[0] / 10);
   0BF0 86 06              2542 	mov	ar6,@r0
   0BF2 C2 D5              2543 	clr	F0
   0BF4 75 F0 0A           2544 	mov	b,#0x0a
   0BF7 EE                 2545 	mov	a,r6
   0BF8 30 E7 04           2546 	jnb	acc.7,00527$
   0BFB B2 D5              2547 	cpl	F0
   0BFD F4                 2548 	cpl	a
   0BFE 04                 2549 	inc	a
   0BFF                    2550 00527$:
   0BFF 84                 2551 	div	ab
   0C00 30 D5 02           2552 	jnb	F0,00528$
   0C03 F4                 2553 	cpl	a
   0C04 04                 2554 	inc	a
   0C05                    2555 00528$:
   0C05 FE                 2556 	mov	r6,a
   0C06 C0 07              2557 	push	ar7
   0C08 C0 00              2558 	push	ar0
   0C0A C0 01              2559 	push	ar1
   0C0C C0 06              2560 	push	ar6
   0C0E 75 82 08           2561 	mov	dpl,#0x08
   0C11 12s00r3D           2562 	lcall	_Write7219
   0C14 15 81              2563 	dec	sp
   0C16 D0 01              2564 	pop	ar1
   0C18 D0 00              2565 	pop	ar0
   0C1A D0 07              2566 	pop	ar7
                           2567 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:349: Write7219(7, open_close_time[0] % 10); 
   0C1C 86 06              2568 	mov	ar6,@r0
   0C1E 75 F0 0A           2569 	mov	b,#0x0a
   0C21 EE                 2570 	mov	a,r6
   0C22 C2 D5              2571 	clr	F0
   0C24 30 E7 04           2572 	jnb	acc.7,00529$
   0C27 D2 D5              2573 	setb	F0
   0C29 F4                 2574 	cpl	a
   0C2A 04                 2575 	inc	a
   0C2B                    2576 00529$:
   0C2B 84                 2577 	div	ab
   0C2C E5 F0              2578 	mov	a,b
   0C2E 30 D5 02           2579 	jnb	F0,00530$
   0C31 F4                 2580 	cpl	a
   0C32 04                 2581 	inc	a
   0C33                    2582 00530$:
   0C33 FE                 2583 	mov	r6,a
   0C34 C0 07              2584 	push	ar7
   0C36 C0 00              2585 	push	ar0
   0C38 C0 01              2586 	push	ar1
   0C3A C0 06              2587 	push	ar6
   0C3C 75 82 07           2588 	mov	dpl,#0x07
   0C3F 12s00r3D           2589 	lcall	_Write7219
   0C42 15 81              2590 	dec	sp
   0C44 D0 01              2591 	pop	ar1
   0C46 D0 00              2592 	pop	ar0
   0C48 D0 07              2593 	pop	ar7
   0C4A                    2594 00239$:
                           2595 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:351: Write7219(2, 1);
   0C4A C0 07              2596 	push	ar7
   0C4C C0 00              2597 	push	ar0
   0C4E C0 01              2598 	push	ar1
   0C50 74 01              2599 	mov	a,#0x01
   0C52 C0 E0              2600 	push	acc
   0C54 75 82 02           2601 	mov	dpl,#0x02
   0C57 12s00r3D           2602 	lcall	_Write7219
   0C5A 15 81              2603 	dec	sp
   0C5C D0 01              2604 	pop	ar1
   0C5E D0 00              2605 	pop	ar0
   0C60 D0 07              2606 	pop	ar7
   0C62 02s11r39           2607 	ljmp	00259$
   0C65                    2608 00258$:
                           2609 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:353: if (mode2_change_place == 3) {
   0C65 C0 00              2610 	push	ar0
   0C67 A8*00              2611 	mov	r0,_bp
   0C69 08                 2612 	inc	r0
   0C6A B6 03 02           2613 	cjne	@r0,#0x03,00531$
   0C6D 80 05              2614 	sjmp	00532$
   0C6F                    2615 00531$:
   0C6F D0 00              2616 	pop	ar0
   0C71 02s0DrFA           2617 	ljmp	00255$
   0C74                    2618 00532$:
   0C74 D0 00              2619 	pop	ar0
                           2620 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:354: if (time_count >= 500) {
   0C76 C3                 2621 	clr	c
   0C77 E5*08              2622 	mov	a,_time_count
   0C79 94 F4              2623 	subb	a,#0xF4
   0C7B E5*09              2624 	mov	a,(_time_count + 1)
   0C7D 94 01              2625 	subb	a,#0x01
   0C7F 40 72              2626 	jc	00241$
                           2627 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:355: Write7219(8, open_close_time[3] / 10);
   0C81 C0 00              2628 	push	ar0
   0C83 E5*00              2629 	mov	a,_bp
   0C85 24 09              2630 	add	a,#0x09
   0C87 F8                 2631 	mov	r0,a
   0C88 86 00              2632 	mov	ar0,@r0
   0C8A 86 06              2633 	mov	ar6,@r0
   0C8C D0 00              2634 	pop	ar0
   0C8E C2 D5              2635 	clr	F0
   0C90 75 F0 0A           2636 	mov	b,#0x0a
   0C93 EE                 2637 	mov	a,r6
   0C94 30 E7 04           2638 	jnb	acc.7,00534$
   0C97 B2 D5              2639 	cpl	F0
   0C99 F4                 2640 	cpl	a
   0C9A 04                 2641 	inc	a
   0C9B                    2642 00534$:
   0C9B 84                 2643 	div	ab
   0C9C 30 D5 02           2644 	jnb	F0,00535$
   0C9F F4                 2645 	cpl	a
   0CA0 04                 2646 	inc	a
   0CA1                    2647 00535$:
   0CA1 FE                 2648 	mov	r6,a
   0CA2 C0 07              2649 	push	ar7
   0CA4 C0 00              2650 	push	ar0
   0CA6 C0 01              2651 	push	ar1
   0CA8 C0 06              2652 	push	ar6
   0CAA 75 82 08           2653 	mov	dpl,#0x08
   0CAD 12s00r3D           2654 	lcall	_Write7219
   0CB0 15 81              2655 	dec	sp
   0CB2 D0 01              2656 	pop	ar1
   0CB4 D0 00              2657 	pop	ar0
   0CB6 D0 07              2658 	pop	ar7
                           2659 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:356: Write7219(7, open_close_time[3] % 10); 
   0CB8 C0 00              2660 	push	ar0
   0CBA E5*00              2661 	mov	a,_bp
   0CBC 24 09              2662 	add	a,#0x09
   0CBE F8                 2663 	mov	r0,a
   0CBF 86 00              2664 	mov	ar0,@r0
   0CC1 86 06              2665 	mov	ar6,@r0
   0CC3 D0 00              2666 	pop	ar0
   0CC5 75 F0 0A           2667 	mov	b,#0x0a
   0CC8 EE                 2668 	mov	a,r6
   0CC9 C2 D5              2669 	clr	F0
   0CCB 30 E7 04           2670 	jnb	acc.7,00536$
   0CCE D2 D5              2671 	setb	F0
   0CD0 F4                 2672 	cpl	a
   0CD1 04                 2673 	inc	a
   0CD2                    2674 00536$:
   0CD2 84                 2675 	div	ab
   0CD3 E5 F0              2676 	mov	a,b
   0CD5 30 D5 02           2677 	jnb	F0,00537$
   0CD8 F4                 2678 	cpl	a
   0CD9 04                 2679 	inc	a
   0CDA                    2680 00537$:
   0CDA FE                 2681 	mov	r6,a
   0CDB C0 07              2682 	push	ar7
   0CDD C0 00              2683 	push	ar0
   0CDF C0 01              2684 	push	ar1
   0CE1 C0 06              2685 	push	ar6
   0CE3 75 82 07           2686 	mov	dpl,#0x07
   0CE6 12s00r3D           2687 	lcall	_Write7219
   0CE9 15 81              2688 	dec	sp
   0CEB D0 01              2689 	pop	ar1
   0CED D0 00              2690 	pop	ar0
   0CEF D0 07              2691 	pop	ar7
   0CF1 80 24              2692 	sjmp	00242$
   0CF3                    2693 00241$:
                           2694 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:358: Write7219(8, 0x0f);
   0CF3 C0 07              2695 	push	ar7
   0CF5 C0 00              2696 	push	ar0
   0CF7 C0 01              2697 	push	ar1
   0CF9 74 0F              2698 	mov	a,#0x0F
   0CFB C0 E0              2699 	push	acc
   0CFD 75 82 08           2700 	mov	dpl,#0x08
   0D00 12s00r3D           2701 	lcall	_Write7219
   0D03 15 81              2702 	dec	sp
                           2703 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:359: Write7219(7, 0x0f); 
   0D05 74 0F              2704 	mov	a,#0x0F
   0D07 C0 E0              2705 	push	acc
   0D09 75 82 07           2706 	mov	dpl,#0x07
   0D0C 12s00r3D           2707 	lcall	_Write7219
   0D0F 15 81              2708 	dec	sp
   0D11 D0 01              2709 	pop	ar1
   0D13 D0 00              2710 	pop	ar0
   0D15 D0 07              2711 	pop	ar7
   0D17                    2712 00242$:
                           2713 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:361: Write7219(6, open_close_time[4] / 10);
   0D17 C0 00              2714 	push	ar0
   0D19 E5*00              2715 	mov	a,_bp
   0D1B 24 0A              2716 	add	a,#0x0a
   0D1D F8                 2717 	mov	r0,a
   0D1E 86 00              2718 	mov	ar0,@r0
   0D20 86 06              2719 	mov	ar6,@r0
   0D22 D0 00              2720 	pop	ar0
   0D24 C2 D5              2721 	clr	F0
   0D26 75 F0 0A           2722 	mov	b,#0x0a
   0D29 EE                 2723 	mov	a,r6
   0D2A 30 E7 04           2724 	jnb	acc.7,00538$
   0D2D B2 D5              2725 	cpl	F0
   0D2F F4                 2726 	cpl	a
   0D30 04                 2727 	inc	a
   0D31                    2728 00538$:
   0D31 84                 2729 	div	ab
   0D32 30 D5 02           2730 	jnb	F0,00539$
   0D35 F4                 2731 	cpl	a
   0D36 04                 2732 	inc	a
   0D37                    2733 00539$:
   0D37 FE                 2734 	mov	r6,a
   0D38 C0 07              2735 	push	ar7
   0D3A C0 00              2736 	push	ar0
   0D3C C0 01              2737 	push	ar1
   0D3E C0 06              2738 	push	ar6
   0D40 75 82 06           2739 	mov	dpl,#0x06
   0D43 12s00r3D           2740 	lcall	_Write7219
   0D46 15 81              2741 	dec	sp
   0D48 D0 01              2742 	pop	ar1
   0D4A D0 00              2743 	pop	ar0
   0D4C D0 07              2744 	pop	ar7
                           2745 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:362: Write7219(5, open_close_time[4] % 10);
   0D4E C0 00              2746 	push	ar0
   0D50 E5*00              2747 	mov	a,_bp
   0D52 24 0A              2748 	add	a,#0x0a
   0D54 F8                 2749 	mov	r0,a
   0D55 86 00              2750 	mov	ar0,@r0
   0D57 86 06              2751 	mov	ar6,@r0
   0D59 D0 00              2752 	pop	ar0
   0D5B 75 F0 0A           2753 	mov	b,#0x0a
   0D5E EE                 2754 	mov	a,r6
   0D5F C2 D5              2755 	clr	F0
   0D61 30 E7 04           2756 	jnb	acc.7,00540$
   0D64 D2 D5              2757 	setb	F0
   0D66 F4                 2758 	cpl	a
   0D67 04                 2759 	inc	a
   0D68                    2760 00540$:
   0D68 84                 2761 	div	ab
   0D69 E5 F0              2762 	mov	a,b
   0D6B 30 D5 02           2763 	jnb	F0,00541$
   0D6E F4                 2764 	cpl	a
   0D6F 04                 2765 	inc	a
   0D70                    2766 00541$:
   0D70 FE                 2767 	mov	r6,a
   0D71 C0 07              2768 	push	ar7
   0D73 C0 00              2769 	push	ar0
   0D75 C0 01              2770 	push	ar1
   0D77 C0 06              2771 	push	ar6
   0D79 75 82 05           2772 	mov	dpl,#0x05
   0D7C 12s00r3D           2773 	lcall	_Write7219
   0D7F 15 81              2774 	dec	sp
   0D81 D0 01              2775 	pop	ar1
   0D83 D0 00              2776 	pop	ar0
   0D85 D0 07              2777 	pop	ar7
                           2778 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:363: Write7219(4, open_close_time[5] / 10);
   0D87 C0 00              2779 	push	ar0
   0D89 E5*00              2780 	mov	a,_bp
   0D8B 24 0B              2781 	add	a,#0x0b
   0D8D F8                 2782 	mov	r0,a
   0D8E 86 00              2783 	mov	ar0,@r0
   0D90 86 06              2784 	mov	ar6,@r0
   0D92 D0 00              2785 	pop	ar0
   0D94 C2 D5              2786 	clr	F0
   0D96 75 F0 0A           2787 	mov	b,#0x0a
   0D99 EE                 2788 	mov	a,r6
   0D9A 30 E7 04           2789 	jnb	acc.7,00542$
   0D9D B2 D5              2790 	cpl	F0
   0D9F F4                 2791 	cpl	a
   0DA0 04                 2792 	inc	a
   0DA1                    2793 00542$:
   0DA1 84                 2794 	div	ab
   0DA2 30 D5 02           2795 	jnb	F0,00543$
   0DA5 F4                 2796 	cpl	a
   0DA6 04                 2797 	inc	a
   0DA7                    2798 00543$:
   0DA7 FE                 2799 	mov	r6,a
   0DA8 C0 07              2800 	push	ar7
   0DAA C0 00              2801 	push	ar0
   0DAC C0 01              2802 	push	ar1
   0DAE C0 06              2803 	push	ar6
   0DB0 75 82 04           2804 	mov	dpl,#0x04
   0DB3 12s00r3D           2805 	lcall	_Write7219
   0DB6 15 81              2806 	dec	sp
   0DB8 D0 01              2807 	pop	ar1
   0DBA D0 00              2808 	pop	ar0
   0DBC D0 07              2809 	pop	ar7
                           2810 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:364: Write7219(3, open_close_time[5] % 10);
   0DBE C0 00              2811 	push	ar0
   0DC0 E5*00              2812 	mov	a,_bp
   0DC2 24 0B              2813 	add	a,#0x0b
   0DC4 F8                 2814 	mov	r0,a
   0DC5 86 00              2815 	mov	ar0,@r0
   0DC7 86 06              2816 	mov	ar6,@r0
   0DC9 D0 00              2817 	pop	ar0
   0DCB 75 F0 0A           2818 	mov	b,#0x0a
   0DCE EE                 2819 	mov	a,r6
   0DCF C2 D5              2820 	clr	F0
   0DD1 30 E7 04           2821 	jnb	acc.7,00544$
   0DD4 D2 D5              2822 	setb	F0
   0DD6 F4                 2823 	cpl	a
   0DD7 04                 2824 	inc	a
   0DD8                    2825 00544$:
   0DD8 84                 2826 	div	ab
   0DD9 E5 F0              2827 	mov	a,b
   0DDB 30 D5 02           2828 	jnb	F0,00545$
   0DDE F4                 2829 	cpl	a
   0DDF 04                 2830 	inc	a
   0DE0                    2831 00545$:
   0DE0 FE                 2832 	mov	r6,a
   0DE1 C0 07              2833 	push	ar7
   0DE3 C0 00              2834 	push	ar0
   0DE5 C0 01              2835 	push	ar1
   0DE7 C0 06              2836 	push	ar6
   0DE9 75 82 03           2837 	mov	dpl,#0x03
   0DEC 12s00r3D           2838 	lcall	_Write7219
   0DEF 15 81              2839 	dec	sp
   0DF1 D0 01              2840 	pop	ar1
   0DF3 D0 00              2841 	pop	ar0
   0DF5 D0 07              2842 	pop	ar7
   0DF7 02s11r21           2843 	ljmp	00256$
   0DFA                    2844 00255$:
                           2845 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:365: } else if (mode2_change_place == 4) {
   0DFA C0 00              2846 	push	ar0
   0DFC A8*00              2847 	mov	r0,_bp
   0DFE 08                 2848 	inc	r0
   0DFF B6 04 02           2849 	cjne	@r0,#0x04,00546$
   0E02 80 05              2850 	sjmp	00547$
   0E04                    2851 00546$:
   0E04 D0 00              2852 	pop	ar0
   0E06 02s0Fr8F           2853 	ljmp	00252$
   0E09                    2854 00547$:
   0E09 D0 00              2855 	pop	ar0
                           2856 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:366: if (time_count >= 500) {
   0E0B C3                 2857 	clr	c
   0E0C E5*08              2858 	mov	a,_time_count
   0E0E 94 F4              2859 	subb	a,#0xF4
   0E10 E5*09              2860 	mov	a,(_time_count + 1)
   0E12 94 01              2861 	subb	a,#0x01
   0E14 40 72              2862 	jc	00244$
                           2863 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:367: Write7219(6, open_close_time[4] / 10);
   0E16 C0 00              2864 	push	ar0
   0E18 E5*00              2865 	mov	a,_bp
   0E1A 24 0A              2866 	add	a,#0x0a
   0E1C F8                 2867 	mov	r0,a
   0E1D 86 00              2868 	mov	ar0,@r0
   0E1F 86 06              2869 	mov	ar6,@r0
   0E21 D0 00              2870 	pop	ar0
   0E23 C2 D5              2871 	clr	F0
   0E25 75 F0 0A           2872 	mov	b,#0x0a
   0E28 EE                 2873 	mov	a,r6
   0E29 30 E7 04           2874 	jnb	acc.7,00549$
   0E2C B2 D5              2875 	cpl	F0
   0E2E F4                 2876 	cpl	a
   0E2F 04                 2877 	inc	a
   0E30                    2878 00549$:
   0E30 84                 2879 	div	ab
   0E31 30 D5 02           2880 	jnb	F0,00550$
   0E34 F4                 2881 	cpl	a
   0E35 04                 2882 	inc	a
   0E36                    2883 00550$:
   0E36 FE                 2884 	mov	r6,a
   0E37 C0 07              2885 	push	ar7
   0E39 C0 00              2886 	push	ar0
   0E3B C0 01              2887 	push	ar1
   0E3D C0 06              2888 	push	ar6
   0E3F 75 82 06           2889 	mov	dpl,#0x06
   0E42 12s00r3D           2890 	lcall	_Write7219
   0E45 15 81              2891 	dec	sp
   0E47 D0 01              2892 	pop	ar1
   0E49 D0 00              2893 	pop	ar0
   0E4B D0 07              2894 	pop	ar7
                           2895 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:368: Write7219(5, open_close_time[4] % 10);
   0E4D C0 00              2896 	push	ar0
   0E4F E5*00              2897 	mov	a,_bp
   0E51 24 0A              2898 	add	a,#0x0a
   0E53 F8                 2899 	mov	r0,a
   0E54 86 00              2900 	mov	ar0,@r0
   0E56 86 06              2901 	mov	ar6,@r0
   0E58 D0 00              2902 	pop	ar0
   0E5A 75 F0 0A           2903 	mov	b,#0x0a
   0E5D EE                 2904 	mov	a,r6
   0E5E C2 D5              2905 	clr	F0
   0E60 30 E7 04           2906 	jnb	acc.7,00551$
   0E63 D2 D5              2907 	setb	F0
   0E65 F4                 2908 	cpl	a
   0E66 04                 2909 	inc	a
   0E67                    2910 00551$:
   0E67 84                 2911 	div	ab
   0E68 E5 F0              2912 	mov	a,b
   0E6A 30 D5 02           2913 	jnb	F0,00552$
   0E6D F4                 2914 	cpl	a
   0E6E 04                 2915 	inc	a
   0E6F                    2916 00552$:
   0E6F FE                 2917 	mov	r6,a
   0E70 C0 07              2918 	push	ar7
   0E72 C0 00              2919 	push	ar0
   0E74 C0 01              2920 	push	ar1
   0E76 C0 06              2921 	push	ar6
   0E78 75 82 05           2922 	mov	dpl,#0x05
   0E7B 12s00r3D           2923 	lcall	_Write7219
   0E7E 15 81              2924 	dec	sp
   0E80 D0 01              2925 	pop	ar1
   0E82 D0 00              2926 	pop	ar0
   0E84 D0 07              2927 	pop	ar7
   0E86 80 24              2928 	sjmp	00245$
   0E88                    2929 00244$:
                           2930 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:370: Write7219(6, 0x0f);
   0E88 C0 07              2931 	push	ar7
   0E8A C0 00              2932 	push	ar0
   0E8C C0 01              2933 	push	ar1
   0E8E 74 0F              2934 	mov	a,#0x0F
   0E90 C0 E0              2935 	push	acc
   0E92 75 82 06           2936 	mov	dpl,#0x06
   0E95 12s00r3D           2937 	lcall	_Write7219
   0E98 15 81              2938 	dec	sp
                           2939 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:371: Write7219(5, 0x0f); 
   0E9A 74 0F              2940 	mov	a,#0x0F
   0E9C C0 E0              2941 	push	acc
   0E9E 75 82 05           2942 	mov	dpl,#0x05
   0EA1 12s00r3D           2943 	lcall	_Write7219
   0EA4 15 81              2944 	dec	sp
   0EA6 D0 01              2945 	pop	ar1
   0EA8 D0 00              2946 	pop	ar0
   0EAA D0 07              2947 	pop	ar7
   0EAC                    2948 00245$:
                           2949 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:373: Write7219(8, open_close_time[3] / 10);
   0EAC C0 00              2950 	push	ar0
   0EAE E5*00              2951 	mov	a,_bp
   0EB0 24 09              2952 	add	a,#0x09
   0EB2 F8                 2953 	mov	r0,a
   0EB3 86 00              2954 	mov	ar0,@r0
   0EB5 86 06              2955 	mov	ar6,@r0
   0EB7 D0 00              2956 	pop	ar0
   0EB9 C2 D5              2957 	clr	F0
   0EBB 75 F0 0A           2958 	mov	b,#0x0a
   0EBE EE                 2959 	mov	a,r6
   0EBF 30 E7 04           2960 	jnb	acc.7,00553$
   0EC2 B2 D5              2961 	cpl	F0
   0EC4 F4                 2962 	cpl	a
   0EC5 04                 2963 	inc	a
   0EC6                    2964 00553$:
   0EC6 84                 2965 	div	ab
   0EC7 30 D5 02           2966 	jnb	F0,00554$
   0ECA F4                 2967 	cpl	a
   0ECB 04                 2968 	inc	a
   0ECC                    2969 00554$:
   0ECC FE                 2970 	mov	r6,a
   0ECD C0 07              2971 	push	ar7
   0ECF C0 00              2972 	push	ar0
   0ED1 C0 01              2973 	push	ar1
   0ED3 C0 06              2974 	push	ar6
   0ED5 75 82 08           2975 	mov	dpl,#0x08
   0ED8 12s00r3D           2976 	lcall	_Write7219
   0EDB 15 81              2977 	dec	sp
   0EDD D0 01              2978 	pop	ar1
   0EDF D0 00              2979 	pop	ar0
   0EE1 D0 07              2980 	pop	ar7
                           2981 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:374: Write7219(7, open_close_time[3] % 10); 
   0EE3 C0 00              2982 	push	ar0
   0EE5 E5*00              2983 	mov	a,_bp
   0EE7 24 09              2984 	add	a,#0x09
   0EE9 F8                 2985 	mov	r0,a
   0EEA 86 00              2986 	mov	ar0,@r0
   0EEC 86 06              2987 	mov	ar6,@r0
   0EEE D0 00              2988 	pop	ar0
   0EF0 75 F0 0A           2989 	mov	b,#0x0a
   0EF3 EE                 2990 	mov	a,r6
   0EF4 C2 D5              2991 	clr	F0
   0EF6 30 E7 04           2992 	jnb	acc.7,00555$
   0EF9 D2 D5              2993 	setb	F0
   0EFB F4                 2994 	cpl	a
   0EFC 04                 2995 	inc	a
   0EFD                    2996 00555$:
   0EFD 84                 2997 	div	ab
   0EFE E5 F0              2998 	mov	a,b
   0F00 30 D5 02           2999 	jnb	F0,00556$
   0F03 F4                 3000 	cpl	a
   0F04 04                 3001 	inc	a
   0F05                    3002 00556$:
   0F05 FE                 3003 	mov	r6,a
   0F06 C0 07              3004 	push	ar7
   0F08 C0 00              3005 	push	ar0
   0F0A C0 01              3006 	push	ar1
   0F0C C0 06              3007 	push	ar6
   0F0E 75 82 07           3008 	mov	dpl,#0x07
   0F11 12s00r3D           3009 	lcall	_Write7219
   0F14 15 81              3010 	dec	sp
   0F16 D0 01              3011 	pop	ar1
   0F18 D0 00              3012 	pop	ar0
   0F1A D0 07              3013 	pop	ar7
                           3014 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:375: Write7219(4, open_close_time[5] / 10);
   0F1C C0 00              3015 	push	ar0
   0F1E E5*00              3016 	mov	a,_bp
   0F20 24 0B              3017 	add	a,#0x0b
   0F22 F8                 3018 	mov	r0,a
   0F23 86 00              3019 	mov	ar0,@r0
   0F25 86 06              3020 	mov	ar6,@r0
   0F27 D0 00              3021 	pop	ar0
   0F29 C2 D5              3022 	clr	F0
   0F2B 75 F0 0A           3023 	mov	b,#0x0a
   0F2E EE                 3024 	mov	a,r6
   0F2F 30 E7 04           3025 	jnb	acc.7,00557$
   0F32 B2 D5              3026 	cpl	F0
   0F34 F4                 3027 	cpl	a
   0F35 04                 3028 	inc	a
   0F36                    3029 00557$:
   0F36 84                 3030 	div	ab
   0F37 30 D5 02           3031 	jnb	F0,00558$
   0F3A F4                 3032 	cpl	a
   0F3B 04                 3033 	inc	a
   0F3C                    3034 00558$:
   0F3C FE                 3035 	mov	r6,a
   0F3D C0 07              3036 	push	ar7
   0F3F C0 00              3037 	push	ar0
   0F41 C0 01              3038 	push	ar1
   0F43 C0 06              3039 	push	ar6
   0F45 75 82 04           3040 	mov	dpl,#0x04
   0F48 12s00r3D           3041 	lcall	_Write7219
   0F4B 15 81              3042 	dec	sp
   0F4D D0 01              3043 	pop	ar1
   0F4F D0 00              3044 	pop	ar0
   0F51 D0 07              3045 	pop	ar7
                           3046 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:376: Write7219(3, open_close_time[5] % 10);
   0F53 C0 00              3047 	push	ar0
   0F55 E5*00              3048 	mov	a,_bp
   0F57 24 0B              3049 	add	a,#0x0b
   0F59 F8                 3050 	mov	r0,a
   0F5A 86 00              3051 	mov	ar0,@r0
   0F5C 86 06              3052 	mov	ar6,@r0
   0F5E D0 00              3053 	pop	ar0
   0F60 75 F0 0A           3054 	mov	b,#0x0a
   0F63 EE                 3055 	mov	a,r6
   0F64 C2 D5              3056 	clr	F0
   0F66 30 E7 04           3057 	jnb	acc.7,00559$
   0F69 D2 D5              3058 	setb	F0
   0F6B F4                 3059 	cpl	a
   0F6C 04                 3060 	inc	a
   0F6D                    3061 00559$:
   0F6D 84                 3062 	div	ab
   0F6E E5 F0              3063 	mov	a,b
   0F70 30 D5 02           3064 	jnb	F0,00560$
   0F73 F4                 3065 	cpl	a
   0F74 04                 3066 	inc	a
   0F75                    3067 00560$:
   0F75 FE                 3068 	mov	r6,a
   0F76 C0 07              3069 	push	ar7
   0F78 C0 00              3070 	push	ar0
   0F7A C0 01              3071 	push	ar1
   0F7C C0 06              3072 	push	ar6
   0F7E 75 82 03           3073 	mov	dpl,#0x03
   0F81 12s00r3D           3074 	lcall	_Write7219
   0F84 15 81              3075 	dec	sp
   0F86 D0 01              3076 	pop	ar1
   0F88 D0 00              3077 	pop	ar0
   0F8A D0 07              3078 	pop	ar7
   0F8C 02s11r21           3079 	ljmp	00256$
   0F8F                    3080 00252$:
                           3081 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:377: } else if (mode2_change_place == 5) {
   0F8F C0 00              3082 	push	ar0
   0F91 A8*00              3083 	mov	r0,_bp
   0F93 08                 3084 	inc	r0
   0F94 B6 05 02           3085 	cjne	@r0,#0x05,00561$
   0F97 80 05              3086 	sjmp	00562$
   0F99                    3087 00561$:
   0F99 D0 00              3088 	pop	ar0
   0F9B 02s11r21           3089 	ljmp	00256$
   0F9E                    3090 00562$:
   0F9E D0 00              3091 	pop	ar0
                           3092 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:378: if (time_count >= 500) {
   0FA0 C3                 3093 	clr	c
   0FA1 E5*08              3094 	mov	a,_time_count
   0FA3 94 F4              3095 	subb	a,#0xF4
   0FA5 E5*09              3096 	mov	a,(_time_count + 1)
   0FA7 94 01              3097 	subb	a,#0x01
   0FA9 40 72              3098 	jc	00247$
                           3099 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:379: Write7219(4, open_close_time[5] / 10);
   0FAB C0 00              3100 	push	ar0
   0FAD E5*00              3101 	mov	a,_bp
   0FAF 24 0B              3102 	add	a,#0x0b
   0FB1 F8                 3103 	mov	r0,a
   0FB2 86 00              3104 	mov	ar0,@r0
   0FB4 86 06              3105 	mov	ar6,@r0
   0FB6 D0 00              3106 	pop	ar0
   0FB8 C2 D5              3107 	clr	F0
   0FBA 75 F0 0A           3108 	mov	b,#0x0a
   0FBD EE                 3109 	mov	a,r6
   0FBE 30 E7 04           3110 	jnb	acc.7,00564$
   0FC1 B2 D5              3111 	cpl	F0
   0FC3 F4                 3112 	cpl	a
   0FC4 04                 3113 	inc	a
   0FC5                    3114 00564$:
   0FC5 84                 3115 	div	ab
   0FC6 30 D5 02           3116 	jnb	F0,00565$
   0FC9 F4                 3117 	cpl	a
   0FCA 04                 3118 	inc	a
   0FCB                    3119 00565$:
   0FCB FE                 3120 	mov	r6,a
   0FCC C0 07              3121 	push	ar7
   0FCE C0 00              3122 	push	ar0
   0FD0 C0 01              3123 	push	ar1
   0FD2 C0 06              3124 	push	ar6
   0FD4 75 82 04           3125 	mov	dpl,#0x04
   0FD7 12s00r3D           3126 	lcall	_Write7219
   0FDA 15 81              3127 	dec	sp
   0FDC D0 01              3128 	pop	ar1
   0FDE D0 00              3129 	pop	ar0
   0FE0 D0 07              3130 	pop	ar7
                           3131 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:380: Write7219(3, open_close_time[5] % 10);
   0FE2 C0 00              3132 	push	ar0
   0FE4 E5*00              3133 	mov	a,_bp
   0FE6 24 0B              3134 	add	a,#0x0b
   0FE8 F8                 3135 	mov	r0,a
   0FE9 86 00              3136 	mov	ar0,@r0
   0FEB 86 06              3137 	mov	ar6,@r0
   0FED D0 00              3138 	pop	ar0
   0FEF 75 F0 0A           3139 	mov	b,#0x0a
   0FF2 EE                 3140 	mov	a,r6
   0FF3 C2 D5              3141 	clr	F0
   0FF5 30 E7 04           3142 	jnb	acc.7,00566$
   0FF8 D2 D5              3143 	setb	F0
   0FFA F4                 3144 	cpl	a
   0FFB 04                 3145 	inc	a
   0FFC                    3146 00566$:
   0FFC 84                 3147 	div	ab
   0FFD E5 F0              3148 	mov	a,b
   0FFF 30 D5 02           3149 	jnb	F0,00567$
   1002 F4                 3150 	cpl	a
   1003 04                 3151 	inc	a
   1004                    3152 00567$:
   1004 FE                 3153 	mov	r6,a
   1005 C0 07              3154 	push	ar7
   1007 C0 00              3155 	push	ar0
   1009 C0 01              3156 	push	ar1
   100B C0 06              3157 	push	ar6
   100D 75 82 03           3158 	mov	dpl,#0x03
   1010 12s00r3D           3159 	lcall	_Write7219
   1013 15 81              3160 	dec	sp
   1015 D0 01              3161 	pop	ar1
   1017 D0 00              3162 	pop	ar0
   1019 D0 07              3163 	pop	ar7
   101B 80 24              3164 	sjmp	00248$
   101D                    3165 00247$:
                           3166 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:382: Write7219(4, 0x0f);
   101D C0 07              3167 	push	ar7
   101F C0 00              3168 	push	ar0
   1021 C0 01              3169 	push	ar1
   1023 74 0F              3170 	mov	a,#0x0F
   1025 C0 E0              3171 	push	acc
   1027 75 82 04           3172 	mov	dpl,#0x04
   102A 12s00r3D           3173 	lcall	_Write7219
   102D 15 81              3174 	dec	sp
                           3175 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:383: Write7219(3, 0x0f); 
   102F 74 0F              3176 	mov	a,#0x0F
   1031 C0 E0              3177 	push	acc
   1033 75 82 03           3178 	mov	dpl,#0x03
   1036 12s00r3D           3179 	lcall	_Write7219
   1039 15 81              3180 	dec	sp
   103B D0 01              3181 	pop	ar1
   103D D0 00              3182 	pop	ar0
   103F D0 07              3183 	pop	ar7
   1041                    3184 00248$:
                           3185 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:385: Write7219(5, open_close_time[4] % 10);
   1041 C0 00              3186 	push	ar0
   1043 E5*00              3187 	mov	a,_bp
   1045 24 0A              3188 	add	a,#0x0a
   1047 F8                 3189 	mov	r0,a
   1048 86 00              3190 	mov	ar0,@r0
   104A 86 06              3191 	mov	ar6,@r0
   104C D0 00              3192 	pop	ar0
   104E 75 F0 0A           3193 	mov	b,#0x0a
   1051 EE                 3194 	mov	a,r6
   1052 C2 D5              3195 	clr	F0
   1054 30 E7 04           3196 	jnb	acc.7,00568$
   1057 D2 D5              3197 	setb	F0
   1059 F4                 3198 	cpl	a
   105A 04                 3199 	inc	a
   105B                    3200 00568$:
   105B 84                 3201 	div	ab
   105C E5 F0              3202 	mov	a,b
   105E 30 D5 02           3203 	jnb	F0,00569$
   1061 F4                 3204 	cpl	a
   1062 04                 3205 	inc	a
   1063                    3206 00569$:
   1063 FE                 3207 	mov	r6,a
   1064 C0 07              3208 	push	ar7
   1066 C0 00              3209 	push	ar0
   1068 C0 01              3210 	push	ar1
   106A C0 06              3211 	push	ar6
   106C 75 82 05           3212 	mov	dpl,#0x05
   106F 12s00r3D           3213 	lcall	_Write7219
   1072 15 81              3214 	dec	sp
   1074 D0 01              3215 	pop	ar1
   1076 D0 00              3216 	pop	ar0
   1078 D0 07              3217 	pop	ar7
                           3218 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:386: Write7219(6, open_close_time[4] / 10);
   107A C0 00              3219 	push	ar0
   107C E5*00              3220 	mov	a,_bp
   107E 24 0A              3221 	add	a,#0x0a
   1080 F8                 3222 	mov	r0,a
   1081 86 00              3223 	mov	ar0,@r0
   1083 86 06              3224 	mov	ar6,@r0
   1085 D0 00              3225 	pop	ar0
   1087 C2 D5              3226 	clr	F0
   1089 75 F0 0A           3227 	mov	b,#0x0a
   108C EE                 3228 	mov	a,r6
   108D 30 E7 04           3229 	jnb	acc.7,00570$
   1090 B2 D5              3230 	cpl	F0
   1092 F4                 3231 	cpl	a
   1093 04                 3232 	inc	a
   1094                    3233 00570$:
   1094 84                 3234 	div	ab
   1095 30 D5 02           3235 	jnb	F0,00571$
   1098 F4                 3236 	cpl	a
   1099 04                 3237 	inc	a
   109A                    3238 00571$:
   109A FE                 3239 	mov	r6,a
   109B C0 07              3240 	push	ar7
   109D C0 00              3241 	push	ar0
   109F C0 01              3242 	push	ar1
   10A1 C0 06              3243 	push	ar6
   10A3 75 82 06           3244 	mov	dpl,#0x06
   10A6 12s00r3D           3245 	lcall	_Write7219
   10A9 15 81              3246 	dec	sp
   10AB D0 01              3247 	pop	ar1
   10AD D0 00              3248 	pop	ar0
   10AF D0 07              3249 	pop	ar7
                           3250 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:387: Write7219(7, open_close_time[3] % 10); 
   10B1 C0 00              3251 	push	ar0
   10B3 E5*00              3252 	mov	a,_bp
   10B5 24 09              3253 	add	a,#0x09
   10B7 F8                 3254 	mov	r0,a
   10B8 86 00              3255 	mov	ar0,@r0
   10BA 86 06              3256 	mov	ar6,@r0
   10BC D0 00              3257 	pop	ar0
   10BE 75 F0 0A           3258 	mov	b,#0x0a
   10C1 EE                 3259 	mov	a,r6
   10C2 C2 D5              3260 	clr	F0
   10C4 30 E7 04           3261 	jnb	acc.7,00572$
   10C7 D2 D5              3262 	setb	F0
   10C9 F4                 3263 	cpl	a
   10CA 04                 3264 	inc	a
   10CB                    3265 00572$:
   10CB 84                 3266 	div	ab
   10CC E5 F0              3267 	mov	a,b
   10CE 30 D5 02           3268 	jnb	F0,00573$
   10D1 F4                 3269 	cpl	a
   10D2 04                 3270 	inc	a
   10D3                    3271 00573$:
   10D3 FE                 3272 	mov	r6,a
   10D4 C0 07              3273 	push	ar7
   10D6 C0 00              3274 	push	ar0
   10D8 C0 01              3275 	push	ar1
   10DA C0 06              3276 	push	ar6
   10DC 75 82 07           3277 	mov	dpl,#0x07
   10DF 12s00r3D           3278 	lcall	_Write7219
   10E2 15 81              3279 	dec	sp
   10E4 D0 01              3280 	pop	ar1
   10E6 D0 00              3281 	pop	ar0
   10E8 D0 07              3282 	pop	ar7
                           3283 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:388: Write7219(8, open_close_time[3] / 10);
   10EA C0 00              3284 	push	ar0
   10EC E5*00              3285 	mov	a,_bp
   10EE 24 09              3286 	add	a,#0x09
   10F0 F8                 3287 	mov	r0,a
   10F1 86 00              3288 	mov	ar0,@r0
   10F3 86 06              3289 	mov	ar6,@r0
   10F5 D0 00              3290 	pop	ar0
   10F7 C2 D5              3291 	clr	F0
   10F9 75 F0 0A           3292 	mov	b,#0x0a
   10FC EE                 3293 	mov	a,r6
   10FD 30 E7 04           3294 	jnb	acc.7,00574$
   1100 B2 D5              3295 	cpl	F0
   1102 F4                 3296 	cpl	a
   1103 04                 3297 	inc	a
   1104                    3298 00574$:
   1104 84                 3299 	div	ab
   1105 30 D5 02           3300 	jnb	F0,00575$
   1108 F4                 3301 	cpl	a
   1109 04                 3302 	inc	a
   110A                    3303 00575$:
   110A FE                 3304 	mov	r6,a
   110B C0 07              3305 	push	ar7
   110D C0 00              3306 	push	ar0
   110F C0 01              3307 	push	ar1
   1111 C0 06              3308 	push	ar6
   1113 75 82 08           3309 	mov	dpl,#0x08
   1116 12s00r3D           3310 	lcall	_Write7219
   1119 15 81              3311 	dec	sp
   111B D0 01              3312 	pop	ar1
   111D D0 00              3313 	pop	ar0
   111F D0 07              3314 	pop	ar7
   1121                    3315 00256$:
                           3316 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:390: Write7219(2, 2);
   1121 C0 07              3317 	push	ar7
   1123 C0 00              3318 	push	ar0
   1125 C0 01              3319 	push	ar1
   1127 74 02              3320 	mov	a,#0x02
   1129 C0 E0              3321 	push	acc
   112B 75 82 02           3322 	mov	dpl,#0x02
   112E 12s00r3D           3323 	lcall	_Write7219
   1131 15 81              3324 	dec	sp
   1133 D0 01              3325 	pop	ar1
   1135 D0 00              3326 	pop	ar0
   1137 D0 07              3327 	pop	ar7
   1139                    3328 00259$:
                           3329 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:392: Write7219(1, 2);
   1139 C0 07              3330 	push	ar7
   113B C0 00              3331 	push	ar0
   113D C0 01              3332 	push	ar1
   113F 74 02              3333 	mov	a,#0x02
   1141 C0 E0              3334 	push	acc
   1143 75 82 01           3335 	mov	dpl,#0x01
   1146 12s00r3D           3336 	lcall	_Write7219
   1149 15 81              3337 	dec	sp
   114B D0 01              3338 	pop	ar1
   114D D0 00              3339 	pop	ar0
   114F D0 07              3340 	pop	ar7
                           3341 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:393: if (open_close_time[0] == T_hour && open_close_time[1] == T_min && open_close_time[2] == T_sec) {
   1151 E6                 3342 	mov	a,@r0
   1152 FE                 3343 	mov	r6,a
   1153 B5*0C 26           3344 	cjne	a,_T_hour,00265$
   1156 E7                 3345 	mov	a,@r1
   1157 FE                 3346 	mov	r6,a
   1158 B5*0D 21           3347 	cjne	a,_T_min,00265$
   115B C0 00              3348 	push	ar0
   115D A8 07              3349 	mov	r0,ar7
   115F 86 06              3350 	mov	ar6,@r0
   1161 D0 00              3351 	pop	ar0
   1163 EE                 3352 	mov	a,r6
   1164 B5*0E 15           3353 	cjne	a,_T_sec,00265$
                           3354 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:394: server_action(1);
   1167 90 00 01           3355 	mov	dptr,#0x0001
   116A C0 07              3356 	push	ar7
   116C C0 00              3357 	push	ar0
   116E C0 01              3358 	push	ar1
   1170 12s02r5B           3359 	lcall	_server_action
   1173 D0 01              3360 	pop	ar1
   1175 D0 00              3361 	pop	ar0
   1177 D0 07              3362 	pop	ar7
   1179 02s1Ar20           3363 	ljmp	00299$
   117C                    3364 00265$:
                           3365 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:395: } else if (open_close_time[3] == T_hour && open_close_time[4] == T_min && open_close_time[5] == T_sec) {
   117C C0 00              3366 	push	ar0
   117E E5*00              3367 	mov	a,_bp
   1180 24 09              3368 	add	a,#0x09
   1182 F8                 3369 	mov	r0,a
   1183 86 00              3370 	mov	ar0,@r0
   1185 86 06              3371 	mov	ar6,@r0
   1187 D0 00              3372 	pop	ar0
   1189 EE                 3373 	mov	a,r6
   118A B5*0C 02           3374 	cjne	a,_T_hour,00582$
   118D 80 03              3375 	sjmp	00583$
   118F                    3376 00582$:
   118F 02s1Ar20           3377 	ljmp	00299$
   1192                    3378 00583$:
   1192 C0 00              3379 	push	ar0
   1194 E5*00              3380 	mov	a,_bp
   1196 24 0A              3381 	add	a,#0x0a
   1198 F8                 3382 	mov	r0,a
   1199 86 00              3383 	mov	ar0,@r0
   119B 86 06              3384 	mov	ar6,@r0
   119D D0 00              3385 	pop	ar0
   119F EE                 3386 	mov	a,r6
   11A0 B5*0D 02           3387 	cjne	a,_T_min,00584$
   11A3 80 03              3388 	sjmp	00585$
   11A5                    3389 00584$:
   11A5 02s1Ar20           3390 	ljmp	00299$
   11A8                    3391 00585$:
   11A8 C0 00              3392 	push	ar0
   11AA E5*00              3393 	mov	a,_bp
   11AC 24 0B              3394 	add	a,#0x0b
   11AE F8                 3395 	mov	r0,a
   11AF 86 00              3396 	mov	ar0,@r0
   11B1 86 06              3397 	mov	ar6,@r0
   11B3 D0 00              3398 	pop	ar0
   11B5 EE                 3399 	mov	a,r6
   11B6 B5*0E 02           3400 	cjne	a,_T_sec,00586$
   11B9 80 03              3401 	sjmp	00587$
   11BB                    3402 00586$:
   11BB 02s1Ar20           3403 	ljmp	00299$
   11BE                    3404 00587$:
                           3405 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:396: server_action(2);
   11BE 90 00 02           3406 	mov	dptr,#0x0002
   11C1 C0 07              3407 	push	ar7
   11C3 C0 00              3408 	push	ar0
   11C5 C0 01              3409 	push	ar1
   11C7 12s02r5B           3410 	lcall	_server_action
   11CA D0 01              3411 	pop	ar1
   11CC D0 00              3412 	pop	ar0
   11CE D0 07              3413 	pop	ar7
   11D0 02s1Ar20           3414 	ljmp	00299$
   11D3                    3415 00295$:
                           3416 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:398: } else if (mode == 3) { // 顯示當前時間
   11D3 C0 00              3417 	push	ar0
   11D5 E5*00              3418 	mov	a,_bp
   11D7 24 08              3419 	add	a,#0x08
   11D9 F8                 3420 	mov	r0,a
   11DA B6 03 02           3421 	cjne	@r0,#0x03,00588$
   11DD 80 05              3422 	sjmp	00589$
   11DF                    3423 00588$:
   11DF D0 00              3424 	pop	ar0
   11E1 02s12rF1           3425 	ljmp	00292$
   11E4                    3426 00589$:
   11E4 D0 00              3427 	pop	ar0
                           3428 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:399: Write7219ALL(T_hour / 10, T_hour % 10, T_min / 10, T_min % 10, T_sec / 10, T_sec % 10, 0x0f, 3);
   11E6 C0 07              3429 	push	ar7
   11E8 75 F0 0A           3430 	mov	b,#0x0a
   11EB E5*0E              3431 	mov	a,_T_sec
   11ED C2 D5              3432 	clr	F0
   11EF 30 E7 04           3433 	jnb	acc.7,00590$
   11F2 D2 D5              3434 	setb	F0
   11F4 F4                 3435 	cpl	a
   11F5 04                 3436 	inc	a
   11F6                    3437 00590$:
   11F6 84                 3438 	div	ab
   11F7 E5 F0              3439 	mov	a,b
   11F9 30 D5 02           3440 	jnb	F0,00591$
   11FC F4                 3441 	cpl	a
   11FD 04                 3442 	inc	a
   11FE                    3443 00591$:
   11FE FE                 3444 	mov	r6,a
   11FF FA                 3445 	mov	r2,a
   1200 33                 3446 	rlc	a
   1201 95 E0              3447 	subb	a,acc
   1203 FB                 3448 	mov	r3,a
   1204 C2 D5              3449 	clr	F0
   1206 75 F0 0A           3450 	mov	b,#0x0a
   1209 E5*0E              3451 	mov	a,_T_sec
   120B 30 E7 04           3452 	jnb	acc.7,00592$
   120E B2 D5              3453 	cpl	F0
   1210 F4                 3454 	cpl	a
   1211 04                 3455 	inc	a
   1212                    3456 00592$:
   1212 84                 3457 	div	ab
   1213 30 D5 02           3458 	jnb	F0,00593$
   1216 F4                 3459 	cpl	a
   1217 04                 3460 	inc	a
   1218                    3461 00593$:
   1218 FC                 3462 	mov	r4,a
   1219 A2 D5              3463 	mov	c,F0
   121B 95 E0              3464 	subb	a,acc
   121D FD                 3465 	mov	r5,a
   121E 75 F0 0A           3466 	mov	b,#0x0a
   1221 E5*0D              3467 	mov	a,_T_min
   1223 C2 D5              3468 	clr	F0
   1225 30 E7 04           3469 	jnb	acc.7,00594$
   1228 D2 D5              3470 	setb	F0
   122A F4                 3471 	cpl	a
   122B 04                 3472 	inc	a
   122C                    3473 00594$:
   122C 84                 3474 	div	ab
   122D E5 F0              3475 	mov	a,b
   122F 30 D5 02           3476 	jnb	F0,00595$
   1232 F4                 3477 	cpl	a
   1233 04                 3478 	inc	a
   1234                    3479 00595$:
   1234 FE                 3480 	mov	r6,a
   1235 C0 00              3481 	push	ar0
   1237 E5*00              3482 	mov	a,_bp
   1239 24 10              3483 	add	a,#0x10
   123B F8                 3484 	mov	r0,a
   123C A6 06              3485 	mov	@r0,ar6
   123E EE                 3486 	mov	a,r6
   123F 33                 3487 	rlc	a
   1240 95 E0              3488 	subb	a,acc
   1242 08                 3489 	inc	r0
   1243 F6                 3490 	mov	@r0,a
   1244 E5*00              3491 	mov	a,_bp
   1246 24 12              3492 	add	a,#0x12
   1248 F8                 3493 	mov	r0,a
   1249 C2 D5              3494 	clr	F0
   124B 75 F0 0A           3495 	mov	b,#0x0a
   124E E5*0D              3496 	mov	a,_T_min
   1250 30 E7 04           3497 	jnb	acc.7,00596$
   1253 B2 D5              3498 	cpl	F0
   1255 F4                 3499 	cpl	a
   1256 04                 3500 	inc	a
   1257                    3501 00596$:
   1257 84                 3502 	div	ab
   1258 30 D5 02           3503 	jnb	F0,00597$
   125B F4                 3504 	cpl	a
   125C 04                 3505 	inc	a
   125D                    3506 00597$:
   125D F6                 3507 	mov	@r0,a
   125E A2 D5              3508 	mov	c,F0
   1260 95 E0              3509 	subb	a,acc
   1262 08                 3510 	inc	r0
   1263 F6                 3511 	mov	@r0,a
   1264 D0 00              3512 	pop	ar0
   1266 75 F0 0A           3513 	mov	b,#0x0a
   1269 E5*0C              3514 	mov	a,_T_hour
   126B C2 D5              3515 	clr	F0
   126D 30 E7 04           3516 	jnb	acc.7,00598$
   1270 D2 D5              3517 	setb	F0
   1272 F4                 3518 	cpl	a
   1273 04                 3519 	inc	a
   1274                    3520 00598$:
   1274 84                 3521 	div	ab
   1275 E5 F0              3522 	mov	a,b
   1277 30 D5 02           3523 	jnb	F0,00599$
   127A F4                 3524 	cpl	a
   127B 04                 3525 	inc	a
   127C                    3526 00599$:
   127C FE                 3527 	mov	r6,a
   127D 33                 3528 	rlc	a
   127E 95 E0              3529 	subb	a,acc
   1280 FF                 3530 	mov	r7,a
   1281 C2 D5              3531 	clr	F0
   1283 75 F0 0A           3532 	mov	b,#0x0a
   1286 E5*0C              3533 	mov	a,_T_hour
   1288 30 E7 04           3534 	jnb	acc.7,00600$
   128B B2 D5              3535 	cpl	F0
   128D F4                 3536 	cpl	a
   128E 04                 3537 	inc	a
   128F                    3538 00600$:
   128F 84                 3539 	div	ab
   1290 30 D5 02           3540 	jnb	F0,00601$
   1293 F4                 3541 	cpl	a
   1294 04                 3542 	inc	a
   1295                    3543 00601$:
   1295 F5 82              3544 	mov	dpl,a
   1297 A2 D5              3545 	mov	c,F0
   1299 95 E0              3546 	subb	a,acc
   129B F5 83              3547 	mov	dph,a
   129D C0 07              3548 	push	ar7
   129F C0 00              3549 	push	ar0
   12A1 C0 01              3550 	push	ar1
   12A3 74 03              3551 	mov	a,#0x03
   12A5 C0 E0              3552 	push	acc
   12A7 E4                 3553 	clr	a
   12A8 C0 E0              3554 	push	acc
   12AA 74 0F              3555 	mov	a,#0x0F
   12AC C0 E0              3556 	push	acc
   12AE E4                 3557 	clr	a
   12AF C0 E0              3558 	push	acc
   12B1 C0 02              3559 	push	ar2
   12B3 C0 03              3560 	push	ar3
   12B5 C0 04              3561 	push	ar4
   12B7 C0 05              3562 	push	ar5
   12B9 85 00 F0           3563 	mov	b,ar0
   12BC E5*00              3564 	mov	a,_bp
   12BE 24 10              3565 	add	a,#0x10
   12C0 F8                 3566 	mov	r0,a
   12C1 E6                 3567 	mov	a,@r0
   12C2 C0 E0              3568 	push	acc
   12C4 08                 3569 	inc	r0
   12C5 E6                 3570 	mov	a,@r0
   12C6 C0 E0              3571 	push	acc
   12C8 A8 F0              3572 	mov	r0,b
   12CA 85 00 F0           3573 	mov	b,ar0
   12CD E5*00              3574 	mov	a,_bp
   12CF 24 12              3575 	add	a,#0x12
   12D1 F8                 3576 	mov	r0,a
   12D2 E6                 3577 	mov	a,@r0
   12D3 C0 E0              3578 	push	acc
   12D5 08                 3579 	inc	r0
   12D6 E6                 3580 	mov	a,@r0
   12D7 C0 E0              3581 	push	acc
   12D9 C0 06              3582 	push	ar6
   12DB C0 07              3583 	push	ar7
   12DD 12s01rD0           3584 	lcall	_Write7219ALL
   12E0 E5 81              3585 	mov	a,sp
   12E2 24 F2              3586 	add	a,#0xf2
   12E4 F5 81              3587 	mov	sp,a
   12E6 D0 01              3588 	pop	ar1
   12E8 D0 00              3589 	pop	ar0
   12EA D0 07              3590 	pop	ar7
   12EC D0 07              3591 	pop	ar7
   12EE 02s1Ar20           3592 	ljmp	00299$
   12F1                    3593 00292$:
                           3594 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:400: } else if (mode == 4) {
   12F1 C0 00              3595 	push	ar0
   12F3 E5*00              3596 	mov	a,_bp
   12F5 24 08              3597 	add	a,#0x08
   12F7 F8                 3598 	mov	r0,a
   12F8 B6 04 02           3599 	cjne	@r0,#0x04,00602$
   12FB 80 05              3600 	sjmp	00603$
   12FD                    3601 00602$:
   12FD D0 00              3602 	pop	ar0
   12FF 02s18r93           3603 	ljmp	00289$
   1302                    3604 00603$:
   1302 D0 00              3605 	pop	ar0
                           3606 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:401: if (change_time == 0) {
   1304 E5*11              3607 	mov	a,_change_time
   1306 60 03              3608 	jz	00604$
   1308 02s14rEB           3609 	ljmp	00284$
   130B                    3610 00604$:
                           3611 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:402: if (time_count <= 500) {
   130B C3                 3612 	clr	c
   130C 74 F4              3613 	mov	a,#0xF4
   130E 95*08              3614 	subb	a,_time_count
   1310 74 01              3615 	mov	a,#0x01
   1312 95*09              3616 	subb	a,(_time_count + 1)
   1314 50 03              3617 	jnc	00605$
   1316 02s14r24           3618 	ljmp	00270$
   1319                    3619 00605$:
                           3620 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:403: Write7219ALL(T_hour / 10, T_hour % 10, T_min / 10, T_min % 10, T_sec / 10, T_sec % 10, 0x0f, 4);
   1319 C0 07              3621 	push	ar7
   131B 75 F0 0A           3622 	mov	b,#0x0a
   131E E5*0E              3623 	mov	a,_T_sec
   1320 C2 D5              3624 	clr	F0
   1322 30 E7 04           3625 	jnb	acc.7,00606$
   1325 D2 D5              3626 	setb	F0
   1327 F4                 3627 	cpl	a
   1328 04                 3628 	inc	a
   1329                    3629 00606$:
   1329 84                 3630 	div	ab
   132A E5 F0              3631 	mov	a,b
   132C 30 D5 02           3632 	jnb	F0,00607$
   132F F4                 3633 	cpl	a
   1330 04                 3634 	inc	a
   1331                    3635 00607$:
   1331 FE                 3636 	mov	r6,a
   1332 FA                 3637 	mov	r2,a
   1333 33                 3638 	rlc	a
   1334 95 E0              3639 	subb	a,acc
   1336 FB                 3640 	mov	r3,a
   1337 C2 D5              3641 	clr	F0
   1339 75 F0 0A           3642 	mov	b,#0x0a
   133C E5*0E              3643 	mov	a,_T_sec
   133E 30 E7 04           3644 	jnb	acc.7,00608$
   1341 B2 D5              3645 	cpl	F0
   1343 F4                 3646 	cpl	a
   1344 04                 3647 	inc	a
   1345                    3648 00608$:
   1345 84                 3649 	div	ab
   1346 30 D5 02           3650 	jnb	F0,00609$
   1349 F4                 3651 	cpl	a
   134A 04                 3652 	inc	a
   134B                    3653 00609$:
   134B FC                 3654 	mov	r4,a
   134C A2 D5              3655 	mov	c,F0
   134E 95 E0              3656 	subb	a,acc
   1350 FD                 3657 	mov	r5,a
   1351 75 F0 0A           3658 	mov	b,#0x0a
   1354 E5*0D              3659 	mov	a,_T_min
   1356 C2 D5              3660 	clr	F0
   1358 30 E7 04           3661 	jnb	acc.7,00610$
   135B D2 D5              3662 	setb	F0
   135D F4                 3663 	cpl	a
   135E 04                 3664 	inc	a
   135F                    3665 00610$:
   135F 84                 3666 	div	ab
   1360 E5 F0              3667 	mov	a,b
   1362 30 D5 02           3668 	jnb	F0,00611$
   1365 F4                 3669 	cpl	a
   1366 04                 3670 	inc	a
   1367                    3671 00611$:
   1367 FE                 3672 	mov	r6,a
   1368 C0 00              3673 	push	ar0
   136A E5*00              3674 	mov	a,_bp
   136C 24 0E              3675 	add	a,#0x0e
   136E F8                 3676 	mov	r0,a
   136F A6 06              3677 	mov	@r0,ar6
   1371 EE                 3678 	mov	a,r6
   1372 33                 3679 	rlc	a
   1373 95 E0              3680 	subb	a,acc
   1375 08                 3681 	inc	r0
   1376 F6                 3682 	mov	@r0,a
   1377 E5*00              3683 	mov	a,_bp
   1379 24 0C              3684 	add	a,#0x0c
   137B F8                 3685 	mov	r0,a
   137C C2 D5              3686 	clr	F0
   137E 75 F0 0A           3687 	mov	b,#0x0a
   1381 E5*0D              3688 	mov	a,_T_min
   1383 30 E7 04           3689 	jnb	acc.7,00612$
   1386 B2 D5              3690 	cpl	F0
   1388 F4                 3691 	cpl	a
   1389 04                 3692 	inc	a
   138A                    3693 00612$:
   138A 84                 3694 	div	ab
   138B 30 D5 02           3695 	jnb	F0,00613$
   138E F4                 3696 	cpl	a
   138F 04                 3697 	inc	a
   1390                    3698 00613$:
   1390 F6                 3699 	mov	@r0,a
   1391 A2 D5              3700 	mov	c,F0
   1393 95 E0              3701 	subb	a,acc
   1395 08                 3702 	inc	r0
   1396 F6                 3703 	mov	@r0,a
   1397 D0 00              3704 	pop	ar0
   1399 75 F0 0A           3705 	mov	b,#0x0a
   139C E5*0C              3706 	mov	a,_T_hour
   139E C2 D5              3707 	clr	F0
   13A0 30 E7 04           3708 	jnb	acc.7,00614$
   13A3 D2 D5              3709 	setb	F0
   13A5 F4                 3710 	cpl	a
   13A6 04                 3711 	inc	a
   13A7                    3712 00614$:
   13A7 84                 3713 	div	ab
   13A8 E5 F0              3714 	mov	a,b
   13AA 30 D5 02           3715 	jnb	F0,00615$
   13AD F4                 3716 	cpl	a
   13AE 04                 3717 	inc	a
   13AF                    3718 00615$:
   13AF FE                 3719 	mov	r6,a
   13B0 33                 3720 	rlc	a
   13B1 95 E0              3721 	subb	a,acc
   13B3 FF                 3722 	mov	r7,a
   13B4 C2 D5              3723 	clr	F0
   13B6 75 F0 0A           3724 	mov	b,#0x0a
   13B9 E5*0C              3725 	mov	a,_T_hour
   13BB 30 E7 04           3726 	jnb	acc.7,00616$
   13BE B2 D5              3727 	cpl	F0
   13C0 F4                 3728 	cpl	a
   13C1 04                 3729 	inc	a
   13C2                    3730 00616$:
   13C2 84                 3731 	div	ab
   13C3 30 D5 02           3732 	jnb	F0,00617$
   13C6 F4                 3733 	cpl	a
   13C7 04                 3734 	inc	a
   13C8                    3735 00617$:
   13C8 F5 82              3736 	mov	dpl,a
   13CA A2 D5              3737 	mov	c,F0
   13CC 95 E0              3738 	subb	a,acc
   13CE F5 83              3739 	mov	dph,a
   13D0 C0 07              3740 	push	ar7
   13D2 C0 00              3741 	push	ar0
   13D4 C0 01              3742 	push	ar1
   13D6 74 04              3743 	mov	a,#0x04
   13D8 C0 E0              3744 	push	acc
   13DA E4                 3745 	clr	a
   13DB C0 E0              3746 	push	acc
   13DD 74 0F              3747 	mov	a,#0x0F
   13DF C0 E0              3748 	push	acc
   13E1 E4                 3749 	clr	a
   13E2 C0 E0              3750 	push	acc
   13E4 C0 02              3751 	push	ar2
   13E6 C0 03              3752 	push	ar3
   13E8 C0 04              3753 	push	ar4
   13EA C0 05              3754 	push	ar5
   13EC 85 00 F0           3755 	mov	b,ar0
   13EF E5*00              3756 	mov	a,_bp
   13F1 24 0E              3757 	add	a,#0x0e
   13F3 F8                 3758 	mov	r0,a
   13F4 E6                 3759 	mov	a,@r0
   13F5 C0 E0              3760 	push	acc
   13F7 08                 3761 	inc	r0
   13F8 E6                 3762 	mov	a,@r0
   13F9 C0 E0              3763 	push	acc
   13FB A8 F0              3764 	mov	r0,b
   13FD 85 00 F0           3765 	mov	b,ar0
   1400 E5*00              3766 	mov	a,_bp
   1402 24 0C              3767 	add	a,#0x0c
   1404 F8                 3768 	mov	r0,a
   1405 E6                 3769 	mov	a,@r0
   1406 C0 E0              3770 	push	acc
   1408 08                 3771 	inc	r0
   1409 E6                 3772 	mov	a,@r0
   140A C0 E0              3773 	push	acc
   140C C0 06              3774 	push	ar6
   140E C0 07              3775 	push	ar7
   1410 12s01rD0           3776 	lcall	_Write7219ALL
   1413 E5 81              3777 	mov	a,sp
   1415 24 F2              3778 	add	a,#0xf2
   1417 F5 81              3779 	mov	sp,a
   1419 D0 01              3780 	pop	ar1
   141B D0 00              3781 	pop	ar0
   141D D0 07              3782 	pop	ar7
   141F D0 07              3783 	pop	ar7
   1421 02s1Ar20           3784 	ljmp	00299$
   1424                    3785 00270$:
                           3786 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:405: Write7219ALL(0x0f, 0x0f, T_min / 10, T_min % 10, T_sec / 10, T_sec % 10, 0x0f, 4);
   1424 C0 07              3787 	push	ar7
   1426 75 F0 0A           3788 	mov	b,#0x0a
   1429 E5*0E              3789 	mov	a,_T_sec
   142B C2 D5              3790 	clr	F0
   142D 30 E7 04           3791 	jnb	acc.7,00618$
   1430 D2 D5              3792 	setb	F0
   1432 F4                 3793 	cpl	a
   1433 04                 3794 	inc	a
   1434                    3795 00618$:
   1434 84                 3796 	div	ab
   1435 E5 F0              3797 	mov	a,b
   1437 30 D5 02           3798 	jnb	F0,00619$
   143A F4                 3799 	cpl	a
   143B 04                 3800 	inc	a
   143C                    3801 00619$:
   143C FE                 3802 	mov	r6,a
   143D FA                 3803 	mov	r2,a
   143E 33                 3804 	rlc	a
   143F 95 E0              3805 	subb	a,acc
   1441 FB                 3806 	mov	r3,a
   1442 C2 D5              3807 	clr	F0
   1444 75 F0 0A           3808 	mov	b,#0x0a
   1447 E5*0E              3809 	mov	a,_T_sec
   1449 30 E7 04           3810 	jnb	acc.7,00620$
   144C B2 D5              3811 	cpl	F0
   144E F4                 3812 	cpl	a
   144F 04                 3813 	inc	a
   1450                    3814 00620$:
   1450 84                 3815 	div	ab
   1451 30 D5 02           3816 	jnb	F0,00621$
   1454 F4                 3817 	cpl	a
   1455 04                 3818 	inc	a
   1456                    3819 00621$:
   1456 FC                 3820 	mov	r4,a
   1457 A2 D5              3821 	mov	c,F0
   1459 95 E0              3822 	subb	a,acc
   145B FD                 3823 	mov	r5,a
   145C 75 F0 0A           3824 	mov	b,#0x0a
   145F E5*0D              3825 	mov	a,_T_min
   1461 C2 D5              3826 	clr	F0
   1463 30 E7 04           3827 	jnb	acc.7,00622$
   1466 D2 D5              3828 	setb	F0
   1468 F4                 3829 	cpl	a
   1469 04                 3830 	inc	a
   146A                    3831 00622$:
   146A 84                 3832 	div	ab
   146B E5 F0              3833 	mov	a,b
   146D 30 D5 02           3834 	jnb	F0,00623$
   1470 F4                 3835 	cpl	a
   1471 04                 3836 	inc	a
   1472                    3837 00623$:
   1472 FE                 3838 	mov	r6,a
   1473 C0 00              3839 	push	ar0
   1475 E5*00              3840 	mov	a,_bp
   1477 24 0E              3841 	add	a,#0x0e
   1479 F8                 3842 	mov	r0,a
   147A A6 06              3843 	mov	@r0,ar6
   147C EE                 3844 	mov	a,r6
   147D 33                 3845 	rlc	a
   147E 95 E0              3846 	subb	a,acc
   1480 08                 3847 	inc	r0
   1481 F6                 3848 	mov	@r0,a
   1482 D0 00              3849 	pop	ar0
   1484 C2 D5              3850 	clr	F0
   1486 75 F0 0A           3851 	mov	b,#0x0a
   1489 E5*0D              3852 	mov	a,_T_min
   148B 30 E7 04           3853 	jnb	acc.7,00624$
   148E B2 D5              3854 	cpl	F0
   1490 F4                 3855 	cpl	a
   1491 04                 3856 	inc	a
   1492                    3857 00624$:
   1492 84                 3858 	div	ab
   1493 30 D5 02           3859 	jnb	F0,00625$
   1496 F4                 3860 	cpl	a
   1497 04                 3861 	inc	a
   1498                    3862 00625$:
   1498 FE                 3863 	mov	r6,a
   1499 A2 D5              3864 	mov	c,F0
   149B 95 E0              3865 	subb	a,acc
   149D FF                 3866 	mov	r7,a
   149E C0 07              3867 	push	ar7
   14A0 C0 00              3868 	push	ar0
   14A2 C0 01              3869 	push	ar1
   14A4 74 04              3870 	mov	a,#0x04
   14A6 C0 E0              3871 	push	acc
   14A8 E4                 3872 	clr	a
   14A9 C0 E0              3873 	push	acc
   14AB 74 0F              3874 	mov	a,#0x0F
   14AD C0 E0              3875 	push	acc
   14AF E4                 3876 	clr	a
   14B0 C0 E0              3877 	push	acc
   14B2 C0 02              3878 	push	ar2
   14B4 C0 03              3879 	push	ar3
   14B6 C0 04              3880 	push	ar4
   14B8 C0 05              3881 	push	ar5
   14BA 85 00 F0           3882 	mov	b,ar0
   14BD E5*00              3883 	mov	a,_bp
   14BF 24 0E              3884 	add	a,#0x0e
   14C1 F8                 3885 	mov	r0,a
   14C2 E6                 3886 	mov	a,@r0
   14C3 C0 E0              3887 	push	acc
   14C5 08                 3888 	inc	r0
   14C6 E6                 3889 	mov	a,@r0
   14C7 C0 E0              3890 	push	acc
   14C9 C0 06              3891 	push	ar6
   14CB C0 07              3892 	push	ar7
   14CD 74 0F              3893 	mov	a,#0x0F
   14CF C0 E0              3894 	push	acc
   14D1 E4                 3895 	clr	a
   14D2 C0 E0              3896 	push	acc
   14D4 90 00 0F           3897 	mov	dptr,#0x000F
   14D7 12s01rD0           3898 	lcall	_Write7219ALL
   14DA E5 81              3899 	mov	a,sp
   14DC 24 F2              3900 	add	a,#0xf2
   14DE F5 81              3901 	mov	sp,a
   14E0 D0 01              3902 	pop	ar1
   14E2 D0 00              3903 	pop	ar0
   14E4 D0 07              3904 	pop	ar7
   14E6 D0 07              3905 	pop	ar7
   14E8 02s1Ar20           3906 	ljmp	00299$
   14EB                    3907 00284$:
                           3908 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:407: } else if (change_time == 1) {
   14EB 74 01              3909 	mov	a,#0x01
   14ED B5*11 02           3910 	cjne	a,_change_time,00626$
   14F0 80 03              3911 	sjmp	00627$
   14F2                    3912 00626$:
   14F2 02s16rBF           3913 	ljmp	00281$
   14F5                    3914 00627$:
                           3915 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:408: if (time_count <= 500) {
   14F5 C3                 3916 	clr	c
   14F6 74 F4              3917 	mov	a,#0xF4
   14F8 95*08              3918 	subb	a,_time_count
   14FA 74 01              3919 	mov	a,#0x01
   14FC 95*09              3920 	subb	a,(_time_count + 1)
   14FE 50 03              3921 	jnc	00628$
   1500 02s16r0E           3922 	ljmp	00273$
   1503                    3923 00628$:
                           3924 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:409: Write7219ALL(T_hour / 10, T_hour % 10, T_min / 10, T_min % 10, T_sec / 10, T_sec % 10, 0x0f, 4);
   1503 C0 07              3925 	push	ar7
   1505 75 F0 0A           3926 	mov	b,#0x0a
   1508 E5*0E              3927 	mov	a,_T_sec
   150A C2 D5              3928 	clr	F0
   150C 30 E7 04           3929 	jnb	acc.7,00629$
   150F D2 D5              3930 	setb	F0
   1511 F4                 3931 	cpl	a
   1512 04                 3932 	inc	a
   1513                    3933 00629$:
   1513 84                 3934 	div	ab
   1514 E5 F0              3935 	mov	a,b
   1516 30 D5 02           3936 	jnb	F0,00630$
   1519 F4                 3937 	cpl	a
   151A 04                 3938 	inc	a
   151B                    3939 00630$:
   151B FE                 3940 	mov	r6,a
   151C FA                 3941 	mov	r2,a
   151D 33                 3942 	rlc	a
   151E 95 E0              3943 	subb	a,acc
   1520 FB                 3944 	mov	r3,a
   1521 C2 D5              3945 	clr	F0
   1523 75 F0 0A           3946 	mov	b,#0x0a
   1526 E5*0E              3947 	mov	a,_T_sec
   1528 30 E7 04           3948 	jnb	acc.7,00631$
   152B B2 D5              3949 	cpl	F0
   152D F4                 3950 	cpl	a
   152E 04                 3951 	inc	a
   152F                    3952 00631$:
   152F 84                 3953 	div	ab
   1530 30 D5 02           3954 	jnb	F0,00632$
   1533 F4                 3955 	cpl	a
   1534 04                 3956 	inc	a
   1535                    3957 00632$:
   1535 FC                 3958 	mov	r4,a
   1536 A2 D5              3959 	mov	c,F0
   1538 95 E0              3960 	subb	a,acc
   153A FD                 3961 	mov	r5,a
   153B 75 F0 0A           3962 	mov	b,#0x0a
   153E E5*0D              3963 	mov	a,_T_min
   1540 C2 D5              3964 	clr	F0
   1542 30 E7 04           3965 	jnb	acc.7,00633$
   1545 D2 D5              3966 	setb	F0
   1547 F4                 3967 	cpl	a
   1548 04                 3968 	inc	a
   1549                    3969 00633$:
   1549 84                 3970 	div	ab
   154A E5 F0              3971 	mov	a,b
   154C 30 D5 02           3972 	jnb	F0,00634$
   154F F4                 3973 	cpl	a
   1550 04                 3974 	inc	a
   1551                    3975 00634$:
   1551 FE                 3976 	mov	r6,a
   1552 C0 00              3977 	push	ar0
   1554 E5*00              3978 	mov	a,_bp
   1556 24 0E              3979 	add	a,#0x0e
   1558 F8                 3980 	mov	r0,a
   1559 A6 06              3981 	mov	@r0,ar6
   155B EE                 3982 	mov	a,r6
   155C 33                 3983 	rlc	a
   155D 95 E0              3984 	subb	a,acc
   155F 08                 3985 	inc	r0
   1560 F6                 3986 	mov	@r0,a
   1561 E5*00              3987 	mov	a,_bp
   1563 24 0C              3988 	add	a,#0x0c
   1565 F8                 3989 	mov	r0,a
   1566 C2 D5              3990 	clr	F0
   1568 75 F0 0A           3991 	mov	b,#0x0a
   156B E5*0D              3992 	mov	a,_T_min
   156D 30 E7 04           3993 	jnb	acc.7,00635$
   1570 B2 D5              3994 	cpl	F0
   1572 F4                 3995 	cpl	a
   1573 04                 3996 	inc	a
   1574                    3997 00635$:
   1574 84                 3998 	div	ab
   1575 30 D5 02           3999 	jnb	F0,00636$
   1578 F4                 4000 	cpl	a
   1579 04                 4001 	inc	a
   157A                    4002 00636$:
   157A F6                 4003 	mov	@r0,a
   157B A2 D5              4004 	mov	c,F0
   157D 95 E0              4005 	subb	a,acc
   157F 08                 4006 	inc	r0
   1580 F6                 4007 	mov	@r0,a
   1581 D0 00              4008 	pop	ar0
   1583 75 F0 0A           4009 	mov	b,#0x0a
   1586 E5*0C              4010 	mov	a,_T_hour
   1588 C2 D5              4011 	clr	F0
   158A 30 E7 04           4012 	jnb	acc.7,00637$
   158D D2 D5              4013 	setb	F0
   158F F4                 4014 	cpl	a
   1590 04                 4015 	inc	a
   1591                    4016 00637$:
   1591 84                 4017 	div	ab
   1592 E5 F0              4018 	mov	a,b
   1594 30 D5 02           4019 	jnb	F0,00638$
   1597 F4                 4020 	cpl	a
   1598 04                 4021 	inc	a
   1599                    4022 00638$:
   1599 FE                 4023 	mov	r6,a
   159A 33                 4024 	rlc	a
   159B 95 E0              4025 	subb	a,acc
   159D FF                 4026 	mov	r7,a
   159E C2 D5              4027 	clr	F0
   15A0 75 F0 0A           4028 	mov	b,#0x0a
   15A3 E5*0C              4029 	mov	a,_T_hour
   15A5 30 E7 04           4030 	jnb	acc.7,00639$
   15A8 B2 D5              4031 	cpl	F0
   15AA F4                 4032 	cpl	a
   15AB 04                 4033 	inc	a
   15AC                    4034 00639$:
   15AC 84                 4035 	div	ab
   15AD 30 D5 02           4036 	jnb	F0,00640$
   15B0 F4                 4037 	cpl	a
   15B1 04                 4038 	inc	a
   15B2                    4039 00640$:
   15B2 F5 82              4040 	mov	dpl,a
   15B4 A2 D5              4041 	mov	c,F0
   15B6 95 E0              4042 	subb	a,acc
   15B8 F5 83              4043 	mov	dph,a
   15BA C0 07              4044 	push	ar7
   15BC C0 00              4045 	push	ar0
   15BE C0 01              4046 	push	ar1
   15C0 74 04              4047 	mov	a,#0x04
   15C2 C0 E0              4048 	push	acc
   15C4 E4                 4049 	clr	a
   15C5 C0 E0              4050 	push	acc
   15C7 74 0F              4051 	mov	a,#0x0F
   15C9 C0 E0              4052 	push	acc
   15CB E4                 4053 	clr	a
   15CC C0 E0              4054 	push	acc
   15CE C0 02              4055 	push	ar2
   15D0 C0 03              4056 	push	ar3
   15D2 C0 04              4057 	push	ar4
   15D4 C0 05              4058 	push	ar5
   15D6 85 00 F0           4059 	mov	b,ar0
   15D9 E5*00              4060 	mov	a,_bp
   15DB 24 0E              4061 	add	a,#0x0e
   15DD F8                 4062 	mov	r0,a
   15DE E6                 4063 	mov	a,@r0
   15DF C0 E0              4064 	push	acc
   15E1 08                 4065 	inc	r0
   15E2 E6                 4066 	mov	a,@r0
   15E3 C0 E0              4067 	push	acc
   15E5 A8 F0              4068 	mov	r0,b
   15E7 85 00 F0           4069 	mov	b,ar0
   15EA E5*00              4070 	mov	a,_bp
   15EC 24 0C              4071 	add	a,#0x0c
   15EE F8                 4072 	mov	r0,a
   15EF E6                 4073 	mov	a,@r0
   15F0 C0 E0              4074 	push	acc
   15F2 08                 4075 	inc	r0
   15F3 E6                 4076 	mov	a,@r0
   15F4 C0 E0              4077 	push	acc
   15F6 C0 06              4078 	push	ar6
   15F8 C0 07              4079 	push	ar7
   15FA 12s01rD0           4080 	lcall	_Write7219ALL
   15FD E5 81              4081 	mov	a,sp
   15FF 24 F2              4082 	add	a,#0xf2
   1601 F5 81              4083 	mov	sp,a
   1603 D0 01              4084 	pop	ar1
   1605 D0 00              4085 	pop	ar0
   1607 D0 07              4086 	pop	ar7
   1609 D0 07              4087 	pop	ar7
   160B 02s1Ar20           4088 	ljmp	00299$
   160E                    4089 00273$:
                           4090 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:411: Write7219ALL(T_hour / 10, T_hour % 10, 0x0f, 0x0f, T_sec / 10, T_sec % 10, 0x0f, 4);
   160E C0 07              4091 	push	ar7
   1610 75 F0 0A           4092 	mov	b,#0x0a
   1613 E5*0E              4093 	mov	a,_T_sec
   1615 C2 D5              4094 	clr	F0
   1617 30 E7 04           4095 	jnb	acc.7,00641$
   161A D2 D5              4096 	setb	F0
   161C F4                 4097 	cpl	a
   161D 04                 4098 	inc	a
   161E                    4099 00641$:
   161E 84                 4100 	div	ab
   161F E5 F0              4101 	mov	a,b
   1621 30 D5 02           4102 	jnb	F0,00642$
   1624 F4                 4103 	cpl	a
   1625 04                 4104 	inc	a
   1626                    4105 00642$:
   1626 FE                 4106 	mov	r6,a
   1627 FA                 4107 	mov	r2,a
   1628 33                 4108 	rlc	a
   1629 95 E0              4109 	subb	a,acc
   162B FB                 4110 	mov	r3,a
   162C C2 D5              4111 	clr	F0
   162E 75 F0 0A           4112 	mov	b,#0x0a
   1631 E5*0E              4113 	mov	a,_T_sec
   1633 30 E7 04           4114 	jnb	acc.7,00643$
   1636 B2 D5              4115 	cpl	F0
   1638 F4                 4116 	cpl	a
   1639 04                 4117 	inc	a
   163A                    4118 00643$:
   163A 84                 4119 	div	ab
   163B 30 D5 02           4120 	jnb	F0,00644$
   163E F4                 4121 	cpl	a
   163F 04                 4122 	inc	a
   1640                    4123 00644$:
   1640 FC                 4124 	mov	r4,a
   1641 A2 D5              4125 	mov	c,F0
   1643 95 E0              4126 	subb	a,acc
   1645 FD                 4127 	mov	r5,a
   1646 75 F0 0A           4128 	mov	b,#0x0a
   1649 E5*0C              4129 	mov	a,_T_hour
   164B C2 D5              4130 	clr	F0
   164D 30 E7 04           4131 	jnb	acc.7,00645$
   1650 D2 D5              4132 	setb	F0
   1652 F4                 4133 	cpl	a
   1653 04                 4134 	inc	a
   1654                    4135 00645$:
   1654 84                 4136 	div	ab
   1655 E5 F0              4137 	mov	a,b
   1657 30 D5 02           4138 	jnb	F0,00646$
   165A F4                 4139 	cpl	a
   165B 04                 4140 	inc	a
   165C                    4141 00646$:
   165C FE                 4142 	mov	r6,a
   165D 33                 4143 	rlc	a
   165E 95 E0              4144 	subb	a,acc
   1660 FF                 4145 	mov	r7,a
   1661 C2 D5              4146 	clr	F0
   1663 75 F0 0A           4147 	mov	b,#0x0a
   1666 E5*0C              4148 	mov	a,_T_hour
   1668 30 E7 04           4149 	jnb	acc.7,00647$
   166B B2 D5              4150 	cpl	F0
   166D F4                 4151 	cpl	a
   166E 04                 4152 	inc	a
   166F                    4153 00647$:
   166F 84                 4154 	div	ab
   1670 30 D5 02           4155 	jnb	F0,00648$
   1673 F4                 4156 	cpl	a
   1674 04                 4157 	inc	a
   1675                    4158 00648$:
   1675 F5 82              4159 	mov	dpl,a
   1677 A2 D5              4160 	mov	c,F0
   1679 95 E0              4161 	subb	a,acc
   167B F5 83              4162 	mov	dph,a
   167D C0 07              4163 	push	ar7
   167F C0 00              4164 	push	ar0
   1681 C0 01              4165 	push	ar1
   1683 74 04              4166 	mov	a,#0x04
   1685 C0 E0              4167 	push	acc
   1687 E4                 4168 	clr	a
   1688 C0 E0              4169 	push	acc
   168A 74 0F              4170 	mov	a,#0x0F
   168C C0 E0              4171 	push	acc
   168E E4                 4172 	clr	a
   168F C0 E0              4173 	push	acc
   1691 C0 02              4174 	push	ar2
   1693 C0 03              4175 	push	ar3
   1695 C0 04              4176 	push	ar4
   1697 C0 05              4177 	push	ar5
   1699 74 0F              4178 	mov	a,#0x0F
   169B C0 E0              4179 	push	acc
   169D E4                 4180 	clr	a
   169E C0 E0              4181 	push	acc
   16A0 74 0F              4182 	mov	a,#0x0F
   16A2 C0 E0              4183 	push	acc
   16A4 E4                 4184 	clr	a
   16A5 C0 E0              4185 	push	acc
   16A7 C0 06              4186 	push	ar6
   16A9 C0 07              4187 	push	ar7
   16AB 12s01rD0           4188 	lcall	_Write7219ALL
   16AE E5 81              4189 	mov	a,sp
   16B0 24 F2              4190 	add	a,#0xf2
   16B2 F5 81              4191 	mov	sp,a
   16B4 D0 01              4192 	pop	ar1
   16B6 D0 00              4193 	pop	ar0
   16B8 D0 07              4194 	pop	ar7
   16BA D0 07              4195 	pop	ar7
   16BC 02s1Ar20           4196 	ljmp	00299$
   16BF                    4197 00281$:
                           4198 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:413: } else if (change_time == 2) {
   16BF 74 02              4199 	mov	a,#0x02
   16C1 B5*11 02           4200 	cjne	a,_change_time,00649$
   16C4 80 03              4201 	sjmp	00650$
   16C6                    4202 00649$:
   16C6 02s1Ar20           4203 	ljmp	00299$
   16C9                    4204 00650$:
                           4205 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:414: if (time_count <= 500) {
   16C9 C3                 4206 	clr	c
   16CA 74 F4              4207 	mov	a,#0xF4
   16CC 95*08              4208 	subb	a,_time_count
   16CE 74 01              4209 	mov	a,#0x01
   16D0 95*09              4210 	subb	a,(_time_count + 1)
   16D2 50 03              4211 	jnc	00651$
   16D4 02s17rE2           4212 	ljmp	00276$
   16D7                    4213 00651$:
                           4214 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:415: Write7219ALL(T_hour / 10, T_hour % 10, T_min / 10, T_min % 10, T_sec / 10, T_sec % 10, 0x0f, 4);
   16D7 C0 07              4215 	push	ar7
   16D9 75 F0 0A           4216 	mov	b,#0x0a
   16DC E5*0E              4217 	mov	a,_T_sec
   16DE C2 D5              4218 	clr	F0
   16E0 30 E7 04           4219 	jnb	acc.7,00652$
   16E3 D2 D5              4220 	setb	F0
   16E5 F4                 4221 	cpl	a
   16E6 04                 4222 	inc	a
   16E7                    4223 00652$:
   16E7 84                 4224 	div	ab
   16E8 E5 F0              4225 	mov	a,b
   16EA 30 D5 02           4226 	jnb	F0,00653$
   16ED F4                 4227 	cpl	a
   16EE 04                 4228 	inc	a
   16EF                    4229 00653$:
   16EF FE                 4230 	mov	r6,a
   16F0 FA                 4231 	mov	r2,a
   16F1 33                 4232 	rlc	a
   16F2 95 E0              4233 	subb	a,acc
   16F4 FB                 4234 	mov	r3,a
   16F5 C2 D5              4235 	clr	F0
   16F7 75 F0 0A           4236 	mov	b,#0x0a
   16FA E5*0E              4237 	mov	a,_T_sec
   16FC 30 E7 04           4238 	jnb	acc.7,00654$
   16FF B2 D5              4239 	cpl	F0
   1701 F4                 4240 	cpl	a
   1702 04                 4241 	inc	a
   1703                    4242 00654$:
   1703 84                 4243 	div	ab
   1704 30 D5 02           4244 	jnb	F0,00655$
   1707 F4                 4245 	cpl	a
   1708 04                 4246 	inc	a
   1709                    4247 00655$:
   1709 FC                 4248 	mov	r4,a
   170A A2 D5              4249 	mov	c,F0
   170C 95 E0              4250 	subb	a,acc
   170E FD                 4251 	mov	r5,a
   170F 75 F0 0A           4252 	mov	b,#0x0a
   1712 E5*0D              4253 	mov	a,_T_min
   1714 C2 D5              4254 	clr	F0
   1716 30 E7 04           4255 	jnb	acc.7,00656$
   1719 D2 D5              4256 	setb	F0
   171B F4                 4257 	cpl	a
   171C 04                 4258 	inc	a
   171D                    4259 00656$:
   171D 84                 4260 	div	ab
   171E E5 F0              4261 	mov	a,b
   1720 30 D5 02           4262 	jnb	F0,00657$
   1723 F4                 4263 	cpl	a
   1724 04                 4264 	inc	a
   1725                    4265 00657$:
   1725 FE                 4266 	mov	r6,a
   1726 C0 00              4267 	push	ar0
   1728 E5*00              4268 	mov	a,_bp
   172A 24 0E              4269 	add	a,#0x0e
   172C F8                 4270 	mov	r0,a
   172D A6 06              4271 	mov	@r0,ar6
   172F EE                 4272 	mov	a,r6
   1730 33                 4273 	rlc	a
   1731 95 E0              4274 	subb	a,acc
   1733 08                 4275 	inc	r0
   1734 F6                 4276 	mov	@r0,a
   1735 E5*00              4277 	mov	a,_bp
   1737 24 0C              4278 	add	a,#0x0c
   1739 F8                 4279 	mov	r0,a
   173A C2 D5              4280 	clr	F0
   173C 75 F0 0A           4281 	mov	b,#0x0a
   173F E5*0D              4282 	mov	a,_T_min
   1741 30 E7 04           4283 	jnb	acc.7,00658$
   1744 B2 D5              4284 	cpl	F0
   1746 F4                 4285 	cpl	a
   1747 04                 4286 	inc	a
   1748                    4287 00658$:
   1748 84                 4288 	div	ab
   1749 30 D5 02           4289 	jnb	F0,00659$
   174C F4                 4290 	cpl	a
   174D 04                 4291 	inc	a
   174E                    4292 00659$:
   174E F6                 4293 	mov	@r0,a
   174F A2 D5              4294 	mov	c,F0
   1751 95 E0              4295 	subb	a,acc
   1753 08                 4296 	inc	r0
   1754 F6                 4297 	mov	@r0,a
   1755 D0 00              4298 	pop	ar0
   1757 75 F0 0A           4299 	mov	b,#0x0a
   175A E5*0C              4300 	mov	a,_T_hour
   175C C2 D5              4301 	clr	F0
   175E 30 E7 04           4302 	jnb	acc.7,00660$
   1761 D2 D5              4303 	setb	F0
   1763 F4                 4304 	cpl	a
   1764 04                 4305 	inc	a
   1765                    4306 00660$:
   1765 84                 4307 	div	ab
   1766 E5 F0              4308 	mov	a,b
   1768 30 D5 02           4309 	jnb	F0,00661$
   176B F4                 4310 	cpl	a
   176C 04                 4311 	inc	a
   176D                    4312 00661$:
   176D FE                 4313 	mov	r6,a
   176E 33                 4314 	rlc	a
   176F 95 E0              4315 	subb	a,acc
   1771 FF                 4316 	mov	r7,a
   1772 C2 D5              4317 	clr	F0
   1774 75 F0 0A           4318 	mov	b,#0x0a
   1777 E5*0C              4319 	mov	a,_T_hour
   1779 30 E7 04           4320 	jnb	acc.7,00662$
   177C B2 D5              4321 	cpl	F0
   177E F4                 4322 	cpl	a
   177F 04                 4323 	inc	a
   1780                    4324 00662$:
   1780 84                 4325 	div	ab
   1781 30 D5 02           4326 	jnb	F0,00663$
   1784 F4                 4327 	cpl	a
   1785 04                 4328 	inc	a
   1786                    4329 00663$:
   1786 F5 82              4330 	mov	dpl,a
   1788 A2 D5              4331 	mov	c,F0
   178A 95 E0              4332 	subb	a,acc
   178C F5 83              4333 	mov	dph,a
   178E C0 07              4334 	push	ar7
   1790 C0 00              4335 	push	ar0
   1792 C0 01              4336 	push	ar1
   1794 74 04              4337 	mov	a,#0x04
   1796 C0 E0              4338 	push	acc
   1798 E4                 4339 	clr	a
   1799 C0 E0              4340 	push	acc
   179B 74 0F              4341 	mov	a,#0x0F
   179D C0 E0              4342 	push	acc
   179F E4                 4343 	clr	a
   17A0 C0 E0              4344 	push	acc
   17A2 C0 02              4345 	push	ar2
   17A4 C0 03              4346 	push	ar3
   17A6 C0 04              4347 	push	ar4
   17A8 C0 05              4348 	push	ar5
   17AA 85 00 F0           4349 	mov	b,ar0
   17AD E5*00              4350 	mov	a,_bp
   17AF 24 0E              4351 	add	a,#0x0e
   17B1 F8                 4352 	mov	r0,a
   17B2 E6                 4353 	mov	a,@r0
   17B3 C0 E0              4354 	push	acc
   17B5 08                 4355 	inc	r0
   17B6 E6                 4356 	mov	a,@r0
   17B7 C0 E0              4357 	push	acc
   17B9 A8 F0              4358 	mov	r0,b
   17BB 85 00 F0           4359 	mov	b,ar0
   17BE E5*00              4360 	mov	a,_bp
   17C0 24 0C              4361 	add	a,#0x0c
   17C2 F8                 4362 	mov	r0,a
   17C3 E6                 4363 	mov	a,@r0
   17C4 C0 E0              4364 	push	acc
   17C6 08                 4365 	inc	r0
   17C7 E6                 4366 	mov	a,@r0
   17C8 C0 E0              4367 	push	acc
   17CA C0 06              4368 	push	ar6
   17CC C0 07              4369 	push	ar7
   17CE 12s01rD0           4370 	lcall	_Write7219ALL
   17D1 E5 81              4371 	mov	a,sp
   17D3 24 F2              4372 	add	a,#0xf2
   17D5 F5 81              4373 	mov	sp,a
   17D7 D0 01              4374 	pop	ar1
   17D9 D0 00              4375 	pop	ar0
   17DB D0 07              4376 	pop	ar7
   17DD D0 07              4377 	pop	ar7
   17DF 02s1Ar20           4378 	ljmp	00299$
   17E2                    4379 00276$:
                           4380 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:417: Write7219ALL(T_hour / 10, T_hour % 10, T_min / 10, T_min % 10, 0x0f, 0x0f, 0x0f, 4);
   17E2 C0 07              4381 	push	ar7
   17E4 75 F0 0A           4382 	mov	b,#0x0a
   17E7 E5*0D              4383 	mov	a,_T_min
   17E9 C2 D5              4384 	clr	F0
   17EB 30 E7 04           4385 	jnb	acc.7,00664$
   17EE D2 D5              4386 	setb	F0
   17F0 F4                 4387 	cpl	a
   17F1 04                 4388 	inc	a
   17F2                    4389 00664$:
   17F2 84                 4390 	div	ab
   17F3 E5 F0              4391 	mov	a,b
   17F5 30 D5 02           4392 	jnb	F0,00665$
   17F8 F4                 4393 	cpl	a
   17F9 04                 4394 	inc	a
   17FA                    4395 00665$:
   17FA FE                 4396 	mov	r6,a
   17FB FA                 4397 	mov	r2,a
   17FC 33                 4398 	rlc	a
   17FD 95 E0              4399 	subb	a,acc
   17FF FB                 4400 	mov	r3,a
   1800 C2 D5              4401 	clr	F0
   1802 75 F0 0A           4402 	mov	b,#0x0a
   1805 E5*0D              4403 	mov	a,_T_min
   1807 30 E7 04           4404 	jnb	acc.7,00666$
   180A B2 D5              4405 	cpl	F0
   180C F4                 4406 	cpl	a
   180D 04                 4407 	inc	a
   180E                    4408 00666$:
   180E 84                 4409 	div	ab
   180F 30 D5 02           4410 	jnb	F0,00667$
   1812 F4                 4411 	cpl	a
   1813 04                 4412 	inc	a
   1814                    4413 00667$:
   1814 FC                 4414 	mov	r4,a
   1815 A2 D5              4415 	mov	c,F0
   1817 95 E0              4416 	subb	a,acc
   1819 FD                 4417 	mov	r5,a
   181A 75 F0 0A           4418 	mov	b,#0x0a
   181D E5*0C              4419 	mov	a,_T_hour
   181F C2 D5              4420 	clr	F0
   1821 30 E7 04           4421 	jnb	acc.7,00668$
   1824 D2 D5              4422 	setb	F0
   1826 F4                 4423 	cpl	a
   1827 04                 4424 	inc	a
   1828                    4425 00668$:
   1828 84                 4426 	div	ab
   1829 E5 F0              4427 	mov	a,b
   182B 30 D5 02           4428 	jnb	F0,00669$
   182E F4                 4429 	cpl	a
   182F 04                 4430 	inc	a
   1830                    4431 00669$:
   1830 FE                 4432 	mov	r6,a
   1831 33                 4433 	rlc	a
   1832 95 E0              4434 	subb	a,acc
   1834 FF                 4435 	mov	r7,a
   1835 C2 D5              4436 	clr	F0
   1837 75 F0 0A           4437 	mov	b,#0x0a
   183A E5*0C              4438 	mov	a,_T_hour
   183C 30 E7 04           4439 	jnb	acc.7,00670$
   183F B2 D5              4440 	cpl	F0
   1841 F4                 4441 	cpl	a
   1842 04                 4442 	inc	a
   1843                    4443 00670$:
   1843 84                 4444 	div	ab
   1844 30 D5 02           4445 	jnb	F0,00671$
   1847 F4                 4446 	cpl	a
   1848 04                 4447 	inc	a
   1849                    4448 00671$:
   1849 F5 82              4449 	mov	dpl,a
   184B A2 D5              4450 	mov	c,F0
   184D 95 E0              4451 	subb	a,acc
   184F F5 83              4452 	mov	dph,a
   1851 C0 07              4453 	push	ar7
   1853 C0 00              4454 	push	ar0
   1855 C0 01              4455 	push	ar1
   1857 74 04              4456 	mov	a,#0x04
   1859 C0 E0              4457 	push	acc
   185B E4                 4458 	clr	a
   185C C0 E0              4459 	push	acc
   185E 74 0F              4460 	mov	a,#0x0F
   1860 C0 E0              4461 	push	acc
   1862 E4                 4462 	clr	a
   1863 C0 E0              4463 	push	acc
   1865 74 0F              4464 	mov	a,#0x0F
   1867 C0 E0              4465 	push	acc
   1869 E4                 4466 	clr	a
   186A C0 E0              4467 	push	acc
   186C 74 0F              4468 	mov	a,#0x0F
   186E C0 E0              4469 	push	acc
   1870 E4                 4470 	clr	a
   1871 C0 E0              4471 	push	acc
   1873 C0 02              4472 	push	ar2
   1875 C0 03              4473 	push	ar3
   1877 C0 04              4474 	push	ar4
   1879 C0 05              4475 	push	ar5
   187B C0 06              4476 	push	ar6
   187D C0 07              4477 	push	ar7
   187F 12s01rD0           4478 	lcall	_Write7219ALL
   1882 E5 81              4479 	mov	a,sp
   1884 24 F2              4480 	add	a,#0xf2
   1886 F5 81              4481 	mov	sp,a
   1888 D0 01              4482 	pop	ar1
   188A D0 00              4483 	pop	ar0
   188C D0 07              4484 	pop	ar7
   188E D0 07              4485 	pop	ar7
   1890 02s1Ar20           4486 	ljmp	00299$
   1893                    4487 00289$:
                           4488 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:420: } else if (mode == 5) {
   1893 C0 00              4489 	push	ar0
   1895 E5*00              4490 	mov	a,_bp
   1897 24 08              4491 	add	a,#0x08
   1899 F8                 4492 	mov	r0,a
   189A B6 05 02           4493 	cjne	@r0,#0x05,00672$
   189D 80 05              4494 	sjmp	00673$
   189F                    4495 00672$:
   189F D0 00              4496 	pop	ar0
   18A1 02s1Ar20           4497 	ljmp	00299$
   18A4                    4498 00673$:
   18A4 D0 00              4499 	pop	ar0
                           4500 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:421: Write7219(8, ms1 / 10000);
   18A6 C0 07              4501 	push	ar7
   18A8 C0 00              4502 	push	ar0
   18AA C0 01              4503 	push	ar1
   18AC 74 10              4504 	mov	a,#0x10
   18AE C0 E0              4505 	push	acc
   18B0 74 27              4506 	mov	a,#0x27
   18B2 C0 E0              4507 	push	acc
   18B4 85*0A 82           4508 	mov	dpl,_ms1
   18B7 85*0B 83           4509 	mov	dph,(_ms1 + 1)
   18BA 12s00r00           4510 	lcall	__divuint
   18BD AE 82              4511 	mov	r6,dpl
   18BF AF 83              4512 	mov	r7,dph
   18C1 15 81              4513 	dec	sp
   18C3 15 81              4514 	dec	sp
   18C5 D0 01              4515 	pop	ar1
   18C7 D0 00              4516 	pop	ar0
   18C9 C0 07              4517 	push	ar7
   18CB C0 00              4518 	push	ar0
   18CD C0 01              4519 	push	ar1
   18CF C0 06              4520 	push	ar6
   18D1 75 82 08           4521 	mov	dpl,#0x08
   18D4 12s00r3D           4522 	lcall	_Write7219
   18D7 15 81              4523 	dec	sp
   18D9 D0 01              4524 	pop	ar1
   18DB D0 00              4525 	pop	ar0
   18DD D0 07              4526 	pop	ar7
                           4527 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:422: Write7219(7, ms1 / 1000 % 10);
   18DF C0 00              4528 	push	ar0
   18E1 C0 01              4529 	push	ar1
   18E3 74 E8              4530 	mov	a,#0xE8
   18E5 C0 E0              4531 	push	acc
   18E7 74 03              4532 	mov	a,#0x03
   18E9 C0 E0              4533 	push	acc
   18EB 85*0A 82           4534 	mov	dpl,_ms1
   18EE 85*0B 83           4535 	mov	dph,(_ms1 + 1)
   18F1 12s00r00           4536 	lcall	__divuint
   18F4 AE 82              4537 	mov	r6,dpl
   18F6 AF 83              4538 	mov	r7,dph
   18F8 15 81              4539 	dec	sp
   18FA 15 81              4540 	dec	sp
   18FC 74 0A              4541 	mov	a,#0x0A
   18FE C0 E0              4542 	push	acc
   1900 E4                 4543 	clr	a
   1901 C0 E0              4544 	push	acc
   1903 8E 82              4545 	mov	dpl,r6
   1905 8F 83              4546 	mov	dph,r7
   1907 12s00r00           4547 	lcall	__moduint
   190A AE 82              4548 	mov	r6,dpl
   190C AF 83              4549 	mov	r7,dph
   190E 15 81              4550 	dec	sp
   1910 15 81              4551 	dec	sp
   1912 D0 01              4552 	pop	ar1
   1914 D0 00              4553 	pop	ar0
   1916 C0 07              4554 	push	ar7
   1918 C0 00              4555 	push	ar0
   191A C0 01              4556 	push	ar1
   191C C0 06              4557 	push	ar6
   191E 75 82 07           4558 	mov	dpl,#0x07
   1921 12s00r3D           4559 	lcall	_Write7219
   1924 15 81              4560 	dec	sp
   1926 D0 01              4561 	pop	ar1
   1928 D0 00              4562 	pop	ar0
   192A D0 07              4563 	pop	ar7
                           4564 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:423: Write7219(6, ms1 / 100 % 10);
   192C C0 00              4565 	push	ar0
   192E C0 01              4566 	push	ar1
   1930 74 64              4567 	mov	a,#0x64
   1932 C0 E0              4568 	push	acc
   1934 E4                 4569 	clr	a
   1935 C0 E0              4570 	push	acc
   1937 85*0A 82           4571 	mov	dpl,_ms1
   193A 85*0B 83           4572 	mov	dph,(_ms1 + 1)
   193D 12s00r00           4573 	lcall	__divuint
   1940 AE 82              4574 	mov	r6,dpl
   1942 AF 83              4575 	mov	r7,dph
   1944 15 81              4576 	dec	sp
   1946 15 81              4577 	dec	sp
   1948 74 0A              4578 	mov	a,#0x0A
   194A C0 E0              4579 	push	acc
   194C E4                 4580 	clr	a
   194D C0 E0              4581 	push	acc
   194F 8E 82              4582 	mov	dpl,r6
   1951 8F 83              4583 	mov	dph,r7
   1953 12s00r00           4584 	lcall	__moduint
   1956 AE 82              4585 	mov	r6,dpl
   1958 AF 83              4586 	mov	r7,dph
   195A 15 81              4587 	dec	sp
   195C 15 81              4588 	dec	sp
   195E D0 01              4589 	pop	ar1
   1960 D0 00              4590 	pop	ar0
   1962 C0 07              4591 	push	ar7
   1964 C0 00              4592 	push	ar0
   1966 C0 01              4593 	push	ar1
   1968 C0 06              4594 	push	ar6
   196A 75 82 06           4595 	mov	dpl,#0x06
   196D 12s00r3D           4596 	lcall	_Write7219
   1970 15 81              4597 	dec	sp
   1972 D0 01              4598 	pop	ar1
   1974 D0 00              4599 	pop	ar0
   1976 D0 07              4600 	pop	ar7
                           4601 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:424: Write7219(5, ms1 / 10 % 10);
   1978 C0 00              4602 	push	ar0
   197A C0 01              4603 	push	ar1
   197C 74 0A              4604 	mov	a,#0x0A
   197E C0 E0              4605 	push	acc
   1980 E4                 4606 	clr	a
   1981 C0 E0              4607 	push	acc
   1983 85*0A 82           4608 	mov	dpl,_ms1
   1986 85*0B 83           4609 	mov	dph,(_ms1 + 1)
   1989 12s00r00           4610 	lcall	__divuint
   198C AE 82              4611 	mov	r6,dpl
   198E AF 83              4612 	mov	r7,dph
   1990 15 81              4613 	dec	sp
   1992 15 81              4614 	dec	sp
   1994 74 0A              4615 	mov	a,#0x0A
   1996 C0 E0              4616 	push	acc
   1998 E4                 4617 	clr	a
   1999 C0 E0              4618 	push	acc
   199B 8E 82              4619 	mov	dpl,r6
   199D 8F 83              4620 	mov	dph,r7
   199F 12s00r00           4621 	lcall	__moduint
   19A2 AE 82              4622 	mov	r6,dpl
   19A4 AF 83              4623 	mov	r7,dph
   19A6 15 81              4624 	dec	sp
   19A8 15 81              4625 	dec	sp
   19AA D0 01              4626 	pop	ar1
   19AC D0 00              4627 	pop	ar0
   19AE C0 07              4628 	push	ar7
   19B0 C0 00              4629 	push	ar0
   19B2 C0 01              4630 	push	ar1
   19B4 C0 06              4631 	push	ar6
   19B6 75 82 05           4632 	mov	dpl,#0x05
   19B9 12s00r3D           4633 	lcall	_Write7219
   19BC 15 81              4634 	dec	sp
   19BE D0 01              4635 	pop	ar1
   19C0 D0 00              4636 	pop	ar0
   19C2 D0 07              4637 	pop	ar7
                           4638 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:425: Write7219(4, ms1 % 10);
   19C4 C0 00              4639 	push	ar0
   19C6 C0 01              4640 	push	ar1
   19C8 74 0A              4641 	mov	a,#0x0A
   19CA C0 E0              4642 	push	acc
   19CC E4                 4643 	clr	a
   19CD C0 E0              4644 	push	acc
   19CF 85*0A 82           4645 	mov	dpl,_ms1
   19D2 85*0B 83           4646 	mov	dph,(_ms1 + 1)
   19D5 12s00r00           4647 	lcall	__moduint
   19D8 AE 82              4648 	mov	r6,dpl
   19DA AF 83              4649 	mov	r7,dph
   19DC 15 81              4650 	dec	sp
   19DE 15 81              4651 	dec	sp
   19E0 D0 01              4652 	pop	ar1
   19E2 D0 00              4653 	pop	ar0
   19E4 C0 07              4654 	push	ar7
   19E6 C0 00              4655 	push	ar0
   19E8 C0 01              4656 	push	ar1
   19EA C0 06              4657 	push	ar6
   19EC 75 82 04           4658 	mov	dpl,#0x04
   19EF 12s00r3D           4659 	lcall	_Write7219
   19F2 15 81              4660 	dec	sp
                           4661 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:426: Write7219(3, 0x0f);
   19F4 74 0F              4662 	mov	a,#0x0F
   19F6 C0 E0              4663 	push	acc
   19F8 75 82 03           4664 	mov	dpl,#0x03
   19FB 12s00r3D           4665 	lcall	_Write7219
   19FE 15 81              4666 	dec	sp
                           4667 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:427: Write7219(2, 0x0f);
   1A00 74 0F              4668 	mov	a,#0x0F
   1A02 C0 E0              4669 	push	acc
   1A04 75 82 02           4670 	mov	dpl,#0x02
   1A07 12s00r3D           4671 	lcall	_Write7219
   1A0A 15 81              4672 	dec	sp
                           4673 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:428: Write7219(1, 5);
   1A0C 74 05              4674 	mov	a,#0x05
   1A0E C0 E0              4675 	push	acc
   1A10 75 82 01           4676 	mov	dpl,#0x01
   1A13 12s00r3D           4677 	lcall	_Write7219
   1A16 15 81              4678 	dec	sp
   1A18 D0 01              4679 	pop	ar1
   1A1A D0 00              4680 	pop	ar0
   1A1C D0 07              4681 	pop	ar7
                           4682 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:436: delay_ms(20);
   1A1E D0 07              4683 	pop	ar7
                           4684 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:428: Write7219(1, 5);
   1A20                    4685 00299$:
                           4686 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:431: toff = 30000 - ton;
   1A20 74 30              4687 	mov	a,#0x30
   1A22 C3                 4688 	clr	c
   1A23 95*02              4689 	subb	a,_ton
   1A25 F5*04              4690 	mov	_toff,a
   1A27 74 75              4691 	mov	a,#0x75
   1A29 95*03              4692 	subb	a,(_ton + 1)
   1A2B F5*05              4693 	mov	(_toff + 1),a
                           4694 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:432: prebtn0 = INT0;
   1A2D A2 B2              4695 	mov	c,_INT0
   1A2F E4                 4696 	clr	a
   1A30 33                 4697 	rlc	a
   1A31 FA                 4698 	mov	r2,a
                           4699 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:433: prebtn1 = INT1;
   1A32 A2 B3              4700 	mov	c,_INT1
   1A34 E4                 4701 	clr	a
   1A35 33                 4702 	rlc	a
   1A36 FB                 4703 	mov	r3,a
                           4704 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:434: prebtn2 = P2_0;
   1A37 A2 A0              4705 	mov	c,_P2_0
   1A39 E4                 4706 	clr	a
   1A3A 33                 4707 	rlc	a
   1A3B FC                 4708 	mov	r4,a
                           4709 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:435: prebtn3 = P2_1;
   1A3C A2 A1              4710 	mov	c,_P2_1
   1A3E E4                 4711 	clr	a
   1A3F 33                 4712 	rlc	a
   1A40 FD                 4713 	mov	r5,a
                           4714 ;	C:\HSU-PO~1\MICROP~1\FINAL_~1\main.c:436: delay_ms(20);
   1A41 90 00 14           4715 	mov	dptr,#0x0014
   1A44 C0 02              4716 	push	ar2
   1A46 C0 03              4717 	push	ar3
   1A48 C0 04              4718 	push	ar4
   1A4A C0 05              4719 	push	ar5
   1A4C C0 07              4720 	push	ar7
   1A4E C0 00              4721 	push	ar0
   1A50 C0 01              4722 	push	ar1
   1A52 12s00rBC           4723 	lcall	_delay_ms
   1A55 D0 01              4724 	pop	ar1
   1A57 D0 00              4725 	pop	ar0
   1A59 D0 07              4726 	pop	ar7
   1A5B D0 05              4727 	pop	ar5
   1A5D D0 04              4728 	pop	ar4
   1A5F D0 03              4729 	pop	ar3
   1A61 D0 02              4730 	pop	ar2
   1A63 02s03r87           4731 	ljmp	00301$
   1A66 85*00 81           4732 	mov	sp,_bp
   1A69 D0*00              4733 	pop	_bp
   1A6B 22                 4734 	ret
                           4735 	.area CSEG    (CODE)
                           4736 	.area CONST   (CODE)
                           4737 	.area XINIT   (CODE)
                           4738 	.area CABS    (ABS,CODE)
